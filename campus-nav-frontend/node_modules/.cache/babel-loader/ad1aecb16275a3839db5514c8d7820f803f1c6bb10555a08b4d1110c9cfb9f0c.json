{"ast":null,"code":"var _jsxFileName = \"/home/rguktrkvalley/Desktop/CampusNavigationFinal/CampusNavigation/campus-nav-frontend/src/pages/Map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React from \"react\"\n// import { Link } from 'react-router-dom';\n// import  { useEffect, useRef, useState } from \"react\";\n// import { MapContainer, TileLayer, useMap, LayersControl } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// //import Fuse from \"fuse.js\";\n\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n// //import { Link } from 'react-router-dom';\n\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n\n//   useEffect(() => {\n\n//     if (!map) return;\n//     if (!mapRef.current) return;\n\n//     // Initialize and add the compass control\n//     const compass = new L.Control.Compass({\n//       autoActive: true,\n//       showDigit: true,\n//     });\n//     map.addControl(compass);\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`} &nbsp; | &nbsp;\n//           ⏱ Time: {duration} min\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n\n//   const customLocations = {\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"9AM–6PM\", description: \"A place for study and research\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Place for shopping and dining\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"Emergency medical services\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \"Place of worship\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Sports facilities\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–7PM\", description: \"Computer labs and resources\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Place to send and receive\" },\n\n//     // \"Library\": { lat: 14.335461, lng: 78.538369 ,type:\"study\",description:\"Consists of many resources to refer and a place where we can study peacefully\"},\n//     // \"CSE Block\": { lat: 14.336241, lng: 78.541992,type:\"Department\",description:\"Department of Computer Science and Engineering\"},\n//     // \"ECE Block\": { lat: 14.334558, lng: 78.541885 ,type:\"Department\",description:\"Department of Electronics and Communication Engineering\"},\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188,type:\"Department\",hours:\"\",description:\"Department of Metallurgical and Materials Engineering\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395,type:\"Department\",description:\"Department of Electrical and Electronics Engineering\" },\n\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308 ,type:\"Department\",description:\"Department of Mechanical Engineering\"},\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505 ,type:\"Department\",description:\"Department of Chemical Engineering\"},\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514,type:\"\",description:\"Department of Civil Engineering\" },\n\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223,type:\"\",description:\"\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779 ,type:\"Department\",description:\"\"},\n\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412,type:\"Hostel\",description:\"Accomodation for female students\" },\n\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720,type:\"Hostel\",description:\"Accomodation for male students\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234,type:\"Hostel\",description:\"Accomodation for male students\" },\n\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152,type:\"Department\",description:\"place \" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661,type:\"\",description:\"\" },\n\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791,type:\"\",description:\"\" },\n//    \"Student Activity Center\": { lat: 14.338203, lng: 78.540398,type:\"\",description:\"\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465,type:\"\",description:\"\"},\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477 ,type:\"Food\",description:\"\"},\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701 ,type:\"Food\",description:\"\"},\n\n//     \"SBI\": { lat: 14.337374, lng: 78.534579,type:\"Bank\",description:\"\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249,type:\"\",description:\"\"},\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874,type:\"Play\",description:\"\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652 ,type:\"\",description:\"\"},\n\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744,type:\"Hostel\",description:\"\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896,type:\"Hostel\",description:\"\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776,type:\"Academic\",description:\"\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480,type:\"Religious\",description:\"\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775,type:\"Laundry\",description:\"\" },\n\n//   };\n\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//         <h3>${name}</h3>\n//         <p><strong>Type:</strong> ${type}</p>\n//         <p><strong>Hours:</strong> ${hours}</p>\n//         <p><strong>Description:</strong> ${description}</p>\n//       `;\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n\n//   return (\n\n//     <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n\n//       {/* Input Bar */}\n//       <div style={{\n//   position: \"absolute\",\n//   top: 10,\n//   left: \"50%\",\n//   transform: \"translateX(-50%)\",\n//   zIndex: 1000,\n//   display: \"flex\",\n//   gap: \"8px\",\n//   background: \"#fff\",\n//   padding: \"10px\",\n//   borderRadius: \"8px\",\n//   boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n// }}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n\n//   {/* Travel Mode Dropdown */}\n//   <select\n//     value={travelMode}\n//     onChange={(e) => setTravelMode(e.target.value)}\n//     style={{\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       border: \"1px solid #ccc\",\n//       background: \"#fff\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <option value=\"walk\">🚶 Walk</option>\n//     <option value=\"bicycle\">🚴 Bicycle</option>\n//     <option value=\"vehicle\">🚗 Vehicle</option>\n//   </select>\n\n//   <button\n//     onClick={handleRoute}\n//     style={{\n//       background: \"#28a745\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     Route\n//   </button>\n//   <div className=\"photos-link\">\n//         <Link to=\"/photos\">Photos</Link>\n//       </div>\n// </div>\n\n//       {/* Map */}\n//       <MapContainer\n\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n\n//           compass.addTo(mapRef.current);\n//         }}\n\n//       >\n\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//         />\n//       <LayersControl position=\"topright\">\n//   <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//     <TileLayer\n//       url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//     />\n//   </LayersControl.BaseLayer>\n\n//   <LayersControl.BaseLayer name=\"Satellite View\">\n//     <TileLayer\n//       attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//       url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//     />\n//   </LayersControl.BaseLayer>\n// </LayersControl>\n\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//        {/* Logout */}\n//        <button\n//         onClick={handleLogout}\n//         style={{\n//           position: \"absolute\",\n//           right: 10,\n//           bottom: 25,\n//           padding: \"8px 12px\",\n//           background: \"red\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//           zIndex: 1000,\n//         }}\n//       >\n//         Logout\n//       </button>\n//     </div>\n\n//   );\n// };\n\n// export default MapPage;\n\n// import React from \"react\"\n// import { Link } from 'react-router-dom';\n// import  { useEffect, useRef, useState } from \"react\";\n// import { MapContainer, TileLayer, useMap, LayersControl } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// //import Fuse from \"fuse.js\";\n\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n// //import { Link } from 'react-router-dom';\n\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n\n//   useEffect(() => {\n\n//     if (!map) return;\n//     if (!mapRef.current) return;\n//   const compass = new L.Control.Compass({\n//     autoActive: true,\n//     showDigit: true,\n//   }).addTo(map);\n\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`}\n\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n\n//   const customLocations = {\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"9AM–6PM\", description: \"A place for study and research\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Place for shopping and dining\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"Emergency medical services\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \"Place of worship\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Sports facilities\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–7PM\", description: \"Computer labs and resources\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Place to send and receive\" },\n\n//     // \"Library\": { lat: 14.335461, lng: 78.538369 ,type:\"study\",description:\"Consists of many resources to refer and a place where we can study peacefully\"},\n//     // \"CSE Block\": { lat: 14.336241, lng: 78.541992,type:\"Department\",description:\"Department of Computer Science and Engineering\"},\n//     // \"ECE Block\": { lat: 14.334558, lng: 78.541885 ,type:\"Department\",description:\"Department of Electronics and Communication Engineering\"},\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188,type:\"Department\",hours:\"\",description:\"Department of Metallurgical and Materials Engineering\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395,type:\"Department\",description:\"Department of Electrical and Electronics Engineering\" },\n\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308 ,type:\"Department\",description:\"Department of Mechanical Engineering\"},\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505 ,type:\"Department\",description:\"Department of Chemical Engineering\"},\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514,type:\"\",description:\"Department of Civil Engineering\" },\n\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223,type:\"\",description:\"\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779 ,type:\"Department\",description:\"\"},\n\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412,type:\"Hostel\",description:\"Accomodation for female students\" },\n\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720,type:\"Hostel\",description:\"Accomodation for male students\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234,type:\"Hostel\",description:\"Accomodation for male students\" },\n\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152,type:\"Department\",description:\"place \" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661,type:\"\",description:\"\" },\n\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791,type:\"\",description:\"\" },\n//    \"Student Activity Center\": { lat: 14.338203, lng: 78.540398,type:\"\",description:\"\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465,type:\"\",description:\"\"},\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477 ,type:\"Food\",description:\"\"},\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701 ,type:\"Food\",description:\"\"},\n\n//     \"SBI\": { lat: 14.337374, lng: 78.534579,type:\"Bank\",description:\"\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249,type:\"\",description:\"\"},\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874,type:\"Play\",description:\"\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652 ,type:\"\",description:\"\"},\n\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744,type:\"Hostel\",description:\"\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896,type:\"Hostel\",description:\"\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776,type:\"Academic\",description:\"\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480,type:\"Religious\",description:\"\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775,type:\"Laundry\",description:\"\" },\n\n//   };\n\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//       <div>\n//         <h3>${name}</h3>\n//         <p><strong>Type:</strong> ${type}</p>\n//         <p><strong>Hours:</strong> ${hours}</p>\n//         <p><strong>Description:</strong> ${description}</p>\n//       </div>\n//     `;\n\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n\n//   return (\n\n//     <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n\n//       {/* Input Bar */}\n//       <div style={{\n//   position: \"absolute\",\n//   top: 10,\n//   left: \"50%\",\n//   transform: \"translateX(-50%)\",\n//   zIndex: 1000,\n//   display: \"flex\",\n//   gap: \"8px\",\n//   background: \"#fff\",\n//   padding: \"10px\",\n//   borderRadius: \"8px\",\n//   boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n// }}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n\n//   {/* Travel Mode Dropdown */}\n//   <select\n//     value={travelMode}\n//     onChange={(e) => setTravelMode(e.target.value)}\n//     style={{\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       border: \"1px solid #ccc\",\n//       background: \"#fff\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <option value=\"walk\">🚶 Walk</option>\n//     <option value=\"bicycle\">🚴 Bicycle</option>\n//     <option value=\"vehicle\">🚗 Vehicle</option>\n//   </select>\n\n//   <button\n//     onClick={handleRoute}\n//     style={{\n//       background: \"#28a745\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     Route\n//   </button>\n//   <div className=\"photos-link\">\n//         <Link to=\"/photos\">Photos</Link>\n//       </div>\n// </div>\n\n//       {/* Map */}\n//       <MapContainer\n\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n\n//           compass.addTo(mapRef.current);\n//         }}\n\n//       >\n\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//         />\n//       <LayersControl position=\"topright\">\n//   <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//     <TileLayer\n//       url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//     />\n//   </LayersControl.BaseLayer>\n\n//   <LayersControl.BaseLayer name=\"Satellite View\">\n//     <TileLayer\n//       attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//       url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//     />\n//   </LayersControl.BaseLayer>\n// </LayersControl>\n\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//        {/* Logout */}\n//        <button\n//         onClick={handleLogout}\n//         style={{\n//           position: \"absolute\",\n//           right: 10,\n//           bottom: 25,\n//           padding: \"8px 12px\",\n//           background: \"red\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//           zIndex: 1000,\n//         }}\n//       >\n//         Logout\n//       </button>\n//     </div>\n\n//   );\n// };\n\n// export default MapPage;\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// //import { Link } from 'react-router-dom';\n// import { MapContainer, TileLayer, useMap, LayersControl, Marker, Popup } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// import Navbar from './Navbar'; // adjust the path if Navbar.js is in a different folder\n// import {GeoSearchControl, OpenStreetMapProvider} from 'leaflet-geosearch';\n\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n\n// const handleLogout = () => {\n//   localStorage.removeItem(\"token\"); // Or whatever key you're using\n//   window.location.href = \"/login\"; // Adjust if using React Router\n// };\n\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n\n//   useEffect(() => {\n//     if (!map) return;\n//     if (mapRef.current) {\n//       const compass = new L.Control.Compass({\n//         autoActive: true,\n//         showDigit: true,\n//       });\n//       compass.addTo(mapRef.current);\n//     }\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`} &nbsp; | &nbsp;\n//           ⏱ Time: {duration} min\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [position, setPosition] = useState(null);\n//   const [address, setAddress] = useState('Fetching Address...')\n\n//   const [activeInput, setActiveInput] = useState(null); // NEW: Track which input is focused\n\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n\n//   const customLocations = {\n\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223, type: \"Academic\", hours: \"9AM–10PM\", description: \"Centralized building with classrooms, seminar halls, and faculty offices for academic activities\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779, type: \"Academic\", hours: \"9AM–10PM\", description: \"Administrative and teaching space for various departmental operations and academic sessions\" },\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720, type: \"Hostel\", hours: \"24x7\", description: \"On-campus residential block for male students with secure lodging and basic amenities\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234, type: \"Hostel\", hours: \"24x7\", description: \"Well-facilitated hostel for male students offering comfort, security, and communal living\" },\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505, type: \"Department\", hours: \"9AM–5PM\", description: \"Dedicated facility for chemical engineering studies, including research and lab-based learning.\" },\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514, type: \"Department\", hours: \"9AM–5PM\", description: \"Engineering block supporting civil engineering courses, design labs, and project spaces\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–5PM\", description: \"Central computing facility with computer labs and high-speed internet resources.\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering providing academic and technical infrastructure\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering offering labs and classrooms\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electrical and Electronics Engineering supporting circuits, machines, and power systems\" },\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students with safety and residential services.\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Residential facility for girl students with necessary hostel amenities.\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652, type: \"Guest facility\", hours: \"24x7\", description: \"Well-maintained guest house for hosting visiting faculty, guests, and dignitaries.\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"24x7 medical facility for basic healthcare and emergency services on campus\" },\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791, type: \"Administration\", hours: \"9AM–5PM\", description: \"Institutional cell responsible for maintaining and enhancing academic quality\" },\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152, type: \"Department\", hours: \"9AM–5PM\", description: \"Lab facility used by multiple departments for academic experiments and practical sessions\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775, type: \"Laundry\", hours: \"9AM–5PM\", description: \"Laundry service center for washing and drying hostel students’ clothes.\" },\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"7AM–11PM\", description: \"Central resource hub with a wide collection of books, journals, and study spaces.\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480, type: \"Religious\", hours: \"9AM–7PM\", description: \"Place of worship for Muslim students and staff within the campus.\" },\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Mechanical Engineering equipped for academic and technical training.\" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661, type: \"Department\", hours: \"9AM–5PM\", description: \"Workshop with tools and machinery for mechanical hands-on training and fabrication\" },\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477, type: \"Food\", hours: \"7AM–9PM\", description: \"Dining hall serving meals to students with regular breakfast, lunch, and dinner\" },\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701, type: \"Food\", hours: \"7AM–9PM\", description: \"Catering facility providing nutritious food to hostel residents and students.\" },\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Metallurgical and Materials Engineering for academic and research purposes\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776, type: \"Academic\", hours: \"9AM–5PM\", description: \"Academic buildings from the original campus supporting multiple disciplines\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592, type: \"Hostel\", hours: \"24x7\", description: \"Boys’ hostel located in the older section of the campus with residential facilities.\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896, type: \"Hostel\", hours: \"24x7\", description: \"Another boys’ hostel in the old campus with accommodation services.\" },\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744, type: \"Hostel\", hours: \"24x7\", description: \"Girls’ hostel located in the old campus area offering safe living spaces.\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914, type: \"Hostel\", hours: \"24x7\", description: \"Second girls’ hostel from the old block, supporting student housing.\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249, type: \"Security\", hours: \"24x7\", description: \"Campus law enforcement unit ensuring discipline, emergency handling, and general safety.\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Postal unit on campus for sending letters, parcels, and accessing courier services.\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465, type: \"Utility\", hours: \"9AM–5PM\", description: \"Electricity management center responsible for power regulation and backup systems.\" },\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874, type: \"Play\", hours: \"6AM-8PM\", description: \"Multipurpose playground for sports practices, matches, and college-level tournaments.\" },\n//     \"SBI\": { lat: 14.337374, lng: 78.534579, type: \"Bank\", hours: \"9AM–5PM\", description: \"Banking facility providing financial services including ATM, account handling, and transactions\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Commercial area within campus for everyday shopping, snacks, and general items\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Indoor and outdoor sports facilities including courts, tracks, and fitness zones.\" },\n//     \"Student Activity Center\": { lat: 14.338203, lng: 78.540398, type: \"Recreational\", hours: \"9AM–5PM\", description: \" Campus venue for student initiatives, cultural programs, and club activities\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \" Spiritual place for religious observance and peaceful reflection.\" },\n\n//   };\n\n//   // Function to handle live location\n//   const handleLiveLocation = () => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           const { latitude, longitude } = position.coords;\n//           const userLocation = [latitude, longitude]\n//           setPosition([latitude, longitude]);\n\n//           // Set the map view to the user's location with maximum zoom\n//           mapRef.current?.setView(userLocation, mapRef.current.getMaxZoom());\n\n//           // Optionally, add a marker at the user's location\n//           L.marker(userLocation)\n//             .addTo(mapRef.current)\n//             .bindPopup(\"📍 You are here!\")\n//             .openPopup();\n//         },\n//         (error) => {\n//           alert(\"Unable to retrieve your location. Please enable location services.\");\n//           console.error(error);\n//         }\n//       );\n//     } else {\n//       alert(\"Geolocation is not supported by your browser.\");\n//     }\n//   };\n\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n\n//   // Function to filter locations based on search query\n//   const filterSuggestions = (query) => {\n//     const lowerQuery = query.toLowerCase();\n//     const filtered = Object.keys(customLocations) // Only get the names of locations\n//       .filter(name => name.toLowerCase().includes(lowerQuery)) // Filter by name match\n//       .map(name => ({ name })); // Map to just name for suggestions\n\n//     setSuggestions(filtered);\n//   };\n\n//   const handleSearchChange = (e) => {\n//     const query = e.target.value;\n//     setSearchQuery(query); // Update search query\n//     filterSuggestions(query); // Update suggestions based on query\n//   };\n\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//       <div>\n//          <h3>${name}</h3>\n//          <p><strong>Type:</strong> ${type}</p>\n//          <p><strong>Hours:</strong> ${hours}</p>\n//          <p><strong>Description:</strong> ${description}</p>\n//        </div>\n//      `;\n\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n\n//   return (\n\n//     <div style={{ height: \"100vh\", width: \"100vw\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <Navbar />\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       {/* Navbar */}\n//       {/* <div style={{\n//   position: \"fixed\",\n//   top: 0,\n//   left: 0,\n//   width: \"100%\",\n//   backgroundColor: \"#2c3e50\",\n//   color: \"#ecf0f1\",\n//   padding: \"12px 24px\",\n//   fontSize: \"20px\",\n//   fontWeight: \"bold\",\n//   display: \"flex\",\n//   justifyContent: \"space-between\",\n//   alignItems: \"center\",\n//   zIndex: 2000,\n//   boxShadow: \"0 2px 6px rgba(0, 0, 0, 0.2)\"\n// }}>\n//    <div className=\"navbar-left\">\n//         <img src=\"logo.jpg\" alt=\"Campus Logo\" className=\"navbar-logo\" />\n//         <span className=\"navbar-title\"></span>\n//       </div>\n//   <span style={{ whiteSpace: \"nowrap\" }}>Campus Navigation</span>\n//   <div style={{ height: '35px',width:'40px', marginRight:0,\n//         color: \"#fff\",\n//         border: \"none\",\n//         borderRadius: \"6px\",\n//         padding: \"8px 16px\",\n//         cursor: \"pointer\",\n//         fontSize: \"14px\",\n//         fontWeight: \"bold\"}}>\n//   <Link to=\"/photos\" >Photos</Link>\n// </div>\n//   <button\n//     onClick={handleLogout}\n//     style={{\n//       backgroundColor: \"#e74c3c\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       borderRadius: \"6px\",\n//       padding: \"8px 16px\",\n//       cursor: \"pointer\",\n//       fontSize: \"14px\",\n//       fontWeight: \"bold\"\n//     }}\n//   >\n//     Logout\n//   </button>\n// </div> */}\n\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n\n//       <button\n//         onClick={handleLiveLocation}\n//         style={{\n//           position: \"fixed\",\n//           right: 10,\n//           bottom: 40,\n//           zIndex: 1001,\n//           background: \"#28a745\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         📍 Live Location\n//       </button>\n\n//       {/* Input Bar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 10,\n//         left: \"50%\",\n//         transform: \"translateX(-50%)\",\n//         zIndex: 1000,\n//         display: \"flex\",\n//         gap: \"8px\",\n//         background: \"#fff\",\n//         padding: \"10px\",\n//         borderRadius: \"8px\",\n//         marginTop: \"70px\",\n//         boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n//       }}>\n//         {/* <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     onFocus={() => filterSuggestions(sourceText)} // Ensure filtering happens on focus\n\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     onFocus={() => filterSuggestions(destinationText)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   /> */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Source (e.g., Library)\"\n//           value={sourceText}\n//           onChange={(e) => {\n//             setSourceText(e.target.value);\n//             setSearchQuery(e.target.value); // Update searchQuery to show suggestions\n//             filterSuggestions(e.target.value);\n//           }}\n//           onFocus={() => setActiveInput('source')} // SET ACTIVE INPUT\n//           style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//         />\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Destination (e.g., CSE Block)\"\n//           value={destinationText}\n//           onChange={(e) => {\n//             setDestinationText(e.target.value);\n//             setSearchQuery(e.target.value);\n//             filterSuggestions(e.target.value);\n//           }}\n//           onFocus={() => setActiveInput('destination')} // SET ACTIVE INPUT\n//           style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//         />\n//         {/* Travel Mode Dropdown */}\n//         <select\n//           value={travelMode}\n//           onChange={(e) => setTravelMode(e.target.value)}\n//           style={{\n//             padding: \"6px 10px\",\n//             fontSize: \"14px\",\n//             borderRadius: \"6px\",\n//             border: \"1px solid #ccc\",\n//             background: \"#fff\",\n//             cursor: \"pointer\"\n//           }}\n//         >\n//           <option value=\"walk\">🚶 Walk</option>\n//           <option value=\"bicycle\">🚴 Bicycle</option>\n//           <option value=\"vehicle\">🚗 Vehicle</option>\n//         </select>\n\n//         <button\n//           onClick={handleRoute}\n//           style={{\n//             background: \"#28a745\",\n//             color: \"#fff\",\n//             border: \"none\",\n//             padding: \"6px 10px\",\n//             fontSize: \"14px\",\n//             borderRadius: \"6px\",\n//             cursor: \"pointer\"\n//           }}\n//         >\n//           Route\n//         </button>\n//         {/* <div className=\"photos-link\">\n//          <Link to=\"/photos\">Photos</Link>\n//        </div> */}\n\n//       </div>\n\n//       {/* Search Suggestions */}\n//       {searchQuery && suggestions.length > 0 && (\n//         <ul\n//           style={{\n//             position: \"absolute\",\n//             top: 60,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#fff\",\n//             width: \"300px\",\n//             maxHeight: \"150px\",\n//             overflowY: \"auto\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//             zIndex: 1000,\n//             listStyle: \"none\",\n//             padding: 0,\n//             margin: 0,\n//             marginTop: \"70px\",\n//             borderRadius: \"8px\",\n//           }}\n//         >\n//           {suggestions.map((suggestion, index) => {\n//             return (\n//               <li\n//                 key={index}\n//                 onClick={() => {\n//                   if (activeInput === 'source') {\n//                     setSourceText(suggestion.name);\n//                   } else if (activeInput === 'destination') {\n//                     setDestinationText(suggestion.name);\n//                   }\n//                   setSuggestions([]);\n//                   setSearchQuery('');\n//                 }}\n//                 style={{\n//                   padding: \"8px\",\n//                   cursor: \"pointer\",\n//                   backgroundColor: \"#f1f1f1\",\n//                   borderBottom: \"1px solid #ddd\"\n//                 }}\n//               >\n//                 {suggestion.name}\n//               </li>\n\n//             );\n//           })}\n//         </ul>\n//       )}\n\n//       {/* Map */}\n//       <MapContainer\n\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n\n//           compass.addTo(mapRef.current);\n//         }}\n\n//       >\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//           // url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n//           // attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n//         />\n\n//         {/* Marker for Live Location */}\n//         {position && (\n//           <Marker position={position}>\n//             <Popup>\n//               <div>\n//                 <p><strong>You are here!</strong></p>\n//                 <p>{address}</p>\n//                 <button\n//                   onClick={handleLiveLocation}\n//                   style={{\n//                     background: \"#007bff\",\n//                     color: \"#fff\",\n//                     border: \"none\",\n//                     padding: \"5px 10px\",\n//                     borderRadius: \"5px\",\n//                     cursor: \"pointer\"\n//                   }}\n//                 >\n//                   Update Location\n//                 </button>\n//               </div>\n//             </Popup>\n//           </Marker>\n//         )}\n\n//         <LayersControl position=\"topright\">\n//           <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//             <TileLayer\n//               url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//             />\n//           </LayersControl.BaseLayer>\n\n//           <LayersControl.BaseLayer name=\"Satellite View\">\n//             <TileLayer\n//               attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//               url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//             />\n//           </LayersControl.BaseLayer>\n//         </LayersControl>\n\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//     </div>\n//   );\n// };\n\n// export default MapPage;\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { MapContainer, TileLayer, useMap, LayersControl, Marker, Popup, Circle } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine\";\nimport \"leaflet-control-geocoder\";\nimport \"leaflet-compass/dist/leaflet-compass.min.css\";\nimport \"leaflet-compass\";\nimport Navbar from './Navbar'; // Adjust the path if needed\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rkValley = {\n  lat: 14.33499,\n  lng: 78.537372\n};\n\n// Default Leaflet marker icon for consistent rendering\nlet DefaultIcon = L.icon({\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n  iconSize: [25, 41],\n  // Ensure marker size is appropriate\n  iconAnchor: [12, 41],\n  // Anchor point for precise positioning\n  popupAnchor: [1, -34],\n  // Popup position relative to marker\n  shadowSize: [41, 41]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\nconst RoutingMachine = ({\n  source,\n  destination,\n  travelMode\n}) => {\n  _s();\n  const map = useMap();\n  const mapRef = useRef(null);\n  const controlRef = useRef(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  useEffect(() => {\n    if (!map) return;\n    if (mapRef.current) {\n      const compass = new L.Control.Compass({\n        autoActive: true,\n        showDigit: true\n      });\n      compass.addTo(mapRef.current);\n    }\n    if (!controlRef.current) {\n      controlRef.current = L.Routing.control({\n        waypoints: [],\n        lineOptions: {\n          styles: [{\n            color: \"blue\",\n            weight: 4\n          }]\n        },\n        addWaypoints: false,\n        draggableWaypoints: false,\n        fitSelectedRoutes: true,\n        show: false,\n        createMarker: () => null,\n        routeWhileDragging: false\n      }).addTo(map);\n    }\n    if (source && destination) {\n      controlRef.current.setWaypoints([L.latLng(source.lat, source.lng), L.latLng(destination.lat, destination.lng)]);\n      controlRef.current.on(\"routesfound\", function (e) {\n        const route = e.routes[0];\n        const dist = route.summary.totalDistance;\n        let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n        const timeHours = dist / 1000 / speedKmph;\n        const timeMinutes = Math.round(timeHours * 60);\n        setDistance(dist);\n        setDuration(timeMinutes);\n      });\n    }\n    return () => {\n      if (controlRef.current) {\n        controlRef.current.setWaypoints([]);\n        setDistance(null);\n        setDuration(null);\n      }\n    };\n  }, [source, destination, travelMode, map]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: distance && duration !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 180,\n        left: \"50%\",\n        transform: distance ? \"translate(-50%, 0)\" : \"translate(-50%, -20px)\",\n        background: \"#ffffffee\",\n        padding: \"10px 16px\",\n        border: \"2px solid #007bff\",\n        borderRadius: \"10px\",\n        zIndex: 1000,\n        fontSize: \"14px\",\n        fontWeight: \"500\",\n        boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n      },\n      children: [\"\\uD83D\\uDEA9 Distance: \", distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`, \" \\xA0 | \\xA0 \\u23F1 Time: \", duration, \" min\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1584,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(RoutingMachine, \"8WCURy86DhrCqNYLDKM0dlhvJHA=\", false, function () {\n  return [useMap];\n});\n_c = RoutingMachine;\nconst MapPage = () => {\n  _s2();\n  const [sourceText, setSourceText] = useState(\"\");\n  const [destinationText, setDestinationText] = useState(\"\");\n  const [sourceCoords, setSourceCoords] = useState(null);\n  const [destinationCoords, setDestinationCoords] = useState(null);\n  const [travelMode, setTravelMode] = useState(\"walk\");\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [position, setPosition] = useState([14.334990, 78.537372]); // Default position\n  const [address, setAddress] = useState(\"Fetching address...\");\n  const mapRef = useRef(null);\n  const liveMarkerRef = useRef(null);\n  const routeControlRef = useRef(null);\n  //const [address, setAddress] = useState(\"Fetching address...\");\n  const [activeInput, setActiveInput] = useState(null);\n  //const geocoder = useRef(L.Control.Geocoder.nominatim());\n  //const mapRef = useRef(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  // const blueIcon = new L.Icon({\n  //   iconUrl: \"https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld=•|007bff\",\n  //   iconSize: [30, 40],\n  //   iconAnchor: [15, 40],\n  //   popupAnchor: [0, -40],\n  // });\n\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [loadingLocation, setLoadingLocation] = useState(false);\n  //const liveMarkerRef = useRef(null);\n  //const [position, setPosition] = useState([14.334990, 78.537372]); // Default, but will update to live\n\n  const [watchId, setWatchId] = useState(null);\n  const geocodeLocation = text => {\n    return new Promise((resolve, reject) => {\n      const geocoder = L.Control.Geocoder.nominatim();\n      geocoder.geocode(text, results => {\n        if (results && results.length > 0) {\n          const {\n            lat,\n            lng\n          } = results[0].center;\n          resolve({\n            lat,\n            lng\n          });\n        } else {\n          reject(\"Location not found.\");\n        }\n      });\n    });\n  };\n\n  // const geocodeLocation = (text) => {\n  //   return new Promise((resolve, reject) => {\n  //     const geocoder = L.Control.Geocoder.nominatim();\n  //     geocoder.geocode(text, (results) => {\n  //       if (results && results.length > 0) {\n  //         const { lat, lng } = results[0].center;\n  //         resolve([lat, lng]);\n  //       } else {\n  //         reject(\"Location not found.\");\n  //       }\n  //     });\n  //   });\n  // };\n\n  const customLocations = {\n    \"Academic Block 1\": {\n      lat: 14.334841,\n      lng: 78.537223,\n      type: \"Academic\",\n      hours: \"9AM–10PM\",\n      description: \"Centralized building with classrooms, seminar halls, and faculty offices for academic activities\"\n    },\n    \"Academic Block 2\": {\n      lat: 14.335089,\n      lng: 78.539779,\n      type: \"Academic\",\n      hours: \"9AM–10PM\",\n      description: \"Administrative and teaching space for various departmental operations and academic sessions\"\n    },\n    \"Boys Hostel 1\": {\n      lat: 14.334589,\n      lng: 78.536720,\n      type: \"Hostel\",\n      hours: \"24x7\",\n      description: \"On-campus residential block for male students with secure lodging and basic amenities\"\n    },\n    \"Boys Hostel 2\": {\n      lat: 14.334773,\n      lng: 78.540234,\n      type: \"Hostel\",\n      hours: \"24x7\",\n      description: \"Well-facilitated hostel for male students offering comfort, security, and communal living\"\n    },\n    \"Chemical Block\": {\n      lat: 14.335304,\n      lng: 78.542505,\n      type: \"Department\",\n      hours: \"9AM–5PM\",\n      description: \"Dedicated facility for chemical engineering studies, including research and lab-based learning.\"\n    },\n    \"Civil Block\": {\n      lat: 14.334801,\n      lng: 78.543514,\n      type: \"Department\",\n      hours: \"9AM–5PM\",\n      description: \"Engineering block supporting civil engineering courses, design labs, and project spaces\"\n    },\n    \"Computer Center\": {\n      lat: 14.336182,\n      lng: 78.539610,\n      type: \"Tech\",\n      hours: \"9AM–5PM\",\n      description: \"Central computing facility with computer labs and high-speed internet resources.\"\n    },\n    \"CSE Block\": {\n      lat: 14.335914,\n      lng: 78.541347,\n      type: \"Department\",\n      hours: \"9AM–5PM\",\n      description: \"Department of Computer Science and Engineering providing academic and technical infrastructure\"\n    },\n    \"ECE Block\": {\n      lat: 14.334283,\n      lng: 78.541474,\n      type: \"Department\",\n      hours: \"9AM–5PM\",\n      description: \"Department of Electronics and Communication Engineering offering labs and classrooms\"\n    },\n    \"EEE Block\": {\n      lat: 14.336851,\n      lng: 78.542395,\n      type: \"Department\",\n      hours: \"9AM–5PM\",\n      description: \"Department of Electrical and Electronics Engineering supporting circuits, machines, and power systems\"\n    },\n    \"Girls Hostel 1\": {\n      lat: 14.334402,\n      lng: 78.538412,\n      type: \"Hostel\",\n      hours: \"24x7\",\n      description: \"Accommodation for female students with safety and residential services.\"\n    },\n    \"Girls Hostel 2\": {\n      lat: 14.334361,\n      lng: 78.538610,\n      type: \"Hostel\",\n      hours: \"24x7\",\n      description: \"Residential facility for girl students with necessary hostel amenities.\"\n    },\n    \"Guest House RKV\": {\n      lat: 14.331859,\n      lng: 78.536652,\n      type: \"Guest facility\",\n      hours: \"24x7\",\n      description: \"Well-maintained guest house for hosting visiting faculty, guests, and dignitaries.\"\n    },\n    \"Hospital\": {\n      lat: 14.337157,\n      lng: 78.532596,\n      type: \"Medical\",\n      hours: \"24x7\",\n      description: \"24x7 medical facility for basic healthcare and emergency services on campus\"\n    },\n    \"IQAC\": {\n      lat: 14.336884,\n      lng: 78.540791,\n      type: \"Administration\",\n      hours: \"9AM–5PM\",\n      description: \"Institutional cell responsible for maintaining and enhancing academic quality\"\n    },\n    \"Lab Complex\": {\n      lat: 14.336214,\n      lng: 78.538152,\n      type: \"Department\",\n      hours: \"9AM–5PM\",\n      description: \"Lab facility used by multiple departments for academic experiments and practical sessions\"\n    },\n    \"Laundry\": {\n      lat: 14.333134,\n      lng: 78.538775,\n      type: \"Laundry\",\n      hours: \"9AM–5PM\",\n      description: \"Laundry service center for washing and drying hostel students’ clothes.\"\n    },\n    \"Library\": {\n      lat: 14.335547,\n      lng: 78.538723,\n      type: \"Academic\",\n      hours: \"7AM–11PM\",\n      description: \"Central resource hub with a wide collection of books, journals, and study spaces.\"\n    },\n    \"Masjid\": {\n      lat: 14.339404,\n      lng: 78.535480,\n      type: \"Religious\",\n      hours: \"9AM–7PM\",\n      description: \"Place of worship for Muslim students and staff within the campus.\"\n    },\n    \"Mechanical Block\": {\n      lat: 14.336277,\n      lng: 78.543308,\n      type: \"Department\",\n      hours: \"9AM–5PM\",\n      description: \"Department of Mechanical Engineering equipped for academic and technical training.\"\n    },\n    \"Mechanical workshop\": {\n      lat: 14.336200,\n      lng: 78.538661,\n      type: \"Department\",\n      hours: \"9AM–5PM\",\n      description: \"Workshop with tools and machinery for mechanical hands-on training and fabrication\"\n    },\n    \"Mess 1234\": {\n      lat: 14.333753,\n      lng: 78.538477,\n      type: \"Food\",\n      hours: \"7AM–9PM\",\n      description: \"Dining hall serving meals to students with regular breakfast, lunch, and dinner\"\n    },\n    \"Mess 5678\": {\n      lat: 14.333716,\n      lng: 78.538701,\n      type: \"Food\",\n      hours: \"7AM–9PM\",\n      description: \"Catering facility providing nutritious food to hostel residents and students.\"\n    },\n    \"MME Block\": {\n      lat: 14.337335,\n      lng: 78.541188,\n      type: \"Department\",\n      hours: \"9AM–5PM\",\n      description: \"Department of Metallurgical and Materials Engineering for academic and research purposes\"\n    },\n    \"old campus academic blocks\": {\n      lat: 14.339002,\n      lng: 78.537776,\n      type: \"Academic\",\n      hours: \"9AM–5PM\",\n      description: \"Academic buildings from the original campus supporting multiple disciplines\"\n    },\n    \"old campus boys hostel rho\": {\n      lat: 14.339809,\n      lng: 78.537592,\n      type: \"Hostel\",\n      hours: \"24x7\",\n      description: \"Boys’ hostel located in the older section of the campus with residential facilities.\"\n    },\n    \"old campus boys hostel theeta\": {\n      lat: 14.339859,\n      lng: 78.537896,\n      type: \"Hostel\",\n      hours: \"24x7\",\n      description: \"Another boys’ hostel in the old campus with accommodation services.\"\n    },\n    \"old campus girls hostel 1\": {\n      lat: 14.338275,\n      lng: 78.537744,\n      type: \"Hostel\",\n      hours: \"24x7\",\n      description: \"Girls’ hostel located in the old campus area offering safe living spaces.\"\n    },\n    \"old campus girls hostel 2\": {\n      lat: 14.338288,\n      lng: 78.537914,\n      type: \"Hostel\",\n      hours: \"24x7\",\n      description: \"Second girls’ hostel from the old block, supporting student housing.\"\n    },\n    \"Police Station\": {\n      lat: 14.337844,\n      lng: 78.536249,\n      type: \"Security\",\n      hours: \"24x7\",\n      description: \"Campus law enforcement unit ensuring discipline, emergency handling, and general safety.\"\n    },\n    \"Post Office\": {\n      lat: 14.337099,\n      lng: 78.533741,\n      type: \"Service\",\n      hours: \"9AM–4PM\",\n      description: \"Postal unit on campus for sending letters, parcels, and accessing courier services.\"\n    },\n    \"Power House\": {\n      lat: 14.335040,\n      lng: 78.536465,\n      type: \"Utility\",\n      hours: \"9AM–5PM\",\n      description: \"Electricity management center responsible for power regulation and backup systems.\"\n    },\n    \"RKV Ground\": {\n      lat: 14.337409,\n      lng: 78.537874,\n      type: \"Play\",\n      hours: \"6AM-8PM\",\n      description: \"Multipurpose playground for sports practices, matches, and college-level tournaments.\"\n    },\n    \"SBI\": {\n      lat: 14.337374,\n      lng: 78.534579,\n      type: \"Bank\",\n      hours: \"9AM–5PM\",\n      description: \"Banking facility providing financial services including ATM, account handling, and transactions\"\n    },\n    \"Shopping Complex\": {\n      lat: 14.337353,\n      lng: 78.534061,\n      type: \"Shopping\",\n      hours: \"10AM–9PM\",\n      description: \"Commercial area within campus for everyday shopping, snacks, and general items\"\n    },\n    \"Sports Complex\": {\n      lat: 14.337243,\n      lng: 78.533690,\n      type: \"Recreational\",\n      hours: \"5AM–10PM\",\n      description: \"Indoor and outdoor sports facilities including courts, tracks, and fitness zones.\"\n    },\n    \"Student Activity Center\": {\n      lat: 14.338203,\n      lng: 78.540398,\n      type: \"Recreational\",\n      hours: \"9AM–5PM\",\n      description: \"Campus venue for student initiatives, cultural programs, and club activities\"\n    },\n    \"Temple\": {\n      lat: 14.337074,\n      lng: 78.533307,\n      type: \"Religious\",\n      hours: \"6AM–8PM\",\n      description: \"Spiritual place for religious observance and peaceful reflection.\"\n    }\n  };\n\n  // Fetch live location with high accuracy\n  // useEffect(() => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(\n  //       (location) => {\n  //         const { latitude, longitude } = location.coords;\n  //         console.log(\"Live location fetched:\", { latitude, longitude }); // Debug log\n  //         setPosition([latitude, longitude]);\n  //         fetchAddress(latitude, longitude);\n  //         mapRef.current?.setView([latitude, longitude], 18); // Center map on live location\n  //       },\n  //       (error) => {\n  //         console.error(\"Error fetching live location:\", error);\n  //         setAddress(\"Unable to retrieve location. Try enabling GPS.\");\n  //         setPosition([rkValley.lat, rkValley.lng]);\n  //         alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");\n  //       },\n  //       {\n  //         enableHighAccuracy: true, // Prioritize GPS\n  //         timeout: 10000, // 10-second timeout\n  //         maximumAge: 0 // No cached position\n  //       }\n  //     );\n  //   } else {\n  //     console.error(\"Geolocation not supported\");\n  //     setAddress(\"Geolocation not supported\");\n  //     setPosition([rkValley.lat, rkValley.lng]);\n  //     alert(\"Geolocation is not supported by your browser. Please select a location from the sidebar.\");\n  //   }\n  // }, []);\n\n  //watching live location \n  // useEffect(() => {\n  //   let watchId;\n  //   let marker = null;\n\n  //   if (navigator.geolocation) {\n  //     watchId = navigator.geolocation.watchPosition(\n  //       (location) => {\n  //         const { latitude, longitude } = location.coords;\n  //         const newPosition = [latitude, longitude];\n  //         console.log(\"Live location updated:\", { latitude, longitude }); // Debug log\n\n  //         setPosition(newPosition);\n  //         fetchAddress(latitude, longitude);\n\n  //         if (mapRef.current) {\n  //           if (!marker) {\n  //             // If marker doesn't exist, create it\n  //             marker = L.marker(newPosition, { \n  //               icon: L.icon({\n  //                 iconUrl: \"https://cdn-icons-png.flaticon.com/512/684/684908.png\", // You can replace with your own icon URL\n  //                 iconSize: [30, 30],\n  //                 iconAnchor: [15, 30]\n  //               })\n  //             }).addTo(mapRef.current);\n  //           } else {\n  //             // Animate marker moving\n  //             marker.setLatLng(newPosition);\n  //           }\n\n  //           mapRef.current.setView(newPosition, 18, { animate: true, pan: { duration: 1 } });\n  //         }\n  //       },\n  //       (error) => {\n  //         console.error(\"Error fetching live location:\", error);\n  //         setAddress(\"Unable to retrieve location. Try enabling GPS.\");\n  //         setPosition([rkValley.lat, rkValley.lng]);\n  //         alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");\n  //       },\n  //       {\n  //         enableHighAccuracy: true, // Prioritize GPS\n  //         timeout: 10000, // 10-second timeout\n  //         maximumAge: 0 // No cached position\n  //       }\n  //     );\n  //   } else {\n  //     console.error(\"Geolocation not supported\");\n  //     setAddress(\"Geolocation not supported\");\n  //     setPosition([rkValley.lat, rkValley.lng]);\n  //     alert(\"Geolocation is not supported by your browser. Please select a location from the sidebar.\");\n  //   }\n\n  //   // Cleanup\n  //   return () => {\n  //     if (watchId) {\n  //       navigator.geolocation.clearWatch(watchId);\n  //     }\n  //     if (marker && mapRef.current) {\n  //       mapRef.current.removeLayer(marker);\n  //     }\n  //   };\n  // }, []);\n\n  //change \n  // useEffect(() => {\n  //   let watchId;\n\n  //   if (navigator.geolocation) {\n  //     watchId = navigator.geolocation.watchPosition(\n  //       (location) => {\n  //         const { latitude, longitude } = location.coords;\n  //         const newPosition = [latitude, longitude];\n  //         console.log(\"Live location updated:\", { latitude, longitude });\n\n  //         setPosition(newPosition);\n  //         fetchAddress(latitude, longitude);\n\n  //         if (mapRef.current) {\n  //           if (!liveMarkerRef.current) {\n  //             // Create marker only ONCE\n  //             liveMarkerRef.current = L.marker(newPosition, {\n  //               icon: L.icon({\n  //                 iconUrl: \"https://cdn-icons-png.flaticon.com/512/684/684908.png\", // your icon\n  //                 iconSize: [30, 30],\n  //                 iconAnchor: [15, 30],\n  //               })\n  //             }).addTo(mapRef.current);\n  //           } else {\n  //             // Just move the existing marker\n  //             liveMarkerRef.current.setLatLng(newPosition);\n  //           }\n\n  //           mapRef.current.setView(newPosition, 18, { animate: true, pan: { duration: 1 } });\n  //         }\n  //       },\n  //       (error) => {\n  //         console.error(\"Error fetching live location:\", error);\n  //         setAddress(\"Unable to retrieve location. Try enabling GPS.\");\n  //         setPosition([14.334990, 78.537372]); // Fallback to a default location\n  //         alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");\n  //       },\n  //       {\n  //         enableHighAccuracy: true,\n  //         timeout: 10000,\n  //         maximumAge: 0\n  //       }\n  //     );\n  //   } else {\n  //     console.error(\"Geolocation not supported\");\n  //     setAddress(\"Geolocation not supported\");\n  //     setPosition([14.334990, 78.537372]); // Default fallback location\n  //     alert(\"Geolocation is not supported by your browser. Please select a location from the sidebar.\");\n  //   }\n\n  //   return () => {\n  //     if (watchId) {\n  //       navigator.geolocation.clearWatch(watchId);\n  //     }\n  //     if (liveMarkerRef.current && mapRef.current) {\n  //       mapRef.current.removeLayer(liveMarkerRef.current);\n  //       liveMarkerRef.current = null;\n  //     }\n  //   };\n  // }, []);\n\n  // Watch the live location\n  // useEffect(() => {\n  //   let watchId;\n\n  //   if (navigator.geolocation) {\n  //     watchId = navigator.geolocation.watchPosition(\n  //       (location) => {\n  //         const { latitude, longitude } = location.coords;\n  //         const newPosition = [latitude, longitude];\n  //         setPosition(newPosition);\n  //         fetchAddress(latitude, longitude);\n\n  //         if (mapRef.current) {\n  //           if (!liveMarkerRef.current) {\n  //             // Create marker only once\n  //             liveMarkerRef.current = L.marker(newPosition, {\n  //               icon: blueIcon,\n  //             }).addTo(mapRef.current);\n  //           } else {\n  //             // Update the position of the existing marker\n  //             liveMarkerRef.current.setLatLng(newPosition);\n  //           }\n\n  //           // Move the map center smoothly\n  //           mapRef.current.setView(newPosition, 18, { animate: true, pan: { duration: 1 } });\n  //         }\n  //       },\n  //       (error) => {\n  //         console.error(\"Error fetching live location:\", error);\n  //         setAddress(\"Unable to retrieve location. Try enabling GPS.\");\n  //       },\n  //       {\n  //         enableHighAccuracy: true,\n  //         timeout: 10000,\n  //         maximumAge: 0,\n  //       }\n  //     );\n  //   } else {\n  //     console.error(\"Geolocation not supported\");\n  //     setAddress(\"Geolocation not supported\");\n  //   }\n\n  //   // Cleanup the watch when the component unmounts\n  //   return () => {\n  //     if (watchId) {\n  //       navigator.geolocation.clearWatch(watchId);\n  //     }\n  //   };\n  // }, []);\n\n  // Live location tracking\n  useEffect(() => {\n    if (navigator.geolocation) {\n      setLoadingLocation(true);\n      const id = navigator.geolocation.watchPosition(pos => {\n        const {\n          latitude,\n          longitude,\n          accuracy\n        } = pos.coords;\n        const newPos = [latitude, longitude];\n        setPosition(newPos);\n        setAccuracy(accuracy);\n        fetchAddress(latitude, longitude);\n        setLoadingLocation(false);\n        if (liveMarkerRef.current) {\n          liveMarkerRef.current.setLatLng(newPos);\n        }\n\n        // Smooth pan to new location\n        if (mapRef.current) {\n          mapRef.current.setView(newPos, 18, {\n            animate: true,\n            duration: 1\n          });\n        }\n      }, err => {\n        console.error(\"Error getting location:\", err);\n        setAddress(\"Unable to get live location\");\n        setLoadingLocation(false);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 0\n      });\n      setWatchId(id);\n    }\n    return () => {\n      if (watchId) navigator.geolocation.clearWatch(watchId);\n    };\n  }, []);\n\n  // // Reverse geocoding function\n  // const fetchAddress = async (latitude, longitude) => {\n  //   try {\n  //     const response = await fetch(\n  //       `https://nominatim.openstreetmap.org/reverse?lat=${latitude}&lon=${longitude}&format=json`\n  //     );\n  //     const data = await response.json();\n  //     setAddress(data.display_name || \"Address not found\");\n  //   } catch (error) {\n  //     console.error(\"Error fetching address:\", error);\n  //     setAddress(\"Unable to retrieve address\");\n  //   }\n  // };\n  const fetchAddress = async (lat, lng) => {\n    try {\n      const response = await fetch(`https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`);\n      const data = await response.json();\n      setAddress(data.display_name || \"Address not found\");\n    } catch (error) {\n      console.error(\"Error fetching address:\", error);\n      setAddress(\"Unable to retrieve address\");\n    }\n  };\n\n  // Handle live location button click\n  // const handleLiveLocation = () => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(\n  //       (location) => {\n  //         const { latitude, longitude } = location.coords;\n  //         console.log(\"Live location updated:\", { latitude, longitude });\n\n  //         const newPosition = [latitude, longitude];\n  //         setPosition(newPosition);\n  //         fetchAddress(latitude, longitude);\n\n  //         if (mapRef.current) {\n  //           mapRef.current.setView(newPosition, 18, { animate: true });\n\n  //           // Move the existing live marker (not create a new one)\n  //           if (liveMarkerRef.current) {\n  //             liveMarkerRef.current.setLatLng(newPosition);\n  //           }\n  //         }\n  //       },\n  //       (error) => {\n  //         console.error(\"Error fetching live location:\", error);\n  //         alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");\n  //       },\n  //       {\n  //         enableHighAccuracy: true,\n  //         timeout: 10000,\n  //         maximumAge: 0\n  //       }\n  //     );\n  //   } else {\n  //     alert(\"Geolocation is not supported by your browser.\");\n  //   }\n  // };\n\n  // // Your live location logic\n  // const handleLiveLocation = () => {\n  //   if (navigator.geolocation) {\n  //     const id = navigator.geolocation.watchPosition(\n  //       (location) => {\n  //         const { latitude, longitude } = location.coords;\n  //         const newPosition = [latitude, longitude];\n\n  //         console.log(\"Live location updated:\", newPosition);\n\n  //         setPosition(newPosition);\n\n  //         if (liveMarkerRef.current) {\n  //           liveMarkerRef.current.setLatLng(newPosition);\n  //         }\n\n  //         if (mapRef.current) {\n  //           mapRef.current.setView(newPosition, 18, { animate: true });\n  //         }\n  //       },\n  //       (error) => {\n  //         console.error(\"Error fetching live location:\", error);\n  //         alert(\"Unable to retrieve location. Please check GPS.\");\n  //       },\n  //       {\n  //         enableHighAccuracy: true,\n  //         timeout: 10000,\n  //         maximumAge: 0\n  //       }\n  //     );\n  //     setWatchId(id);\n  //   } else {\n  //     alert(\"Geolocation is not supported.\");\n  //   }\n  // };\n\n  // // Cleanup old watch when component unmounts\n  // useEffect(() => {\n  //   return () => {\n  //     if (watchId) {\n  //       navigator.geolocation.clearWatch(watchId);\n  //     }\n  //   };\n  // }, [watchId]);\n\n  const handleLiveLocation = () => {\n    if (navigator.geolocation) {\n      setLoadingLocation(true);\n      const id = navigator.geolocation.watchPosition(pos => {\n        const {\n          latitude,\n          longitude\n        } = pos.coords;\n        const newPos = [latitude, longitude];\n        setPosition(newPos);\n        fetchAddress(latitude, longitude);\n        setLoadingLocation(false);\n        if (liveMarkerRef.current) {\n          liveMarkerRef.current.setLatLng(newPos);\n        }\n        if (mapRef.current) {\n          mapRef.current.setView(newPos, 18, {\n            animate: true\n          });\n        }\n      }, err => {\n        console.error(\"Error getting location:\", err);\n        setLoadingLocation(false);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 0\n      });\n      setWatchId(id);\n    }\n  };\n  const filterSuggestions = query => {\n    const lowerQuery = query.toLowerCase();\n    const filtered = Object.keys(customLocations).filter(name => name.toLowerCase().includes(lowerQuery)).map(name => ({\n      name\n    }));\n    setSuggestions(filtered);\n  };\n\n  // const handleSearchChange = (e) => {\n  //   const query = e.target.value;\n  //   setSearchQuery(query);\n  //   filterSuggestions(query);\n  // };\n  const handleRoute = async () => {\n    try {\n      const src = await geocodeLocation(sourceText);\n      const dest = await geocodeLocation(destinationText);\n      setSourceCoords(src);\n      setDestinationCoords(dest);\n    } catch (err) {\n      alert(\"Failed to find one or both locations\");\n      console.error(err);\n    }\n    setShowSearchBar(false);\n  };\n  const handleBlockClick = (name, coords) => {\n    var _mapRef$current;\n    setDestinationText(name);\n    setDestinationCoords(coords);\n    (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.setView([coords.lat, coords.lng], 18);\n    if (mapRef.current) {\n      const {\n        type,\n        hours,\n        description\n      } = customLocations[name];\n      const popupContent = `\n        <div>\n          <h3>${name}</h3>\n          <p><strong>Type:</strong> ${type}</p>\n          <p><strong>Hours:</strong> ${hours}</p>\n          <p><strong>Description:</strong> ${description}</p>\n        </div>\n      `;\n      L.popup().setLatLng([coords.lat, coords.lng]).setContent(popupContent).openOn(mapRef.current);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 70,\n        left: sidebarOpen ? 10 : -250,\n        width: \"240px\",\n        transition: \"left 0.3s ease-in-out\",\n        zIndex: 1001,\n        background: \"#fff\",\n        padding: \"12px\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n        maxHeight: \"80vh\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: \"10px\",\n          fontSize: \"16px\"\n        },\n        children: \"\\uD83D\\uDCCD Campus Blocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0,\n          margin: 0\n        },\n        children: Object.entries(customLocations).map(([name, data]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleBlockClick(name, data),\n          style: {\n            marginBottom: \"10px\",\n            padding: \"8px\",\n            background: \"#f1f1f1\",\n            borderRadius: \"6px\",\n            cursor: \"pointer\",\n            fontSize: \"14px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2190,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"\\uD83E\\uDDED \", data.type, \" | \\uD83D\\uDD52 \", data.hours]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2191,\n            columnNumber: 15\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2180,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSidebarOpen(!sidebarOpen),\n      style: {\n        position: \"absolute\",\n        left: sidebarOpen ? 260 : 10,\n        top: 70,\n        zIndex: 1001,\n        background: \"#007bff\",\n        color: \"#fff\",\n        border: \"none\",\n        borderRadius: \"6px\",\n        padding: \"6px 10px\",\n        cursor: \"pointer\"\n      },\n      children: sidebarOpen ? \"← Hide\" : \"→ Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLiveLocation,\n      style: {\n        position: \"fixed\",\n        right: 10,\n        bottom: 10,\n        zIndex: 1001,\n        background: \"#28a745\",\n        color: \"#fff\",\n        border: \"none\",\n        borderRadius: \"6px\",\n        padding: \"6px 10px\",\n        cursor: loadingLocation ? \"not-allowed\" : \"pointer\",\n        fontSize: \"14px\",\n        opacity: loadingLocation ? 0.7 : 1\n      },\n      disabled: loadingLocation,\n      children: loadingLocation ? \"🔄 Locating...\" : \"📍 Live Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 1000\n      },\n      children: [!showSearchBar && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowSearchBar(true),\n        style: {\n          position: \"absolute\",\n          top: 10,\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          background: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          padding: \"8px 16px\",\n          fontSize: \"16px\",\n          borderRadius: \"8px\",\n          cursor: \"pointer\",\n          marginTop: \"70px\",\n          boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2361,\n        columnNumber: 9\n      }, this), showSearchBar && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: 10,\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          display: \"flex\",\n          gap: \"8px\",\n          background: \"#fff\",\n          padding: \"10px\",\n          borderRadius: \"8px\",\n          marginTop: \"70px\",\n          boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          width: \"90%\",\n          maxWidth: \"600px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Source (e.g., Library)\",\n          value: sourceText,\n          onChange: e => {\n            setSourceText(e.target.value);\n            setSearchQuery(e.target.value);\n            filterSuggestions(e.target.value);\n          },\n          onFocus: () => setActiveInput('source'),\n          style: {\n            flex: \"1 1 150px\",\n            padding: \"6px 12px\",\n            fontSize: \"14px\",\n            borderRadius: \"6px\",\n            border: \"1px solid #ccc\",\n            minWidth: \"120px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Destination (e.g., CSE Block)\",\n          value: destinationText,\n          onChange: e => {\n            setDestinationText(e.target.value);\n            setSearchQuery(e.target.value);\n            filterSuggestions(e.target.value);\n          },\n          onFocus: () => setActiveInput('destination'),\n          style: {\n            flex: \"1 1 150px\",\n            padding: \"6px 12px\",\n            fontSize: \"14px\",\n            borderRadius: \"6px\",\n            border: \"1px solid #ccc\",\n            minWidth: \"120px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: travelMode,\n          onChange: e => setTravelMode(e.target.value),\n          style: {\n            flex: \"1 1 100px\",\n            padding: \"6px 10px\",\n            fontSize: \"14px\",\n            borderRadius: \"6px\",\n            border: \"1px solid #ccc\",\n            background: \"#fff\",\n            cursor: \"pointer\",\n            minWidth: \"100px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"walk\",\n            children: \"\\uD83D\\uDEB6 Walk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2458,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bicycle\",\n            children: \"\\uD83D\\uDEB4 Bicycle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"vehicle\",\n            children: \"\\uD83D\\uDE97 Vehicle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2460,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRoute,\n          style: {\n            flex: \"0 0 auto\",\n            background: \"#28a745\",\n            color: \"#fff\",\n            border: \"none\",\n            padding: \"6px 10px\",\n            fontSize: \"14px\",\n            borderRadius: \"6px\",\n            cursor: \"pointer\",\n            whiteSpace: \"nowrap\"\n          },\n          children: \"Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2359,\n      columnNumber: 5\n    }, this), searchQuery && suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        position: \"absolute\",\n        top: 60,\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        background: \"#fff\",\n        width: \"300px\",\n        maxHeight: \"150px\",\n        overflowY: \"auto\",\n        boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n        zIndex: 1000,\n        listStyle: \"none\",\n        padding: 0,\n        margin: 0,\n        marginTop: \"70px\",\n        borderRadius: \"8px\"\n      },\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => {\n          if (activeInput === 'source') {\n            setSourceText(suggestion.name);\n          } else if (activeInput === 'destination') {\n            setDestinationText(suggestion.name);\n          }\n          setSuggestions([]);\n          setSearchQuery('');\n        },\n        style: {\n          padding: \"8px\",\n          cursor: \"pointer\",\n          backgroundColor: \"#f1f1f1\",\n          borderBottom: \"1px solid #ddd\"\n        },\n        children: suggestion.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2506,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2486,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: rkValley,\n      zoom: 17,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      ref: mapRef,\n      whenCreated: mapInstance => {\n        mapRef.current = mapInstance;\n        const compass = new L.Control.Compass({\n          autoActive: true,\n          showDigit: true\n        });\n        compass.addTo(mapRef.current);\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2545,\n        columnNumber: 9\n      }, this), position && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          ref: liveMarkerRef,\n          icon: LiveLocationIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"You are here!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2580,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2580,\n                columnNumber: 49\n              }, this), address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2581,\n                columnNumber: 28\n              }, this), accuracy && `Accuracy: ~${Math.round(accuracy)} meters`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2579,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2578,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2573,\n          columnNumber: 13\n        }, this), accuracy && /*#__PURE__*/_jsxDEV(Circle, {\n          center: position,\n          radius: accuracy,\n          fillOpacity: 0.2,\n          color: \"#0078FF\",\n          fillColor: \"#0078FF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2587,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(LayersControl, {\n        position: \"topright\",\n        children: [/*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n          name: \"OpenStreetMap\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2599,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n          checked: true,\n          name: \"Satellite View\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"Tiles \\xA9 Esri \\u2014 Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",\n            url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2604,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2603,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2597,\n        columnNumber: 9\n      }, this), sourceCoords && destinationCoords && /*#__PURE__*/_jsxDEV(RoutingMachine, {\n        source: sourceCoords,\n        destination: destinationCoords,\n        travelMode: travelMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2611,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2531,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2160,\n    columnNumber: 5\n  }, this);\n};\n_s2(MapPage, \"IrMlSO+9e+Vz80HeNLb8qgEb7Jo=\");\n_c2 = MapPage;\nexport default MapPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"RoutingMachine\");\n$RefreshReg$(_c2, \"MapPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MapContainer","TileLayer","useMap","LayersControl","Marker","Popup","Circle","L","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","rkValley","lat","lng","DefaultIcon","icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","prototype","options","RoutingMachine","source","destination","travelMode","_s","map","mapRef","controlRef","distance","setDistance","duration","setDuration","current","compass","Control","Compass","autoActive","showDigit","addTo","Routing","control","waypoints","lineOptions","styles","color","weight","addWaypoints","draggableWaypoints","fitSelectedRoutes","show","createMarker","routeWhileDragging","setWaypoints","latLng","on","e","route","routes","dist","summary","totalDistance","speedKmph","timeHours","timeMinutes","Math","round","children","style","position","top","left","transform","background","padding","border","borderRadius","zIndex","fontSize","fontWeight","boxShadow","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","_c","MapPage","_s2","sourceText","setSourceText","destinationText","setDestinationText","sourceCoords","setSourceCoords","destinationCoords","setDestinationCoords","setTravelMode","sidebarOpen","setSidebarOpen","setPosition","address","setAddress","liveMarkerRef","routeControlRef","activeInput","setActiveInput","searchQuery","setSearchQuery","suggestions","setSuggestions","showSearchBar","setShowSearchBar","loadingLocation","setLoadingLocation","watchId","setWatchId","geocodeLocation","text","Promise","resolve","reject","geocoder","Geocoder","nominatim","geocode","results","length","center","customLocations","type","hours","description","navigator","geolocation","id","watchPosition","pos","latitude","longitude","accuracy","coords","newPos","setAccuracy","fetchAddress","setLatLng","setView","animate","err","console","error","enableHighAccuracy","timeout","maximumAge","clearWatch","response","fetch","data","json","display_name","handleLiveLocation","filterSuggestions","query","lowerQuery","toLowerCase","filtered","Object","keys","filter","name","includes","handleRoute","src","dest","alert","handleBlockClick","_mapRef$current","popupContent","popup","setContent","openOn","height","width","transition","maxHeight","overflowY","marginBottom","listStyle","margin","entries","onClick","cursor","right","bottom","opacity","disabled","marginTop","display","gap","flexWrap","justifyContent","maxWidth","placeholder","value","onChange","target","onFocus","flex","minWidth","whiteSpace","suggestion","index","backgroundColor","borderBottom","zoom","ref","whenCreated","mapInstance","url","LiveLocationIcon","radius","fillOpacity","fillColor","BaseLayer","checked","attribution","_c2","$RefreshReg$"],"sources":["/home/rguktrkvalley/Desktop/CampusNavigationFinal/CampusNavigation/campus-nav-frontend/src/pages/Map.js"],"sourcesContent":["// import React from \"react\"\n// import { Link } from 'react-router-dom';\n// import  { useEffect, useRef, useState } from \"react\";\n// import { MapContainer, TileLayer, useMap, LayersControl } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// //import Fuse from \"fuse.js\";\n\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n// //import { Link } from 'react-router-dom';\n\n\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n\n//   useEffect(() => {\n\n\n//     if (!map) return;\n//     if (!mapRef.current) return;\n\n//     // Initialize and add the compass control\n//     const compass = new L.Control.Compass({\n//       autoActive: true,\n//       showDigit: true,\n//     });\n//     map.addControl(compass);\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`} &nbsp; | &nbsp;\n//           ⏱ Time: {duration} min\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n\n\n//   const customLocations = {\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"9AM–6PM\", description: \"A place for study and research\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Place for shopping and dining\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"Emergency medical services\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \"Place of worship\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Sports facilities\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–7PM\", description: \"Computer labs and resources\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Place to send and receive\" },\n\n//     // \"Library\": { lat: 14.335461, lng: 78.538369 ,type:\"study\",description:\"Consists of many resources to refer and a place where we can study peacefully\"},\n//     // \"CSE Block\": { lat: 14.336241, lng: 78.541992,type:\"Department\",description:\"Department of Computer Science and Engineering\"},\n//     // \"ECE Block\": { lat: 14.334558, lng: 78.541885 ,type:\"Department\",description:\"Department of Electronics and Communication Engineering\"},\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188,type:\"Department\",hours:\"\",description:\"Department of Metallurgical and Materials Engineering\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395,type:\"Department\",description:\"Department of Electrical and Electronics Engineering\" },\n\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308 ,type:\"Department\",description:\"Department of Mechanical Engineering\"},\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505 ,type:\"Department\",description:\"Department of Chemical Engineering\"},\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514,type:\"\",description:\"Department of Civil Engineering\" },\n\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223,type:\"\",description:\"\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779 ,type:\"Department\",description:\"\"},\n\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412,type:\"Hostel\",description:\"Accomodation for female students\" },\n\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720,type:\"Hostel\",description:\"Accomodation for male students\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234,type:\"Hostel\",description:\"Accomodation for male students\" },\n\n\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152,type:\"Department\",description:\"place \" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661,type:\"\",description:\"\" },\n\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791,type:\"\",description:\"\" },\n//    \"Student Activity Center\": { lat: 14.338203, lng: 78.540398,type:\"\",description:\"\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465,type:\"\",description:\"\"},\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477 ,type:\"Food\",description:\"\"},\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701 ,type:\"Food\",description:\"\"},\n\n//     \"SBI\": { lat: 14.337374, lng: 78.534579,type:\"Bank\",description:\"\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249,type:\"\",description:\"\"},\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874,type:\"Play\",description:\"\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652 ,type:\"\",description:\"\"},\n\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744,type:\"Hostel\",description:\"\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896,type:\"Hostel\",description:\"\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776,type:\"Academic\",description:\"\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480,type:\"Religious\",description:\"\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775,type:\"Laundry\",description:\"\" },\n\n//   };\n\n\n\n\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//         <h3>${name}</h3>\n//         <p><strong>Type:</strong> ${type}</p>\n//         <p><strong>Hours:</strong> ${hours}</p>\n//         <p><strong>Description:</strong> ${description}</p>\n//       `;\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n\n//   return (\n\n//     <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n\n//       {/* Input Bar */}\n//       <div style={{\n//   position: \"absolute\",\n//   top: 10,\n//   left: \"50%\",\n//   transform: \"translateX(-50%)\",\n//   zIndex: 1000,\n//   display: \"flex\",\n//   gap: \"8px\",\n//   background: \"#fff\",\n//   padding: \"10px\",\n//   borderRadius: \"8px\",\n//   boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n// }}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n\n//   {/* Travel Mode Dropdown */}\n//   <select\n//     value={travelMode}\n//     onChange={(e) => setTravelMode(e.target.value)}\n//     style={{\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       border: \"1px solid #ccc\",\n//       background: \"#fff\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <option value=\"walk\">🚶 Walk</option>\n//     <option value=\"bicycle\">🚴 Bicycle</option>\n//     <option value=\"vehicle\">🚗 Vehicle</option>\n//   </select>\n\n//   <button\n//     onClick={handleRoute}\n//     style={{\n//       background: \"#28a745\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     Route\n//   </button>\n//   <div className=\"photos-link\">\n//         <Link to=\"/photos\">Photos</Link>\n//       </div>\n// </div>\n\n\n\n//       {/* Map */}\n//       <MapContainer\n\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n\n//           compass.addTo(mapRef.current);\n//         }}\n\n\n//       >\n\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//         />\n//       <LayersControl position=\"topright\">\n//   <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//     <TileLayer\n//       url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//     />\n//   </LayersControl.BaseLayer>\n\n//   <LayersControl.BaseLayer name=\"Satellite View\">\n//     <TileLayer\n//       attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//       url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//     />\n//   </LayersControl.BaseLayer>\n// </LayersControl>\n\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//        {/* Logout */}\n//        <button\n//         onClick={handleLogout}\n//         style={{\n//           position: \"absolute\",\n//           right: 10,\n//           bottom: 25,\n//           padding: \"8px 12px\",\n//           background: \"red\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//           zIndex: 1000,\n//         }}\n//       >\n//         Logout\n//       </button>\n//     </div>\n\n//   );\n// };\n\n// export default MapPage;\n\n\n\n\n// import React from \"react\"\n// import { Link } from 'react-router-dom';\n// import  { useEffect, useRef, useState } from \"react\";\n// import { MapContainer, TileLayer, useMap, LayersControl } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// //import Fuse from \"fuse.js\";\n\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n// //import { Link } from 'react-router-dom';\n\n\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n\n//   useEffect(() => {\n\n\n//     if (!map) return;\n//     if (!mapRef.current) return;\n//   const compass = new L.Control.Compass({\n//     autoActive: true,\n//     showDigit: true,\n//   }).addTo(map);\n\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`}\n\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n\n\n//   const customLocations = {\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"9AM–6PM\", description: \"A place for study and research\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Place for shopping and dining\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"Emergency medical services\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \"Place of worship\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Sports facilities\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–7PM\", description: \"Computer labs and resources\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Place to send and receive\" },\n\n//     // \"Library\": { lat: 14.335461, lng: 78.538369 ,type:\"study\",description:\"Consists of many resources to refer and a place where we can study peacefully\"},\n//     // \"CSE Block\": { lat: 14.336241, lng: 78.541992,type:\"Department\",description:\"Department of Computer Science and Engineering\"},\n//     // \"ECE Block\": { lat: 14.334558, lng: 78.541885 ,type:\"Department\",description:\"Department of Electronics and Communication Engineering\"},\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188,type:\"Department\",hours:\"\",description:\"Department of Metallurgical and Materials Engineering\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395,type:\"Department\",description:\"Department of Electrical and Electronics Engineering\" },\n\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308 ,type:\"Department\",description:\"Department of Mechanical Engineering\"},\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505 ,type:\"Department\",description:\"Department of Chemical Engineering\"},\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514,type:\"\",description:\"Department of Civil Engineering\" },\n\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223,type:\"\",description:\"\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779 ,type:\"Department\",description:\"\"},\n\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412,type:\"Hostel\",description:\"Accomodation for female students\" },\n\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720,type:\"Hostel\",description:\"Accomodation for male students\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234,type:\"Hostel\",description:\"Accomodation for male students\" },\n\n\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152,type:\"Department\",description:\"place \" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661,type:\"\",description:\"\" },\n\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791,type:\"\",description:\"\" },\n//    \"Student Activity Center\": { lat: 14.338203, lng: 78.540398,type:\"\",description:\"\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465,type:\"\",description:\"\"},\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477 ,type:\"Food\",description:\"\"},\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701 ,type:\"Food\",description:\"\"},\n\n//     \"SBI\": { lat: 14.337374, lng: 78.534579,type:\"Bank\",description:\"\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249,type:\"\",description:\"\"},\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874,type:\"Play\",description:\"\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652 ,type:\"\",description:\"\"},\n\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744,type:\"Hostel\",description:\"\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896,type:\"Hostel\",description:\"\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776,type:\"Academic\",description:\"\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480,type:\"Religious\",description:\"\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775,type:\"Laundry\",description:\"\" },\n\n//   };\n\n\n\n\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//       <div>\n//         <h3>${name}</h3>\n//         <p><strong>Type:</strong> ${type}</p>\n//         <p><strong>Hours:</strong> ${hours}</p>\n//         <p><strong>Description:</strong> ${description}</p>\n//       </div>\n//     `;\n\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n\n//   return (\n\n//     <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n\n//       {/* Input Bar */}\n//       <div style={{\n//   position: \"absolute\",\n//   top: 10,\n//   left: \"50%\",\n//   transform: \"translateX(-50%)\",\n//   zIndex: 1000,\n//   display: \"flex\",\n//   gap: \"8px\",\n//   background: \"#fff\",\n//   padding: \"10px\",\n//   borderRadius: \"8px\",\n//   boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n// }}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n\n//   {/* Travel Mode Dropdown */}\n//   <select\n//     value={travelMode}\n//     onChange={(e) => setTravelMode(e.target.value)}\n//     style={{\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       border: \"1px solid #ccc\",\n//       background: \"#fff\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <option value=\"walk\">🚶 Walk</option>\n//     <option value=\"bicycle\">🚴 Bicycle</option>\n//     <option value=\"vehicle\">🚗 Vehicle</option>\n//   </select>\n\n//   <button\n//     onClick={handleRoute}\n//     style={{\n//       background: \"#28a745\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     Route\n//   </button>\n//   <div className=\"photos-link\">\n//         <Link to=\"/photos\">Photos</Link>\n//       </div>\n// </div>\n\n\n\n//       {/* Map */}\n//       <MapContainer\n\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n\n//           compass.addTo(mapRef.current);\n//         }}\n\n\n//       >\n\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//         />\n//       <LayersControl position=\"topright\">\n//   <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//     <TileLayer\n//       url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//     />\n//   </LayersControl.BaseLayer>\n\n//   <LayersControl.BaseLayer name=\"Satellite View\">\n//     <TileLayer\n//       attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//       url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//     />\n//   </LayersControl.BaseLayer>\n// </LayersControl>\n\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//        {/* Logout */}\n//        <button\n//         onClick={handleLogout}\n//         style={{\n//           position: \"absolute\",\n//           right: 10,\n//           bottom: 25,\n//           padding: \"8px 12px\",\n//           background: \"red\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//           zIndex: 1000,\n//         }}\n//       >\n//         Logout\n//       </button>\n//     </div>\n\n//   );\n// };\n\n// export default MapPage;\n\n\n\n\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// //import { Link } from 'react-router-dom';\n// import { MapContainer, TileLayer, useMap, LayersControl, Marker, Popup } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// import Navbar from './Navbar'; // adjust the path if Navbar.js is in a different folder\n// import {GeoSearchControl, OpenStreetMapProvider} from 'leaflet-geosearch';\n\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n\n// const handleLogout = () => {\n//   localStorage.removeItem(\"token\"); // Or whatever key you're using\n//   window.location.href = \"/login\"; // Adjust if using React Router\n// };\n\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n\n//   useEffect(() => {\n//     if (!map) return;\n//     if (mapRef.current) {\n//       const compass = new L.Control.Compass({\n//         autoActive: true,\n//         showDigit: true,\n//       });\n//       compass.addTo(mapRef.current);\n//     }\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`} &nbsp; | &nbsp;\n//           ⏱ Time: {duration} min\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [position, setPosition] = useState(null);\n//   const [address, setAddress] = useState('Fetching Address...')\n\n\n//   const [activeInput, setActiveInput] = useState(null); // NEW: Track which input is focused\n\n\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n\n\n//   const customLocations = {\n\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223, type: \"Academic\", hours: \"9AM–10PM\", description: \"Centralized building with classrooms, seminar halls, and faculty offices for academic activities\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779, type: \"Academic\", hours: \"9AM–10PM\", description: \"Administrative and teaching space for various departmental operations and academic sessions\" },\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720, type: \"Hostel\", hours: \"24x7\", description: \"On-campus residential block for male students with secure lodging and basic amenities\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234, type: \"Hostel\", hours: \"24x7\", description: \"Well-facilitated hostel for male students offering comfort, security, and communal living\" },\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505, type: \"Department\", hours: \"9AM–5PM\", description: \"Dedicated facility for chemical engineering studies, including research and lab-based learning.\" },\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514, type: \"Department\", hours: \"9AM–5PM\", description: \"Engineering block supporting civil engineering courses, design labs, and project spaces\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–5PM\", description: \"Central computing facility with computer labs and high-speed internet resources.\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering providing academic and technical infrastructure\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering offering labs and classrooms\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electrical and Electronics Engineering supporting circuits, machines, and power systems\" },\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students with safety and residential services.\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Residential facility for girl students with necessary hostel amenities.\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652, type: \"Guest facility\", hours: \"24x7\", description: \"Well-maintained guest house for hosting visiting faculty, guests, and dignitaries.\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"24x7 medical facility for basic healthcare and emergency services on campus\" },\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791, type: \"Administration\", hours: \"9AM–5PM\", description: \"Institutional cell responsible for maintaining and enhancing academic quality\" },\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152, type: \"Department\", hours: \"9AM–5PM\", description: \"Lab facility used by multiple departments for academic experiments and practical sessions\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775, type: \"Laundry\", hours: \"9AM–5PM\", description: \"Laundry service center for washing and drying hostel students’ clothes.\" },\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"7AM–11PM\", description: \"Central resource hub with a wide collection of books, journals, and study spaces.\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480, type: \"Religious\", hours: \"9AM–7PM\", description: \"Place of worship for Muslim students and staff within the campus.\" },\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Mechanical Engineering equipped for academic and technical training.\" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661, type: \"Department\", hours: \"9AM–5PM\", description: \"Workshop with tools and machinery for mechanical hands-on training and fabrication\" },\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477, type: \"Food\", hours: \"7AM–9PM\", description: \"Dining hall serving meals to students with regular breakfast, lunch, and dinner\" },\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701, type: \"Food\", hours: \"7AM–9PM\", description: \"Catering facility providing nutritious food to hostel residents and students.\" },\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Metallurgical and Materials Engineering for academic and research purposes\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776, type: \"Academic\", hours: \"9AM–5PM\", description: \"Academic buildings from the original campus supporting multiple disciplines\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592, type: \"Hostel\", hours: \"24x7\", description: \"Boys’ hostel located in the older section of the campus with residential facilities.\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896, type: \"Hostel\", hours: \"24x7\", description: \"Another boys’ hostel in the old campus with accommodation services.\" },\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744, type: \"Hostel\", hours: \"24x7\", description: \"Girls’ hostel located in the old campus area offering safe living spaces.\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914, type: \"Hostel\", hours: \"24x7\", description: \"Second girls’ hostel from the old block, supporting student housing.\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249, type: \"Security\", hours: \"24x7\", description: \"Campus law enforcement unit ensuring discipline, emergency handling, and general safety.\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Postal unit on campus for sending letters, parcels, and accessing courier services.\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465, type: \"Utility\", hours: \"9AM–5PM\", description: \"Electricity management center responsible for power regulation and backup systems.\" },\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874, type: \"Play\", hours: \"6AM-8PM\", description: \"Multipurpose playground for sports practices, matches, and college-level tournaments.\" },\n//     \"SBI\": { lat: 14.337374, lng: 78.534579, type: \"Bank\", hours: \"9AM–5PM\", description: \"Banking facility providing financial services including ATM, account handling, and transactions\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Commercial area within campus for everyday shopping, snacks, and general items\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Indoor and outdoor sports facilities including courts, tracks, and fitness zones.\" },\n//     \"Student Activity Center\": { lat: 14.338203, lng: 78.540398, type: \"Recreational\", hours: \"9AM–5PM\", description: \" Campus venue for student initiatives, cultural programs, and club activities\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \" Spiritual place for religious observance and peaceful reflection.\" },\n\n\n//   };\n  \n//   // Function to handle live location\n//   const handleLiveLocation = () => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           const { latitude, longitude } = position.coords;\n//           const userLocation = [latitude, longitude]\n//           setPosition([latitude, longitude]);\n\n//           // Set the map view to the user's location with maximum zoom\n//           mapRef.current?.setView(userLocation, mapRef.current.getMaxZoom());\n\n//           // Optionally, add a marker at the user's location\n//           L.marker(userLocation)\n//             .addTo(mapRef.current)\n//             .bindPopup(\"📍 You are here!\")\n//             .openPopup();\n//         },\n//         (error) => {\n//           alert(\"Unable to retrieve your location. Please enable location services.\");\n//           console.error(error);\n//         }\n//       );\n//     } else {\n//       alert(\"Geolocation is not supported by your browser.\");\n//     }\n//   };\n\n\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n\n\n//   // Function to filter locations based on search query\n//   const filterSuggestions = (query) => {\n//     const lowerQuery = query.toLowerCase();\n//     const filtered = Object.keys(customLocations) // Only get the names of locations\n//       .filter(name => name.toLowerCase().includes(lowerQuery)) // Filter by name match\n//       .map(name => ({ name })); // Map to just name for suggestions\n\n//     setSuggestions(filtered);\n//   };\n\n//   const handleSearchChange = (e) => {\n//     const query = e.target.value;\n//     setSearchQuery(query); // Update search query\n//     filterSuggestions(query); // Update suggestions based on query\n//   };\n\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//       <div>\n//          <h3>${name}</h3>\n//          <p><strong>Type:</strong> ${type}</p>\n//          <p><strong>Hours:</strong> ${hours}</p>\n//          <p><strong>Description:</strong> ${description}</p>\n//        </div>\n//      `;\n\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n\n//   return (\n\n//     <div style={{ height: \"100vh\", width: \"100vw\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <Navbar />\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       {/* Navbar */}\n//       {/* <div style={{\n//   position: \"fixed\",\n//   top: 0,\n//   left: 0,\n//   width: \"100%\",\n//   backgroundColor: \"#2c3e50\",\n//   color: \"#ecf0f1\",\n//   padding: \"12px 24px\",\n//   fontSize: \"20px\",\n//   fontWeight: \"bold\",\n//   display: \"flex\",\n//   justifyContent: \"space-between\",\n//   alignItems: \"center\",\n//   zIndex: 2000,\n//   boxShadow: \"0 2px 6px rgba(0, 0, 0, 0.2)\"\n// }}>\n//    <div className=\"navbar-left\">\n//         <img src=\"logo.jpg\" alt=\"Campus Logo\" className=\"navbar-logo\" />\n//         <span className=\"navbar-title\"></span>\n//       </div>\n//   <span style={{ whiteSpace: \"nowrap\" }}>Campus Navigation</span>\n//   <div style={{ height: '35px',width:'40px', marginRight:0,\n//         color: \"#fff\",\n//         border: \"none\",\n//         borderRadius: \"6px\",\n//         padding: \"8px 16px\",\n//         cursor: \"pointer\",\n//         fontSize: \"14px\",\n//         fontWeight: \"bold\"}}>\n//   <Link to=\"/photos\" >Photos</Link>\n// </div>\n//   <button\n//     onClick={handleLogout}\n//     style={{\n//       backgroundColor: \"#e74c3c\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       borderRadius: \"6px\",\n//       padding: \"8px 16px\",\n//       cursor: \"pointer\",\n//       fontSize: \"14px\",\n//       fontWeight: \"bold\"\n//     }}\n//   >\n//     Logout\n//   </button>\n// </div> */}\n\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n\n//       <button\n//         onClick={handleLiveLocation}\n//         style={{\n//           position: \"fixed\",\n//           right: 10,\n//           bottom: 40,\n//           zIndex: 1001,\n//           background: \"#28a745\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         📍 Live Location\n//       </button>\n\n//       {/* Input Bar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 10,\n//         left: \"50%\",\n//         transform: \"translateX(-50%)\",\n//         zIndex: 1000,\n//         display: \"flex\",\n//         gap: \"8px\",\n//         background: \"#fff\",\n//         padding: \"10px\",\n//         borderRadius: \"8px\",\n//         marginTop: \"70px\",\n//         boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n//       }}>\n//         {/* <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     onFocus={() => filterSuggestions(sourceText)} // Ensure filtering happens on focus\n   \n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     onFocus={() => filterSuggestions(destinationText)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   /> */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Source (e.g., Library)\"\n//           value={sourceText}\n//           onChange={(e) => {\n//             setSourceText(e.target.value);\n//             setSearchQuery(e.target.value); // Update searchQuery to show suggestions\n//             filterSuggestions(e.target.value);\n//           }}\n//           onFocus={() => setActiveInput('source')} // SET ACTIVE INPUT\n//           style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//         />\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Destination (e.g., CSE Block)\"\n//           value={destinationText}\n//           onChange={(e) => {\n//             setDestinationText(e.target.value);\n//             setSearchQuery(e.target.value);\n//             filterSuggestions(e.target.value);\n//           }}\n//           onFocus={() => setActiveInput('destination')} // SET ACTIVE INPUT\n//           style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//         />\n//         {/* Travel Mode Dropdown */}\n//         <select\n//           value={travelMode}\n//           onChange={(e) => setTravelMode(e.target.value)}\n//           style={{\n//             padding: \"6px 10px\",\n//             fontSize: \"14px\",\n//             borderRadius: \"6px\",\n//             border: \"1px solid #ccc\",\n//             background: \"#fff\",\n//             cursor: \"pointer\"\n//           }}\n//         >\n//           <option value=\"walk\">🚶 Walk</option>\n//           <option value=\"bicycle\">🚴 Bicycle</option>\n//           <option value=\"vehicle\">🚗 Vehicle</option>\n//         </select>\n\n//         <button\n//           onClick={handleRoute}\n//           style={{\n//             background: \"#28a745\",\n//             color: \"#fff\",\n//             border: \"none\",\n//             padding: \"6px 10px\",\n//             fontSize: \"14px\",\n//             borderRadius: \"6px\",\n//             cursor: \"pointer\"\n//           }}\n//         >\n//           Route\n//         </button>\n//         {/* <div className=\"photos-link\">\n//          <Link to=\"/photos\">Photos</Link>\n//        </div> */}\n\n\n\n//       </div>\n\n//       {/* Search Suggestions */}\n//       {searchQuery && suggestions.length > 0 && (\n//         <ul\n//           style={{\n//             position: \"absolute\",\n//             top: 60,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#fff\",\n//             width: \"300px\",\n//             maxHeight: \"150px\",\n//             overflowY: \"auto\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//             zIndex: 1000,\n//             listStyle: \"none\",\n//             padding: 0,\n//             margin: 0,\n//             marginTop: \"70px\",\n//             borderRadius: \"8px\",\n//           }}\n//         >\n//           {suggestions.map((suggestion, index) => {\n//             return (\n//               <li\n//                 key={index}\n//                 onClick={() => {\n//                   if (activeInput === 'source') {\n//                     setSourceText(suggestion.name);\n//                   } else if (activeInput === 'destination') {\n//                     setDestinationText(suggestion.name);\n//                   }\n//                   setSuggestions([]);\n//                   setSearchQuery('');\n//                 }}\n//                 style={{\n//                   padding: \"8px\",\n//                   cursor: \"pointer\",\n//                   backgroundColor: \"#f1f1f1\",\n//                   borderBottom: \"1px solid #ddd\"\n//                 }}\n//               >\n//                 {suggestion.name}\n//               </li>\n\n//             );\n//           })}\n//         </ul>\n//       )}\n\n//       {/* Map */}\n//       <MapContainer\n\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n\n//           compass.addTo(mapRef.current);\n//         }}\n\n\n//       >\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//           // url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n//           // attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n//         />\n        \n//         {/* Marker for Live Location */}\n//         {position && (\n//           <Marker position={position}>\n//             <Popup>\n//               <div>\n//                 <p><strong>You are here!</strong></p>\n//                 <p>{address}</p>\n//                 <button\n//                   onClick={handleLiveLocation}\n//                   style={{\n//                     background: \"#007bff\",\n//                     color: \"#fff\",\n//                     border: \"none\",\n//                     padding: \"5px 10px\",\n//                     borderRadius: \"5px\",\n//                     cursor: \"pointer\"\n//                   }}\n//                 >\n//                   Update Location\n//                 </button>\n//               </div>\n//             </Popup>\n//           </Marker>\n//         )}\n\n//         <LayersControl position=\"topright\">\n//           <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//             <TileLayer\n//               url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//             />\n//           </LayersControl.BaseLayer>\n\n//           <LayersControl.BaseLayer name=\"Satellite View\">\n//             <TileLayer\n//               attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//               url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//             />\n//           </LayersControl.BaseLayer>\n//         </LayersControl>\n\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//     </div>\n//   );\n// };\n\n// export default MapPage;\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { MapContainer, TileLayer, useMap, LayersControl, Marker, Popup,Circle } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine\";\nimport \"leaflet-control-geocoder\";\nimport \"leaflet-compass/dist/leaflet-compass.min.css\";\nimport \"leaflet-compass\";\nimport Navbar from './Navbar'; // Adjust the path if needed\n\nconst rkValley = { lat: 14.33499, lng: 78.537372 };\n\n// Default Leaflet marker icon for consistent rendering\nlet DefaultIcon = L.icon({\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n  iconSize: [25, 41], // Ensure marker size is appropriate\n  iconAnchor: [12, 41], // Anchor point for precise positioning\n  popupAnchor: [1, -34], // Popup position relative to marker\n  shadowSize: [41, 41]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst RoutingMachine = ({ source, destination, travelMode }) => {\n  const map = useMap();\n  const mapRef = useRef(null);\n\n  const controlRef = useRef(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n\n  useEffect(() => {\n    if (!map) return;\n    if (mapRef.current) {\n      const compass = new L.Control.Compass({\n        autoActive: true,\n        showDigit: true,\n      });\n      compass.addTo(mapRef.current);\n    }\n    if (!controlRef.current) {\n      controlRef.current = L.Routing.control({\n        waypoints: [],\n        lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n        addWaypoints: false,\n        draggableWaypoints: false,\n        fitSelectedRoutes: true,\n        show: false,\n        createMarker: () => null,\n        routeWhileDragging: false,\n      }).addTo(map);\n    }\n\n    if (source && destination) {\n      controlRef.current.setWaypoints([\n        L.latLng(source.lat, source.lng),\n        L.latLng(destination.lat, destination.lng),\n      ]);\n\n      controlRef.current.on(\"routesfound\", function (e) {\n        const route = e.routes[0];\n        const dist = route.summary.totalDistance;\n\n        let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n        const timeHours = dist / 1000 / speedKmph;\n        const timeMinutes = Math.round(timeHours * 60);\n\n        setDistance(dist);\n        setDuration(timeMinutes);\n      });\n    }\n\n    return () => {\n      if (controlRef.current) {\n        controlRef.current.setWaypoints([]);\n        setDistance(null);\n        setDuration(null);\n      }\n    };\n  }, [source, destination, travelMode, map]);\n\n  return (\n    <>\n      {distance && duration !== null && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 180,\n            left: \"50%\",\n           \n            transform: distance ? \"translate(-50%, 0)\" : \"translate(-50%, -20px)\", \n            background: \"#ffffffee\",\n            padding: \"10px 16px\",\n            border: \"2px solid #007bff\",\n            borderRadius: \"10px\",\n            zIndex: 1000,\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n          }}\n        >\n          🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`}   |  \n          ⏱ Time: {duration} min\n        </div>\n      )}\n    </>\n  );\n};\n\nconst MapPage = () => {\n  const [sourceText, setSourceText] = useState(\"\");\n  const [destinationText, setDestinationText] = useState(\"\");\n  const [sourceCoords, setSourceCoords] = useState(null);\n  const [destinationCoords, setDestinationCoords] = useState(null);\n  const [travelMode, setTravelMode] = useState(\"walk\");\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [position, setPosition] = useState([14.334990, 78.537372]); // Default position\n  const [address, setAddress] = useState(\"Fetching address...\");\n  const mapRef = useRef(null);\n  const liveMarkerRef = useRef(null);\n\n  const routeControlRef = useRef(null);\n  //const [address, setAddress] = useState(\"Fetching address...\");\n  const [activeInput, setActiveInput] = useState(null);\n  //const geocoder = useRef(L.Control.Geocoder.nominatim());\n  //const mapRef = useRef(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  // const blueIcon = new L.Icon({\n  //   iconUrl: \"https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld=•|007bff\",\n  //   iconSize: [30, 40],\n  //   iconAnchor: [15, 40],\n  //   popupAnchor: [0, -40],\n  // });\n\n  \n  const [showSearchBar, setShowSearchBar] = useState(false); \n  const [loadingLocation, setLoadingLocation] = useState(false);\n  //const liveMarkerRef = useRef(null);\n//const [position, setPosition] = useState([14.334990, 78.537372]); // Default, but will update to live\n\n\nconst [watchId, setWatchId] = useState(null);\n\n\nconst geocodeLocation = (text) => {\n  return new Promise((resolve, reject) => {\n    const geocoder = L.Control.Geocoder.nominatim();\n    geocoder.geocode(text, (results) => {\n      if (results && results.length > 0) {\n        const { lat, lng } = results[0].center;\n        resolve({ lat, lng });\n      } else {\n        reject(\"Location not found.\");\n      }\n    });\n  });\n};\n\n\n// const geocodeLocation = (text) => {\n//   return new Promise((resolve, reject) => {\n//     const geocoder = L.Control.Geocoder.nominatim();\n//     geocoder.geocode(text, (results) => {\n//       if (results && results.length > 0) {\n//         const { lat, lng } = results[0].center;\n//         resolve([lat, lng]);\n//       } else {\n//         reject(\"Location not found.\");\n//       }\n//     });\n//   });\n// };\n\n  const customLocations = {\n    \"Academic Block 1\": { lat: 14.334841, lng: 78.537223, type: \"Academic\", hours: \"9AM–10PM\", description: \"Centralized building with classrooms, seminar halls, and faculty offices for academic activities\" },\n    \"Academic Block 2\": { lat: 14.335089, lng: 78.539779, type: \"Academic\", hours: \"9AM–10PM\", description: \"Administrative and teaching space for various departmental operations and academic sessions\" },\n    \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720, type: \"Hostel\", hours: \"24x7\", description: \"On-campus residential block for male students with secure lodging and basic amenities\" },\n    \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234, type: \"Hostel\", hours: \"24x7\", description: \"Well-facilitated hostel for male students offering comfort, security, and communal living\" },\n    \"Chemical Block\": { lat: 14.335304, lng: 78.542505, type: \"Department\", hours: \"9AM–5PM\", description: \"Dedicated facility for chemical engineering studies, including research and lab-based learning.\" },\n    \"Civil Block\": { lat: 14.334801, lng: 78.543514, type: \"Department\", hours: \"9AM–5PM\", description: \"Engineering block supporting civil engineering courses, design labs, and project spaces\" },\n    \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–5PM\", description: \"Central computing facility with computer labs and high-speed internet resources.\" },\n    \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering providing academic and technical infrastructure\" },\n    \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering offering labs and classrooms\" },\n    \"EEE Block\": { lat: 14.336851, lng: 78.542395, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electrical and Electronics Engineering supporting circuits, machines, and power systems\" },\n    \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students with safety and residential services.\" },\n    \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Residential facility for girl students with necessary hostel amenities.\" },\n    \"Guest House RKV\": { lat: 14.331859, lng: 78.536652, type: \"Guest facility\", hours: \"24x7\", description: \"Well-maintained guest house for hosting visiting faculty, guests, and dignitaries.\" },\n    \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"24x7 medical facility for basic healthcare and emergency services on campus\" },\n    \"IQAC\": { lat: 14.336884, lng: 78.540791, type: \"Administration\", hours: \"9AM–5PM\", description: \"Institutional cell responsible for maintaining and enhancing academic quality\" },\n    \"Lab Complex\": { lat: 14.336214, lng: 78.538152, type: \"Department\", hours: \"9AM–5PM\", description: \"Lab facility used by multiple departments for academic experiments and practical sessions\" },\n    \"Laundry\": { lat: 14.333134, lng: 78.538775, type: \"Laundry\", hours: \"9AM–5PM\", description: \"Laundry service center for washing and drying hostel students’ clothes.\" },\n    \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"7AM–11PM\", description: \"Central resource hub with a wide collection of books, journals, and study spaces.\" },\n    \"Masjid\": { lat: 14.339404, lng: 78.535480, type: \"Religious\", hours: \"9AM–7PM\", description: \"Place of worship for Muslim students and staff within the campus.\" },\n    \"Mechanical Block\": { lat: 14.336277, lng: 78.543308, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Mechanical Engineering equipped for academic and technical training.\" },\n    \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661, type: \"Department\", hours: \"9AM–5PM\", description: \"Workshop with tools and machinery for mechanical hands-on training and fabrication\" },\n    \"Mess 1234\": { lat: 14.333753, lng: 78.538477, type: \"Food\", hours: \"7AM–9PM\", description: \"Dining hall serving meals to students with regular breakfast, lunch, and dinner\" },\n    \"Mess 5678\": { lat: 14.333716, lng: 78.538701, type: \"Food\", hours: \"7AM–9PM\", description: \"Catering facility providing nutritious food to hostel residents and students.\" },\n    \"MME Block\": { lat: 14.337335, lng: 78.541188, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Metallurgical and Materials Engineering for academic and research purposes\" },\n    \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776, type: \"Academic\", hours: \"9AM–5PM\", description: \"Academic buildings from the original campus supporting multiple disciplines\" },\n    \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592, type: \"Hostel\", hours: \"24x7\", description: \"Boys’ hostel located in the older section of the campus with residential facilities.\" },\n    \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896, type: \"Hostel\", hours: \"24x7\", description: \"Another boys’ hostel in the old campus with accommodation services.\" },\n    \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744, type: \"Hostel\", hours: \"24x7\", description: \"Girls’ hostel located in the old campus area offering safe living spaces.\" },\n    \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914, type: \"Hostel\", hours: \"24x7\", description: \"Second girls’ hostel from the old block, supporting student housing.\" },\n    \"Police Station\": { lat: 14.337844, lng: 78.536249, type: \"Security\", hours: \"24x7\", description: \"Campus law enforcement unit ensuring discipline, emergency handling, and general safety.\" },\n    \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Postal unit on campus for sending letters, parcels, and accessing courier services.\" },\n    \"Power House\": { lat: 14.335040, lng: 78.536465, type: \"Utility\", hours: \"9AM–5PM\", description: \"Electricity management center responsible for power regulation and backup systems.\" },\n    \"RKV Ground\": { lat: 14.337409, lng: 78.537874, type: \"Play\", hours: \"6AM-8PM\", description: \"Multipurpose playground for sports practices, matches, and college-level tournaments.\" },\n    \"SBI\": { lat: 14.337374, lng: 78.534579, type: \"Bank\", hours: \"9AM–5PM\", description: \"Banking facility providing financial services including ATM, account handling, and transactions\" },\n    \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Commercial area within campus for everyday shopping, snacks, and general items\" },\n    \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Indoor and outdoor sports facilities including courts, tracks, and fitness zones.\" },\n    \"Student Activity Center\": { lat: 14.338203, lng: 78.540398, type: \"Recreational\", hours: \"9AM–5PM\", description: \"Campus venue for student initiatives, cultural programs, and club activities\" },\n    \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \"Spiritual place for religious observance and peaceful reflection.\" },\n  };\n\n  // Fetch live location with high accuracy\n  // useEffect(() => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(\n  //       (location) => {\n  //         const { latitude, longitude } = location.coords;\n  //         console.log(\"Live location fetched:\", { latitude, longitude }); // Debug log\n  //         setPosition([latitude, longitude]);\n  //         fetchAddress(latitude, longitude);\n  //         mapRef.current?.setView([latitude, longitude], 18); // Center map on live location\n  //       },\n  //       (error) => {\n  //         console.error(\"Error fetching live location:\", error);\n  //         setAddress(\"Unable to retrieve location. Try enabling GPS.\");\n  //         setPosition([rkValley.lat, rkValley.lng]);\n  //         alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");\n  //       },\n  //       {\n  //         enableHighAccuracy: true, // Prioritize GPS\n  //         timeout: 10000, // 10-second timeout\n  //         maximumAge: 0 // No cached position\n  //       }\n  //     );\n  //   } else {\n  //     console.error(\"Geolocation not supported\");\n  //     setAddress(\"Geolocation not supported\");\n  //     setPosition([rkValley.lat, rkValley.lng]);\n  //     alert(\"Geolocation is not supported by your browser. Please select a location from the sidebar.\");\n  //   }\n  // }, []);\n\n  //watching live location \n  // useEffect(() => {\n  //   let watchId;\n  //   let marker = null;\n  \n  //   if (navigator.geolocation) {\n  //     watchId = navigator.geolocation.watchPosition(\n  //       (location) => {\n  //         const { latitude, longitude } = location.coords;\n  //         const newPosition = [latitude, longitude];\n  //         console.log(\"Live location updated:\", { latitude, longitude }); // Debug log\n  \n  //         setPosition(newPosition);\n  //         fetchAddress(latitude, longitude);\n  \n  //         if (mapRef.current) {\n  //           if (!marker) {\n  //             // If marker doesn't exist, create it\n  //             marker = L.marker(newPosition, { \n  //               icon: L.icon({\n  //                 iconUrl: \"https://cdn-icons-png.flaticon.com/512/684/684908.png\", // You can replace with your own icon URL\n  //                 iconSize: [30, 30],\n  //                 iconAnchor: [15, 30]\n  //               })\n  //             }).addTo(mapRef.current);\n  //           } else {\n  //             // Animate marker moving\n  //             marker.setLatLng(newPosition);\n  //           }\n            \n  //           mapRef.current.setView(newPosition, 18, { animate: true, pan: { duration: 1 } });\n  //         }\n  //       },\n  //       (error) => {\n  //         console.error(\"Error fetching live location:\", error);\n  //         setAddress(\"Unable to retrieve location. Try enabling GPS.\");\n  //         setPosition([rkValley.lat, rkValley.lng]);\n  //         alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");\n  //       },\n  //       {\n  //         enableHighAccuracy: true, // Prioritize GPS\n  //         timeout: 10000, // 10-second timeout\n  //         maximumAge: 0 // No cached position\n  //       }\n  //     );\n  //   } else {\n  //     console.error(\"Geolocation not supported\");\n  //     setAddress(\"Geolocation not supported\");\n  //     setPosition([rkValley.lat, rkValley.lng]);\n  //     alert(\"Geolocation is not supported by your browser. Please select a location from the sidebar.\");\n  //   }\n  \n  //   // Cleanup\n  //   return () => {\n  //     if (watchId) {\n  //       navigator.geolocation.clearWatch(watchId);\n  //     }\n  //     if (marker && mapRef.current) {\n  //       mapRef.current.removeLayer(marker);\n  //     }\n  //   };\n  // }, []);\n\n\n  //change \n  // useEffect(() => {\n  //   let watchId;\n  \n  //   if (navigator.geolocation) {\n  //     watchId = navigator.geolocation.watchPosition(\n  //       (location) => {\n  //         const { latitude, longitude } = location.coords;\n  //         const newPosition = [latitude, longitude];\n  //         console.log(\"Live location updated:\", { latitude, longitude });\n  \n  //         setPosition(newPosition);\n  //         fetchAddress(latitude, longitude);\n  \n  //         if (mapRef.current) {\n  //           if (!liveMarkerRef.current) {\n  //             // Create marker only ONCE\n  //             liveMarkerRef.current = L.marker(newPosition, {\n  //               icon: L.icon({\n  //                 iconUrl: \"https://cdn-icons-png.flaticon.com/512/684/684908.png\", // your icon\n  //                 iconSize: [30, 30],\n  //                 iconAnchor: [15, 30],\n  //               })\n  //             }).addTo(mapRef.current);\n  //           } else {\n  //             // Just move the existing marker\n  //             liveMarkerRef.current.setLatLng(newPosition);\n  //           }\n  \n  //           mapRef.current.setView(newPosition, 18, { animate: true, pan: { duration: 1 } });\n  //         }\n  //       },\n  //       (error) => {\n  //         console.error(\"Error fetching live location:\", error);\n  //         setAddress(\"Unable to retrieve location. Try enabling GPS.\");\n  //         setPosition([14.334990, 78.537372]); // Fallback to a default location\n  //         alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");\n  //       },\n  //       {\n  //         enableHighAccuracy: true,\n  //         timeout: 10000,\n  //         maximumAge: 0\n  //       }\n  //     );\n  //   } else {\n  //     console.error(\"Geolocation not supported\");\n  //     setAddress(\"Geolocation not supported\");\n  //     setPosition([14.334990, 78.537372]); // Default fallback location\n  //     alert(\"Geolocation is not supported by your browser. Please select a location from the sidebar.\");\n  //   }\n  \n  //   return () => {\n  //     if (watchId) {\n  //       navigator.geolocation.clearWatch(watchId);\n  //     }\n  //     if (liveMarkerRef.current && mapRef.current) {\n  //       mapRef.current.removeLayer(liveMarkerRef.current);\n  //       liveMarkerRef.current = null;\n  //     }\n  //   };\n  // }, []);\n  \n  // Watch the live location\n  // useEffect(() => {\n  //   let watchId;\n  \n  //   if (navigator.geolocation) {\n  //     watchId = navigator.geolocation.watchPosition(\n  //       (location) => {\n  //         const { latitude, longitude } = location.coords;\n  //         const newPosition = [latitude, longitude];\n  //         setPosition(newPosition);\n  //         fetchAddress(latitude, longitude);\n  \n  //         if (mapRef.current) {\n  //           if (!liveMarkerRef.current) {\n  //             // Create marker only once\n  //             liveMarkerRef.current = L.marker(newPosition, {\n  //               icon: blueIcon,\n  //             }).addTo(mapRef.current);\n  //           } else {\n  //             // Update the position of the existing marker\n  //             liveMarkerRef.current.setLatLng(newPosition);\n  //           }\n  \n  //           // Move the map center smoothly\n  //           mapRef.current.setView(newPosition, 18, { animate: true, pan: { duration: 1 } });\n  //         }\n  //       },\n  //       (error) => {\n  //         console.error(\"Error fetching live location:\", error);\n  //         setAddress(\"Unable to retrieve location. Try enabling GPS.\");\n  //       },\n  //       {\n  //         enableHighAccuracy: true,\n  //         timeout: 10000,\n  //         maximumAge: 0,\n  //       }\n  //     );\n  //   } else {\n  //     console.error(\"Geolocation not supported\");\n  //     setAddress(\"Geolocation not supported\");\n  //   }\n\n  //   // Cleanup the watch when the component unmounts\n  //   return () => {\n  //     if (watchId) {\n  //       navigator.geolocation.clearWatch(watchId);\n  //     }\n  //   };\n  // }, []);\n\n    // Live location tracking\n    useEffect(() => {\n      if (navigator.geolocation) {\n        setLoadingLocation(true);\n        const id = navigator.geolocation.watchPosition(\n          (pos) => {\n            const { latitude, longitude, accuracy } = pos.coords;\n            const newPos = [latitude, longitude];\n            \n            setPosition(newPos);\n            setAccuracy(accuracy);\n            fetchAddress(latitude, longitude);\n            setLoadingLocation(false);\n  \n            if (liveMarkerRef.current) {\n              liveMarkerRef.current.setLatLng(newPos);\n            }\n  \n            // Smooth pan to new location\n            if (mapRef.current) {\n              mapRef.current.setView(newPos, 18, {\n                animate: true,\n                duration: 1\n              });\n            }\n          },\n          (err) => {\n            console.error(\"Error getting location:\", err);\n            setAddress(\"Unable to get live location\");\n            setLoadingLocation(false);\n          },\n          {\n            enableHighAccuracy: true,\n            timeout: 10000,\n            maximumAge: 0\n          }\n        );\n        setWatchId(id);\n      }\n  \n      return () => {\n        if (watchId) navigator.geolocation.clearWatch(watchId);\n      };\n    }, []);\n  \n\n  // // Reverse geocoding function\n  // const fetchAddress = async (latitude, longitude) => {\n  //   try {\n  //     const response = await fetch(\n  //       `https://nominatim.openstreetmap.org/reverse?lat=${latitude}&lon=${longitude}&format=json`\n  //     );\n  //     const data = await response.json();\n  //     setAddress(data.display_name || \"Address not found\");\n  //   } catch (error) {\n  //     console.error(\"Error fetching address:\", error);\n  //     setAddress(\"Unable to retrieve address\");\n  //   }\n  // };\n  const fetchAddress = async (lat, lng) => {\n    try {\n      const response = await fetch(\n        `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`\n      );\n      const data = await response.json();\n      setAddress(data.display_name || \"Address not found\");\n    } catch (error) {\n      console.error(\"Error fetching address:\", error);\n      setAddress(\"Unable to retrieve address\");\n    }\n  };\n\n  // Handle live location button click\n  // const handleLiveLocation = () => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(\n  //       (location) => {\n  //         const { latitude, longitude } = location.coords;\n  //         console.log(\"Live location updated:\", { latitude, longitude });\n  \n  //         const newPosition = [latitude, longitude];\n  //         setPosition(newPosition);\n  //         fetchAddress(latitude, longitude);\n  \n  //         if (mapRef.current) {\n  //           mapRef.current.setView(newPosition, 18, { animate: true });\n  \n  //           // Move the existing live marker (not create a new one)\n  //           if (liveMarkerRef.current) {\n  //             liveMarkerRef.current.setLatLng(newPosition);\n  //           }\n  //         }\n  //       },\n  //       (error) => {\n  //         console.error(\"Error fetching live location:\", error);\n  //         alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");\n  //       },\n  //       {\n  //         enableHighAccuracy: true,\n  //         timeout: 10000,\n  //         maximumAge: 0\n  //       }\n  //     );\n  //   } else {\n  //     alert(\"Geolocation is not supported by your browser.\");\n  //   }\n  // };\n\n\n// // Your live location logic\n// const handleLiveLocation = () => {\n//   if (navigator.geolocation) {\n//     const id = navigator.geolocation.watchPosition(\n//       (location) => {\n//         const { latitude, longitude } = location.coords;\n//         const newPosition = [latitude, longitude];\n\n//         console.log(\"Live location updated:\", newPosition);\n\n//         setPosition(newPosition);\n\n//         if (liveMarkerRef.current) {\n//           liveMarkerRef.current.setLatLng(newPosition);\n//         }\n\n//         if (mapRef.current) {\n//           mapRef.current.setView(newPosition, 18, { animate: true });\n//         }\n//       },\n//       (error) => {\n//         console.error(\"Error fetching live location:\", error);\n//         alert(\"Unable to retrieve location. Please check GPS.\");\n//       },\n//       {\n//         enableHighAccuracy: true,\n//         timeout: 10000,\n//         maximumAge: 0\n//       }\n//     );\n//     setWatchId(id);\n//   } else {\n//     alert(\"Geolocation is not supported.\");\n//   }\n// };\n\n// // Cleanup old watch when component unmounts\n// useEffect(() => {\n//   return () => {\n//     if (watchId) {\n//       navigator.geolocation.clearWatch(watchId);\n//     }\n//   };\n// }, [watchId]);\n\nconst handleLiveLocation = () => {\n  if (navigator.geolocation) {\n    setLoadingLocation(true);\n    const id = navigator.geolocation.watchPosition(\n      (pos) => {\n        const { latitude, longitude } = pos.coords;\n        const newPos = [latitude, longitude];\n        \n        setPosition(newPos);\n        fetchAddress(latitude, longitude);\n        setLoadingLocation(false);\n\n        if (liveMarkerRef.current) {\n          liveMarkerRef.current.setLatLng(newPos);\n        }\n\n        if (mapRef.current) {\n          mapRef.current.setView(newPos, 18, { animate: true });\n        }\n      },\n      (err) => {\n        console.error(\"Error getting location:\", err);\n        setLoadingLocation(false);\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 0\n      }\n    );\n    setWatchId(id);\n  }\n};\n\n\n  const filterSuggestions = (query) => {\n    const lowerQuery = query.toLowerCase();\n    const filtered = Object.keys(customLocations)\n      .filter(name => name.toLowerCase().includes(lowerQuery))\n      .map(name => ({ name }));\n    setSuggestions(filtered);\n  };\n\n  // const handleSearchChange = (e) => {\n  //   const query = e.target.value;\n  //   setSearchQuery(query);\n  //   filterSuggestions(query);\n  // };\n  const handleRoute = async () => {\n    try {\n      const src = await geocodeLocation(sourceText);\n      const dest = await geocodeLocation(destinationText);\n      setSourceCoords(src);\n      setDestinationCoords(dest);\n    } catch (err) {\n      alert(\"Failed to find one or both locations\");\n      console.error(err);\n    }\n    setShowSearchBar(false);\n  };\n  \n  const handleBlockClick = (name, coords) => {\n    setDestinationText(name);\n    setDestinationCoords(coords);\n    mapRef.current?.setView([coords.lat, coords.lng], 18);\n\n    if (mapRef.current) {\n      const { type, hours, description } = customLocations[name];\n      const popupContent = `\n        <div>\n          <h3>${name}</h3>\n          <p><strong>Type:</strong> ${type}</p>\n          <p><strong>Hours:</strong> ${hours}</p>\n          <p><strong>Description:</strong> ${description}</p>\n        </div>\n      `;\n      L.popup()\n        .setLatLng([coords.lat, coords.lng])\n        .setContent(popupContent)\n        .openOn(mapRef.current);\n    }\n  };\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100vw\", position: \"relative\" }}>\n      <Navbar />\n      {/* Sidebar */}\n      <div style={{\n        position: \"absolute\",\n        top: 70,\n        left: sidebarOpen ? 10 : -250,\n        width: \"240px\",\n        transition: \"left 0.3s ease-in-out\",\n        zIndex: 1001,\n        background: \"#fff\",\n        padding: \"12px\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n        maxHeight: \"80vh\",\n        overflowY: \"auto\"\n      }}>\n        <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n        <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n          {Object.entries(customLocations).map(([name, data]) => (\n            <li key={name}\n              onClick={() => handleBlockClick(name, data)}\n              style={{\n                marginBottom: \"10px\",\n                padding: \"8px\",\n                background: \"#f1f1f1\",\n                borderRadius: \"6px\",\n                cursor: \"pointer\",\n                fontSize: \"14px\"\n              }}>\n              <strong>{name}</strong><br />\n              <small>🧭 {data.type} | 🕒 {data.hours}</small>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Toggle Sidebar */}\n      <button\n        onClick={() => setSidebarOpen(!sidebarOpen)}\n        style={{\n          position: \"absolute\",\n          left: sidebarOpen ? 260 : 10,\n          top: 70,\n          zIndex: 1001,\n          background: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"6px\",\n          padding: \"6px 10px\",\n          cursor: \"pointer\"\n        }}\n      >\n        {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n      </button>\n\n      {/* Live Location Button (Fixed Top-Right)\n      <button\n  onClick={handleLiveLocation}\n  style={{\n    position: \"fixed\",\n    right: 10,\n    bottom: 10,\n    zIndex: 1001,\n    background: \"#28a745\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    padding: \"6px 10px\",\n    cursor: loadingLocation ? \"not-allowed\" : \"pointer\",\n    fontSize: \"14px\",\n    opacity: loadingLocation ? 0.7 : 1,\n  }}\n  disabled={loadingLocation}\n>\n  {loadingLocation ? \"🔄 Locating...\" : \"📍 Live Location\"}\n</button> */}\n\n\n      {/* Live Location Button */}\n      <button\n        onClick={handleLiveLocation}\n        style={{\n          position: \"fixed\",\n          right: 10,\n          bottom: 10,\n          zIndex: 1001,\n          background: \"#28a745\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"6px\",\n          padding: \"6px 10px\",\n          cursor: loadingLocation ? \"not-allowed\" : \"pointer\",\n          fontSize: \"14px\",\n          opacity: loadingLocation ? 0.7 : 1,\n        }}\n        disabled={loadingLocation}\n      >\n        {loadingLocation ? \"🔄 Locating...\" : \"📍 Live Location\"}\n      </button>\n      {/* Input Bar */}\n      {/* <div\n  style={{\n    position: \"absolute\",\n    top: 10,\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    zIndex: 1000,\n    display: \"flex\",\n    gap: \"8px\",\n    background: \"#fff\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    marginTop: \"70px\",\n    boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n    flexWrap: \"wrap\",    // ⭐ ADD THIS LINE\n    justifyContent: \"center\",\n    width: \"90%\",        // ⭐ Make sure it doesn't overflow on small screen\n    maxWidth: \"600px\",   // ⭐ Limit it nicely\n  }}\n>\n  <input\n    type=\"text\"\n    placeholder=\"Source (e.g., Library)\"\n    value={sourceText}\n    onChange={(e) => {\n      setSourceText(e.target.value);\n      setSearchQuery(e.target.value);\n      filterSuggestions(e.target.value);\n    }}\n    onFocus={() => setActiveInput('source')}\n    style={{\n      flex: \"1 1 150px\",  // ⭐ Responsive width\n      padding: \"6px 12px\",\n      fontSize: \"14px\",\n      borderRadius: \"6px\",\n      border: \"1px solid #ccc\",\n      minWidth: \"120px\"\n    }}\n  />\n  \n  <input\n    type=\"text\"\n    placeholder=\"Destination (e.g., CSE Block)\"\n    value={destinationText}\n    onChange={(e) => {\n      setDestinationText(e.target.value);\n      setSearchQuery(e.target.value);\n      filterSuggestions(e.target.value);\n    }}\n    onFocus={() => setActiveInput('destination')}\n    style={{\n      flex: \"1 1 150px\",\n      padding: \"6px 12px\",\n      fontSize: \"14px\",\n      borderRadius: \"6px\",\n      border: \"1px solid #ccc\",\n      minWidth: \"120px\"\n    }}\n  />\n\n  <select\n    value={travelMode}\n    onChange={(e) => setTravelMode(e.target.value)}\n    style={{\n      flex: \"1 1 100px\",\n      padding: \"6px 10px\",\n      fontSize: \"14px\",\n      borderRadius: \"6px\",\n      border: \"1px solid #ccc\",\n      background: \"#fff\",\n      cursor: \"pointer\",\n      minWidth: \"100px\"\n    }}\n  >\n    <option value=\"walk\">🚶 Walk</option>\n    <option value=\"bicycle\">🚴 Bicycle</option>\n    <option value=\"vehicle\">🚗 Vehicle</option>\n  </select>\n\n  <button\n    onClick={handleRoute}\n    style={{\n      flex: \"0 0 auto\",\n      background: \"#28a745\",\n      color: \"#fff\",\n      border: \"none\",\n      padding: \"6px 10px\",\n      fontSize: \"14px\",\n      borderRadius: \"6px\",\n      cursor: \"pointer\",\n      whiteSpace: \"nowrap\",\n    }}\n  >\n    Route\n  </button>\n</div> */}\n\n      \n    <div style={{ position: \"relative\", zIndex: 1000 }}>\n      {!showSearchBar && (\n        <button\n          onClick={() => setShowSearchBar(true)}\n          style={{\n            position: \"absolute\",\n            top: 10,\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            \n            background: \"#007bff\",\n            color: \"#fff\",\n            border: \"none\",\n            padding: \"8px 16px\",\n            fontSize: \"16px\",\n            borderRadius: \"8px\",\n            cursor: \"pointer\",\n            marginTop: \"70px\",\n            boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n          }}\n        >\n          Search\n        </button>\n      )}\n\n      {showSearchBar && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 10,\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            display: \"flex\",\n            gap: \"8px\",\n            background: \"#fff\",\n            padding: \"10px\",\n            borderRadius: \"8px\",\n            marginTop: \"70px\",\n            boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            width: \"90%\",\n            maxWidth: \"600px\",\n          }}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Source (e.g., Library)\"\n            value={sourceText}\n            onChange={(e) => {\n              setSourceText(e.target.value);\n              setSearchQuery(e.target.value);\n              filterSuggestions(e.target.value);\n            }}\n            onFocus={() => setActiveInput('source')}\n            style={{\n              flex: \"1 1 150px\",\n              padding: \"6px 12px\",\n              fontSize: \"14px\",\n              borderRadius: \"6px\",\n              border: \"1px solid #ccc\",\n              minWidth: \"120px\",\n            }}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"Destination (e.g., CSE Block)\"\n            value={destinationText}\n            onChange={(e) => {\n              setDestinationText(e.target.value);\n              setSearchQuery(e.target.value);\n              filterSuggestions(e.target.value);\n            }}\n            onFocus={() => setActiveInput('destination')}\n            style={{\n              flex: \"1 1 150px\",\n              padding: \"6px 12px\",\n              fontSize: \"14px\",\n              borderRadius: \"6px\",\n              border: \"1px solid #ccc\",\n              minWidth: \"120px\",\n            }}\n          />\n\n          <select\n            value={travelMode}\n            onChange={(e) => setTravelMode(e.target.value)}\n            style={{\n              flex: \"1 1 100px\",\n              padding: \"6px 10px\",\n              fontSize: \"14px\",\n              borderRadius: \"6px\",\n              border: \"1px solid #ccc\",\n              background: \"#fff\",\n              cursor: \"pointer\",\n              minWidth: \"100px\",\n            }}\n          >\n            <option value=\"walk\">🚶 Walk</option>\n            <option value=\"bicycle\">🚴 Bicycle</option>\n            <option value=\"vehicle\">🚗 Vehicle</option>\n          </select>\n\n          <button\n            onClick={handleRoute}\n            style={{\n              flex: \"0 0 auto\",\n              background: \"#28a745\",\n              color: \"#fff\",\n              border: \"none\",\n              padding: \"6px 10px\",\n              fontSize: \"14px\",\n              borderRadius: \"6px\",\n              cursor: \"pointer\",\n              whiteSpace: \"nowrap\",\n            }}\n          >\n            Route\n          </button>\n        </div>\n      )}\n    </div>\n\n\n      {/* Search Suggestions */}\n      {searchQuery && suggestions.length > 0 && (\n        <ul\n          style={{\n            position: \"absolute\",\n            top: 60,\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            background: \"#fff\",\n            width: \"300px\",\n            maxHeight: \"150px\",\n            overflowY: \"auto\",\n            boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n            zIndex: 1000,\n            listStyle: \"none\",\n            padding: 0,\n            margin: 0,\n            marginTop: \"70px\",\n            borderRadius: \"8px\",\n          }}\n        >\n          {suggestions.map((suggestion, index) => (\n            <li\n              key={index}\n              onClick={() => {\n                if (activeInput === 'source') {\n                  setSourceText(suggestion.name);\n                } else if (activeInput === 'destination') {\n                  setDestinationText(suggestion.name);\n                }\n                setSuggestions([]);\n                setSearchQuery('');\n              }}\n              style={{\n                padding: \"8px\",\n                cursor: \"pointer\",\n                backgroundColor: \"#f1f1f1\",\n                borderBottom: \"1px solid #ddd\"\n              }}\n            >\n              {suggestion.name}\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {/* Map */}\n      <MapContainer\n        center={rkValley}\n        zoom={17}\n        style={{ width: \"100%\", height: \"100%\" }}\n        ref={mapRef}\n        whenCreated={(mapInstance) => {\n          mapRef.current = mapInstance;\n          const compass = new L.Control.Compass({\n            autoActive: true,\n            showDigit: true,\n          });\n          compass.addTo(mapRef.current);\n        }}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {/* {position && (\n          <Marker\n          position={position}\n          ref={liveMarkerRef}\n          icon={blueIcon} // optional: your custom blue marker\n        >\n          <Popup>\n            <div>\n              <p><strong>You are here!</strong></p>\n              <p>{address}</p>\n              <p style={{ marginTop: \"10px\", fontSize: \"12px\" }}>\n                Not at RGUKT RK Valley? Ensure GPS is enabled.\n              </p>\n            </div>\n          </Popup>\n        </Marker>\n    \n        \n        )} */}\n\n\n\n        {/* Live Location Marker */}\n        {position && (\n          <>\n            <Marker \n              position={position}\n              ref={liveMarkerRef}\n              icon={LiveLocationIcon}\n            >\n              <Popup>\n                <div>\n                  <strong>You are here!</strong><br />\n                  {address}<br />\n                  {accuracy && `Accuracy: ~${Math.round(accuracy)} meters`}\n                </div>\n              </Popup>\n            </Marker>\n            {accuracy && (\n              <Circle\n                center={position}\n                radius={accuracy}\n                fillOpacity={0.2}\n                color=\"#0078FF\"\n                fillColor=\"#0078FF\"\n              />\n            )}\n          </>\n        )}\n        <LayersControl position=\"topright\">\n          <LayersControl.BaseLayer name=\"OpenStreetMap\">\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n          </LayersControl.BaseLayer>\n          <LayersControl.BaseLayer checked  name=\"Satellite View\">\n            <TileLayer\n              attribution='Tiles © Esri — Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n              url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            />\n          </LayersControl.BaseLayer>\n        </LayersControl>\n        {sourceCoords && destinationCoords && (\n          <RoutingMachine\n            source={sourceCoords}\n            destination={destinationCoords}\n            travelMode={travelMode}\n          />\n        )}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapPage;"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAACC,MAAM,QAAQ,eAAe;AACpG,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,yBAAyB;AAChC,OAAO,0BAA0B;AACjC,OAAO,8CAA8C;AACrD,OAAO,iBAAiB;AACxB,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,QAAQ,GAAG;EAAEC,GAAG,EAAE,QAAQ;EAAEC,GAAG,EAAE;AAAU,CAAC;;AAElD;AACA,IAAIC,WAAW,GAAGT,CAAC,CAACU,IAAI,CAAC;EACvBC,OAAO,EAAE,6DA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AAEC,GAAG,EAAE,SAAS;MAAEwH,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE,SAAS;MAAEC,WAAW,EAAE;IAAoE;EACpK,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE;EACA5I,SAAS,CAAC,MAAM;IACd,IAAI6I,SAAS,CAACC,WAAW,EAAE;MACzBpB,kBAAkB,CAAC,IAAI,CAAC;MACxB,MAAMqB,EAAE,GAAGF,SAAS,CAACC,WAAW,CAACE,aAAa,CAC3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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}