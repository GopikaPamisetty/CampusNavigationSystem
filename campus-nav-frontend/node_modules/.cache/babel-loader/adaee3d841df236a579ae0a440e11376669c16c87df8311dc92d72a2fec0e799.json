{"ast":null,"code":"// import React from \"react\"\n// import { Link } from 'react-router-dom';\n// import  { useEffect, useRef, useState } from \"react\";\n// import { MapContainer, TileLayer, useMap, LayersControl } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// //import Fuse from \"fuse.js\";\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n// //import { Link } from 'react-router-dom';\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n//   useEffect(() => {\n//     if (!map) return;\n//     if (!mapRef.current) return;\n//     // Initialize and add the compass control\n//     const compass = new L.Control.Compass({\n//       autoActive: true,\n//       showDigit: true,\n//     });\n//     map.addControl(compass);\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`} &nbsp; | &nbsp;\n//           ⏱ Time: {duration} min\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n//   const customLocations = {\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"9AM–6PM\", description: \"A place for study and research\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Place for shopping and dining\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"Emergency medical services\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \"Place of worship\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Sports facilities\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–7PM\", description: \"Computer labs and resources\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Place to send and receive\" },\n//     // \"Library\": { lat: 14.335461, lng: 78.538369 ,type:\"study\",description:\"Consists of many resources to refer and a place where we can study peacefully\"},\n//     // \"CSE Block\": { lat: 14.336241, lng: 78.541992,type:\"Department\",description:\"Department of Computer Science and Engineering\"},\n//     // \"ECE Block\": { lat: 14.334558, lng: 78.541885 ,type:\"Department\",description:\"Department of Electronics and Communication Engineering\"},\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188,type:\"Department\",hours:\"\",description:\"Department of Metallurgical and Materials Engineering\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395,type:\"Department\",description:\"Department of Electrical and Electronics Engineering\" },\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308 ,type:\"Department\",description:\"Department of Mechanical Engineering\"},\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505 ,type:\"Department\",description:\"Department of Chemical Engineering\"},\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514,type:\"\",description:\"Department of Civil Engineering\" },\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223,type:\"\",description:\"\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779 ,type:\"Department\",description:\"\"},\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412,type:\"Hostel\",description:\"Accomodation for female students\" },\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720,type:\"Hostel\",description:\"Accomodation for male students\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234,type:\"Hostel\",description:\"Accomodation for male students\" },\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152,type:\"Department\",description:\"place \" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661,type:\"\",description:\"\" },\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791,type:\"\",description:\"\" },\n//    \"Student Activity Center\": { lat: 14.338203, lng: 78.540398,type:\"\",description:\"\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465,type:\"\",description:\"\"},\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477 ,type:\"Food\",description:\"\"},\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701 ,type:\"Food\",description:\"\"},\n//     \"SBI\": { lat: 14.337374, lng: 78.534579,type:\"Bank\",description:\"\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249,type:\"\",description:\"\"},\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874,type:\"Play\",description:\"\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652 ,type:\"\",description:\"\"},\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744,type:\"Hostel\",description:\"\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896,type:\"Hostel\",description:\"\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776,type:\"Academic\",description:\"\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480,type:\"Religious\",description:\"\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775,type:\"Laundry\",description:\"\" },\n//   };\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//         <h3>${name}</h3>\n//         <p><strong>Type:</strong> ${type}</p>\n//         <p><strong>Hours:</strong> ${hours}</p>\n//         <p><strong>Description:</strong> ${description}</p>\n//       `;\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n//   return (\n//     <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n//       {/* Input Bar */}\n//       <div style={{\n//   position: \"absolute\",\n//   top: 10,\n//   left: \"50%\",\n//   transform: \"translateX(-50%)\",\n//   zIndex: 1000,\n//   display: \"flex\",\n//   gap: \"8px\",\n//   background: \"#fff\",\n//   padding: \"10px\",\n//   borderRadius: \"8px\",\n//   boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n// }}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   {/* Travel Mode Dropdown */}\n//   <select\n//     value={travelMode}\n//     onChange={(e) => setTravelMode(e.target.value)}\n//     style={{\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       border: \"1px solid #ccc\",\n//       background: \"#fff\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <option value=\"walk\">🚶 Walk</option>\n//     <option value=\"bicycle\">🚴 Bicycle</option>\n//     <option value=\"vehicle\">🚗 Vehicle</option>\n//   </select>\n//   <button\n//     onClick={handleRoute}\n//     style={{\n//       background: \"#28a745\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     Route\n//   </button>\n//   <div className=\"photos-link\">\n//         <Link to=\"/photos\">Photos</Link>\n//       </div>\n// </div>\n//       {/* Map */}\n//       <MapContainer\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n//           compass.addTo(mapRef.current);\n//         }}\n//       >\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//         />\n//       <LayersControl position=\"topright\">\n//   <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//     <TileLayer\n//       url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//     />\n//   </LayersControl.BaseLayer>\n//   <LayersControl.BaseLayer name=\"Satellite View\">\n//     <TileLayer\n//       attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//       url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//     />\n//   </LayersControl.BaseLayer>\n// </LayersControl>\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//        {/* Logout */}\n//        <button\n//         onClick={handleLogout}\n//         style={{\n//           position: \"absolute\",\n//           right: 10,\n//           bottom: 25,\n//           padding: \"8px 12px\",\n//           background: \"red\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//           zIndex: 1000,\n//         }}\n//       >\n//         Logout\n//       </button>\n//     </div>\n//   );\n// };\n// export default MapPage;\n// import React from \"react\"\n// import { Link } from 'react-router-dom';\n// import  { useEffect, useRef, useState } from \"react\";\n// import { MapContainer, TileLayer, useMap, LayersControl } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// //import Fuse from \"fuse.js\";\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n// //import { Link } from 'react-router-dom';\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n//   useEffect(() => {\n//     if (!map) return;\n//     if (!mapRef.current) return;\n//   const compass = new L.Control.Compass({\n//     autoActive: true,\n//     showDigit: true,\n//   }).addTo(map);\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`}\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n//   const customLocations = {\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"9AM–6PM\", description: \"A place for study and research\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Place for shopping and dining\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"Emergency medical services\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \"Place of worship\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Sports facilities\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–7PM\", description: \"Computer labs and resources\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Place to send and receive\" },\n//     // \"Library\": { lat: 14.335461, lng: 78.538369 ,type:\"study\",description:\"Consists of many resources to refer and a place where we can study peacefully\"},\n//     // \"CSE Block\": { lat: 14.336241, lng: 78.541992,type:\"Department\",description:\"Department of Computer Science and Engineering\"},\n//     // \"ECE Block\": { lat: 14.334558, lng: 78.541885 ,type:\"Department\",description:\"Department of Electronics and Communication Engineering\"},\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188,type:\"Department\",hours:\"\",description:\"Department of Metallurgical and Materials Engineering\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395,type:\"Department\",description:\"Department of Electrical and Electronics Engineering\" },\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308 ,type:\"Department\",description:\"Department of Mechanical Engineering\"},\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505 ,type:\"Department\",description:\"Department of Chemical Engineering\"},\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514,type:\"\",description:\"Department of Civil Engineering\" },\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223,type:\"\",description:\"\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779 ,type:\"Department\",description:\"\"},\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412,type:\"Hostel\",description:\"Accomodation for female students\" },\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720,type:\"Hostel\",description:\"Accomodation for male students\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234,type:\"Hostel\",description:\"Accomodation for male students\" },\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152,type:\"Department\",description:\"place \" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661,type:\"\",description:\"\" },\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791,type:\"\",description:\"\" },\n//    \"Student Activity Center\": { lat: 14.338203, lng: 78.540398,type:\"\",description:\"\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465,type:\"\",description:\"\"},\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477 ,type:\"Food\",description:\"\"},\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701 ,type:\"Food\",description:\"\"},\n//     \"SBI\": { lat: 14.337374, lng: 78.534579,type:\"Bank\",description:\"\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249,type:\"\",description:\"\"},\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874,type:\"Play\",description:\"\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652 ,type:\"\",description:\"\"},\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744,type:\"Hostel\",description:\"\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896,type:\"Hostel\",description:\"\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776,type:\"Academic\",description:\"\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480,type:\"Religious\",description:\"\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775,type:\"Laundry\",description:\"\" },\n//   };\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//       <div>\n//         <h3>${name}</h3>\n//         <p><strong>Type:</strong> ${type}</p>\n//         <p><strong>Hours:</strong> ${hours}</p>\n//         <p><strong>Description:</strong> ${description}</p>\n//       </div>\n//     `;\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n//   return (\n//     <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n//       {/* Input Bar */}\n//       <div style={{\n//   position: \"absolute\",\n//   top: 10,\n//   left: \"50%\",\n//   transform: \"translateX(-50%)\",\n//   zIndex: 1000,\n//   display: \"flex\",\n//   gap: \"8px\",\n//   background: \"#fff\",\n//   padding: \"10px\",\n//   borderRadius: \"8px\",\n//   boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n// }}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   {/* Travel Mode Dropdown */}\n//   <select\n//     value={travelMode}\n//     onChange={(e) => setTravelMode(e.target.value)}\n//     style={{\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       border: \"1px solid #ccc\",\n//       background: \"#fff\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <option value=\"walk\">🚶 Walk</option>\n//     <option value=\"bicycle\">🚴 Bicycle</option>\n//     <option value=\"vehicle\">🚗 Vehicle</option>\n//   </select>\n//   <button\n//     onClick={handleRoute}\n//     style={{\n//       background: \"#28a745\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     Route\n//   </button>\n//   <div className=\"photos-link\">\n//         <Link to=\"/photos\">Photos</Link>\n//       </div>\n// </div>\n//       {/* Map */}\n//       <MapContainer\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n//           compass.addTo(mapRef.current);\n//         }}\n//       >\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//         />\n//       <LayersControl position=\"topright\">\n//   <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//     <TileLayer\n//       url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//     />\n//   </LayersControl.BaseLayer>\n//   <LayersControl.BaseLayer name=\"Satellite View\">\n//     <TileLayer\n//       attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//       url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//     />\n//   </LayersControl.BaseLayer>\n// </LayersControl>\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//        {/* Logout */}\n//        <button\n//         onClick={handleLogout}\n//         style={{\n//           position: \"absolute\",\n//           right: 10,\n//           bottom: 25,\n//           padding: \"8px 12px\",\n//           background: \"red\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//           zIndex: 1000,\n//         }}\n//       >\n//         Logout\n//       </button>\n//     </div>\n//   );\n// };\n// export default MapPage;\n// import React, { useEffect, useRef, useState } from \"react\";\n// //import { Link } from 'react-router-dom';\n// import { MapContainer, TileLayer, useMap, LayersControl, Marker, Popup } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// import Navbar from './Navbar'; // adjust the path if Navbar.js is in a different folder\n// import {GeoSearchControl, OpenStreetMapProvider} from 'leaflet-geosearch';\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n// const handleLogout = () => {\n//   localStorage.removeItem(\"token\"); // Or whatever key you're using\n//   window.location.href = \"/login\"; // Adjust if using React Router\n// };\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n//   useEffect(() => {\n//     if (!map) return;\n//     if (mapRef.current) {\n//       const compass = new L.Control.Compass({\n//         autoActive: true,\n//         showDigit: true,\n//       });\n//       compass.addTo(mapRef.current);\n//     }\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`} &nbsp; | &nbsp;\n//           ⏱ Time: {duration} min\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [position, setPosition] = useState(null);\n//   const [address, setAddress] = useState('Fetching Address...')\n//   const [activeInput, setActiveInput] = useState(null); // NEW: Track which input is focused\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n//   const customLocations = {\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223, type: \"Academic\", hours: \"9AM–10PM\", description: \"Centralized building with classrooms, seminar halls, and faculty offices for academic activities\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779, type: \"Academic\", hours: \"9AM–10PM\", description: \"Administrative and teaching space for various departmental operations and academic sessions\" },\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720, type: \"Hostel\", hours: \"24x7\", description: \"On-campus residential block for male students with secure lodging and basic amenities\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234, type: \"Hostel\", hours: \"24x7\", description: \"Well-facilitated hostel for male students offering comfort, security, and communal living\" },\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505, type: \"Department\", hours: \"9AM–5PM\", description: \"Dedicated facility for chemical engineering studies, including research and lab-based learning.\" },\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514, type: \"Department\", hours: \"9AM–5PM\", description: \"Engineering block supporting civil engineering courses, design labs, and project spaces\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–5PM\", description: \"Central computing facility with computer labs and high-speed internet resources.\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering providing academic and technical infrastructure\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering offering labs and classrooms\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electrical and Electronics Engineering supporting circuits, machines, and power systems\" },\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students with safety and residential services.\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Residential facility for girl students with necessary hostel amenities.\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652, type: \"Guest facility\", hours: \"24x7\", description: \"Well-maintained guest house for hosting visiting faculty, guests, and dignitaries.\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"24x7 medical facility for basic healthcare and emergency services on campus\" },\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791, type: \"Administration\", hours: \"9AM–5PM\", description: \"Institutional cell responsible for maintaining and enhancing academic quality\" },\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152, type: \"Department\", hours: \"9AM–5PM\", description: \"Lab facility used by multiple departments for academic experiments and practical sessions\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775, type: \"Laundry\", hours: \"9AM–5PM\", description: \"Laundry service center for washing and drying hostel students’ clothes.\" },\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"7AM–11PM\", description: \"Central resource hub with a wide collection of books, journals, and study spaces.\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480, type: \"Religious\", hours: \"9AM–7PM\", description: \"Place of worship for Muslim students and staff within the campus.\" },\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Mechanical Engineering equipped for academic and technical training.\" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661, type: \"Department\", hours: \"9AM–5PM\", description: \"Workshop with tools and machinery for mechanical hands-on training and fabrication\" },\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477, type: \"Food\", hours: \"7AM–9PM\", description: \"Dining hall serving meals to students with regular breakfast, lunch, and dinner\" },\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701, type: \"Food\", hours: \"7AM–9PM\", description: \"Catering facility providing nutritious food to hostel residents and students.\" },\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Metallurgical and Materials Engineering for academic and research purposes\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776, type: \"Academic\", hours: \"9AM–5PM\", description: \"Academic buildings from the original campus supporting multiple disciplines\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592, type: \"Hostel\", hours: \"24x7\", description: \"Boys’ hostel located in the older section of the campus with residential facilities.\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896, type: \"Hostel\", hours: \"24x7\", description: \"Another boys’ hostel in the old campus with accommodation services.\" },\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744, type: \"Hostel\", hours: \"24x7\", description: \"Girls’ hostel located in the old campus area offering safe living spaces.\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914, type: \"Hostel\", hours: \"24x7\", description: \"Second girls’ hostel from the old block, supporting student housing.\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249, type: \"Security\", hours: \"24x7\", description: \"Campus law enforcement unit ensuring discipline, emergency handling, and general safety.\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Postal unit on campus for sending letters, parcels, and accessing courier services.\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465, type: \"Utility\", hours: \"9AM–5PM\", description: \"Electricity management center responsible for power regulation and backup systems.\" },\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874, type: \"Play\", hours: \"6AM-8PM\", description: \"Multipurpose playground for sports practices, matches, and college-level tournaments.\" },\n//     \"SBI\": { lat: 14.337374, lng: 78.534579, type: \"Bank\", hours: \"9AM–5PM\", description: \"Banking facility providing financial services including ATM, account handling, and transactions\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Commercial area within campus for everyday shopping, snacks, and general items\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Indoor and outdoor sports facilities including courts, tracks, and fitness zones.\" },\n//     \"Student Activity Center\": { lat: 14.338203, lng: 78.540398, type: \"Recreational\", hours: \"9AM–5PM\", description: \" Campus venue for student initiatives, cultural programs, and club activities\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \" Spiritual place for religious observance and peaceful reflection.\" },\n//   };\n//   // Function to handle live location\n//   const handleLiveLocation = () => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           const { latitude, longitude } = position.coords;\n//           const userLocation = [latitude, longitude]\n//           setPosition([latitude, longitude]);\n//           // Set the map view to the user's location with maximum zoom\n//           mapRef.current?.setView(userLocation, mapRef.current.getMaxZoom());\n//           // Optionally, add a marker at the user's location\n//           L.marker(userLocation)\n//             .addTo(mapRef.current)\n//             .bindPopup(\"📍 You are here!\")\n//             .openPopup();\n//         },\n//         (error) => {\n//           alert(\"Unable to retrieve your location. Please enable location services.\");\n//           console.error(error);\n//         }\n//       );\n//     } else {\n//       alert(\"Geolocation is not supported by your browser.\");\n//     }\n//   };\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n//   // Function to filter locations based on search query\n//   const filterSuggestions = (query) => {\n//     const lowerQuery = query.toLowerCase();\n//     const filtered = Object.keys(customLocations) // Only get the names of locations\n//       .filter(name => name.toLowerCase().includes(lowerQuery)) // Filter by name match\n//       .map(name => ({ name })); // Map to just name for suggestions\n//     setSuggestions(filtered);\n//   };\n//   const handleSearchChange = (e) => {\n//     const query = e.target.value;\n//     setSearchQuery(query); // Update search query\n//     filterSuggestions(query); // Update suggestions based on query\n//   };\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//       <div>\n//          <h3>${name}</h3>\n//          <p><strong>Type:</strong> ${type}</p>\n//          <p><strong>Hours:</strong> ${hours}</p>\n//          <p><strong>Description:</strong> ${description}</p>\n//        </div>\n//      `;\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n//   return (\n//     <div style={{ height: \"100vh\", width: \"100vw\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <Navbar />\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       {/* Navbar */}\n//       {/* <div style={{\n//   position: \"fixed\",\n//   top: 0,\n//   left: 0,\n//   width: \"100%\",\n//   backgroundColor: \"#2c3e50\",\n//   color: \"#ecf0f1\",\n//   padding: \"12px 24px\",\n//   fontSize: \"20px\",\n//   fontWeight: \"bold\",\n//   display: \"flex\",\n//   justifyContent: \"space-between\",\n//   alignItems: \"center\",\n//   zIndex: 2000,\n//   boxShadow: \"0 2px 6px rgba(0, 0, 0, 0.2)\"\n// }}>\n//    <div className=\"navbar-left\">\n//         <img src=\"logo.jpg\" alt=\"Campus Logo\" className=\"navbar-logo\" />\n//         <span className=\"navbar-title\"></span>\n//       </div>\n//   <span style={{ whiteSpace: \"nowrap\" }}>Campus Navigation</span>\n//   <div style={{ height: '35px',width:'40px', marginRight:0,\n//         color: \"#fff\",\n//         border: \"none\",\n//         borderRadius: \"6px\",\n//         padding: \"8px 16px\",\n//         cursor: \"pointer\",\n//         fontSize: \"14px\",\n//         fontWeight: \"bold\"}}>\n//   <Link to=\"/photos\" >Photos</Link>\n// </div>\n//   <button\n//     onClick={handleLogout}\n//     style={{\n//       backgroundColor: \"#e74c3c\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       borderRadius: \"6px\",\n//       padding: \"8px 16px\",\n//       cursor: \"pointer\",\n//       fontSize: \"14px\",\n//       fontWeight: \"bold\"\n//     }}\n//   >\n//     Logout\n//   </button>\n// </div> */}\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n//       <button\n//         onClick={handleLiveLocation}\n//         style={{\n//           position: \"fixed\",\n//           right: 10,\n//           bottom: 40,\n//           zIndex: 1001,\n//           background: \"#28a745\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         📍 Live Location\n//       </button>\n//       {/* Input Bar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 10,\n//         left: \"50%\",\n//         transform: \"translateX(-50%)\",\n//         zIndex: 1000,\n//         display: \"flex\",\n//         gap: \"8px\",\n//         background: \"#fff\",\n//         padding: \"10px\",\n//         borderRadius: \"8px\",\n//         marginTop: \"70px\",\n//         boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n//       }}>\n//         {/* <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     onFocus={() => filterSuggestions(sourceText)} // Ensure filtering happens on focus\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     onFocus={() => filterSuggestions(destinationText)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   /> */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Source (e.g., Library)\"\n//           value={sourceText}\n//           onChange={(e) => {\n//             setSourceText(e.target.value);\n//             setSearchQuery(e.target.value); // Update searchQuery to show suggestions\n//             filterSuggestions(e.target.value);\n//           }}\n//           onFocus={() => setActiveInput('source')} // SET ACTIVE INPUT\n//           style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Destination (e.g., CSE Block)\"\n//           value={destinationText}\n//           onChange={(e) => {\n//             setDestinationText(e.target.value);\n//             setSearchQuery(e.target.value);\n//             filterSuggestions(e.target.value);\n//           }}\n//           onFocus={() => setActiveInput('destination')} // SET ACTIVE INPUT\n//           style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//         />\n//         {/* Travel Mode Dropdown */}\n//         <select\n//           value={travelMode}\n//           onChange={(e) => setTravelMode(e.target.value)}\n//           style={{\n//             padding: \"6px 10px\",\n//             fontSize: \"14px\",\n//             borderRadius: \"6px\",\n//             border: \"1px solid #ccc\",\n//             background: \"#fff\",\n//             cursor: \"pointer\"\n//           }}\n//         >\n//           <option value=\"walk\">🚶 Walk</option>\n//           <option value=\"bicycle\">🚴 Bicycle</option>\n//           <option value=\"vehicle\">🚗 Vehicle</option>\n//         </select>\n//         <button\n//           onClick={handleRoute}\n//           style={{\n//             background: \"#28a745\",\n//             color: \"#fff\",\n//             border: \"none\",\n//             padding: \"6px 10px\",\n//             fontSize: \"14px\",\n//             borderRadius: \"6px\",\n//             cursor: \"pointer\"\n//           }}\n//         >\n//           Route\n//         </button>\n//         {/* <div className=\"photos-link\">\n//          <Link to=\"/photos\">Photos</Link>\n//        </div> */}\n//       </div>\n//       {/* Search Suggestions */}\n//       {searchQuery && suggestions.length > 0 && (\n//         <ul\n//           style={{\n//             position: \"absolute\",\n//             top: 60,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#fff\",\n//             width: \"300px\",\n//             maxHeight: \"150px\",\n//             overflowY: \"auto\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//             zIndex: 1000,\n//             listStyle: \"none\",\n//             padding: 0,\n//             margin: 0,\n//             marginTop: \"70px\",\n//             borderRadius: \"8px\",\n//           }}\n//         >\n//           {suggestions.map((suggestion, index) => {\n//             return (\n//               <li\n//                 key={index}\n//                 onClick={() => {\n//                   if (activeInput === 'source') {\n//                     setSourceText(suggestion.name);\n//                   } else if (activeInput === 'destination') {\n//                     setDestinationText(suggestion.name);\n//                   }\n//                   setSuggestions([]);\n//                   setSearchQuery('');\n//                 }}\n//                 style={{\n//                   padding: \"8px\",\n//                   cursor: \"pointer\",\n//                   backgroundColor: \"#f1f1f1\",\n//                   borderBottom: \"1px solid #ddd\"\n//                 }}\n//               >\n//                 {suggestion.name}\n//               </li>\n//             );\n//           })}\n//         </ul>\n//       )}\n//       {/* Map */}\n//       <MapContainer\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n//           compass.addTo(mapRef.current);\n//         }}\n//       >\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//           // url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n//           // attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n//         />\n//         {/* Marker for Live Location */}\n//         {position && (\n//           <Marker position={position}>\n//             <Popup>\n//               <div>\n//                 <p><strong>You are here!</strong></p>\n//                 <p>{address}</p>\n//                 <button\n//                   onClick={handleLiveLocation}\n//                   style={{\n//                     background: \"#007bff\",\n//                     color: \"#fff\",\n//                     border: \"none\",\n//                     padding: \"5px 10px\",\n//                     borderRadius: \"5px\",\n//                     cursor: \"pointer\"\n//                   }}\n//                 >\n//                   Update Location\n//                 </button>\n//               </div>\n//             </Popup>\n//           </Marker>\n//         )}\n//         <LayersControl position=\"topright\">\n//           <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//             <TileLayer\n//               url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//             />\n//           </LayersControl.BaseLayer>\n//           <LayersControl.BaseLayer name=\"Satellite View\">\n//             <TileLayer\n//               attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//               url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//             />\n//           </LayersControl.BaseLayer>\n//         </LayersControl>\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//     </div>\n//   );\n// };\n// export default MapPage;\nimport React,{useEffect,useRef,useState}from\"react\";import{MapContainer,TileLayer,useMap,LayersControl,Marker,Popup}from\"react-leaflet\";import L from\"leaflet\";import\"leaflet/dist/leaflet.css\";import\"leaflet-routing-machine\";import\"leaflet-control-geocoder\";import\"leaflet-compass/dist/leaflet-compass.min.css\";import\"leaflet-compass\";import Navbar from'./Navbar';// Adjust the path if needed\nimport{jsxs as _jsxs,Fragment as _Fragment,jsx as _jsx}from\"react/jsx-runtime\";const rkValley={lat:14.33499,lng:78.537372};// Default Leaflet marker icon for consistent rendering\nlet DefaultIcon=L.icon({iconUrl:'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',shadowUrl:'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',iconSize:[25,41],// Ensure marker size is appropriate\niconAnchor:[12,41],// Anchor point for precise positioning\npopupAnchor:[1,-34],// Popup position relative to marker\nshadowSize:[41,41]});L.Marker.prototype.options.icon=DefaultIcon;const RoutingMachine=_ref=>{let{source,destination,travelMode}=_ref;const map=useMap();const mapRef=useRef(null);const controlRef=useRef(null);const[distance,setDistance]=useState(null);const[duration,setDuration]=useState(null);useEffect(()=>{if(!map)return;if(mapRef.current){const compass=new L.Control.Compass({autoActive:true,showDigit:true});compass.addTo(mapRef.current);}if(!controlRef.current){controlRef.current=L.Routing.control({waypoints:[],lineOptions:{styles:[{color:\"blue\",weight:4}]},addWaypoints:false,draggableWaypoints:false,fitSelectedRoutes:true,show:false,createMarker:()=>null,routeWhileDragging:false}).addTo(map);}if(source&&destination){controlRef.current.setWaypoints([L.latLng(source.lat,source.lng),L.latLng(destination.lat,destination.lng)]);controlRef.current.on(\"routesfound\",function(e){const route=e.routes[0];const dist=route.summary.totalDistance;let speedKmph=travelMode===\"bicycle\"?15:travelMode===\"vehicle\"?40:5;const timeHours=dist/1000/speedKmph;const timeMinutes=Math.round(timeHours*60);setDistance(dist);setDuration(timeMinutes);});}return()=>{if(controlRef.current){controlRef.current.setWaypoints([]);setDistance(null);setDuration(null);}};},[source,destination,travelMode,map]);return/*#__PURE__*/_jsx(_Fragment,{children:distance&&duration!==null&&/*#__PURE__*/_jsxs(\"div\",{style:{position:\"absolute\",top:70,left:\"50%\",transform:\"translateX(-50%)\",background:\"#ffffffee\",padding:\"10px 16px\",border:\"2px solid #007bff\",borderRadius:\"10px\",zIndex:1000,fontSize:\"14px\",fontWeight:\"500\",boxShadow:\"0 2px 5px rgba(0,0,0,0.2)\"},children:[\"\\uD83D\\uDEA9 Distance: \",distance<1000?`${Math.round(distance)} m`:`${(distance/1000).toFixed(2)} km`,\" \\xA0 | \\xA0 \\u23F1 Time: \",duration,\" min\"]})});};const MapPage=()=>{const[sourceText,setSourceText]=useState(\"\");const[destinationText,setDestinationText]=useState(\"\");const[sourceCoords,setSourceCoords]=useState(null);const[destinationCoords,setDestinationCoords]=useState(null);const[travelMode,setTravelMode]=useState(\"walk\");const[sidebarOpen,setSidebarOpen]=useState(true);const[position,setPosition]=useState(null);const[address,setAddress]=useState(\"Fetching address...\");const[activeInput,setActiveInput]=useState(null);const geocoder=useRef(L.Control.Geocoder.nominatim());const mapRef=useRef(null);const[searchQuery,setSearchQuery]=useState(\"\");const[suggestions,setSuggestions]=useState([]);const customLocations={\"Academic Block 1\":{lat:14.334841,lng:78.537223,type:\"Academic\",hours:\"9AM–10PM\",description:\"Centralized building with classrooms, seminar halls, and faculty offices for academic activities\"},\"Academic Block 2\":{lat:14.335089,lng:78.539779,type:\"Academic\",hours:\"9AM–10PM\",description:\"Administrative and teaching space for various departmental operations and academic sessions\"},\"Boys Hostel 1\":{lat:14.334589,lng:78.536720,type:\"Hostel\",hours:\"24x7\",description:\"On-campus residential block for male students with secure lodging and basic amenities\"},\"Boys Hostel 2\":{lat:14.334773,lng:78.540234,type:\"Hostel\",hours:\"24x7\",description:\"Well-facilitated hostel for male students offering comfort, security, and communal living\"},\"Chemical Block\":{lat:14.335304,lng:78.542505,type:\"Department\",hours:\"9AM–5PM\",description:\"Dedicated facility for chemical engineering studies, including research and lab-based learning.\"},\"Civil Block\":{lat:14.334801,lng:78.543514,type:\"Department\",hours:\"9AM–5PM\",description:\"Engineering block supporting civil engineering courses, design labs, and project spaces\"},\"Computer Center\":{lat:14.336182,lng:78.539610,type:\"Tech\",hours:\"9AM–5PM\",description:\"Central computing facility with computer labs and high-speed internet resources.\"},\"CSE Block\":{lat:14.335914,lng:78.541347,type:\"Department\",hours:\"9AM–5PM\",description:\"Department of Computer Science and Engineering providing academic and technical infrastructure\"},\"ECE Block\":{lat:14.334283,lng:78.541474,type:\"Department\",hours:\"9AM–5PM\",description:\"Department of Electronics and Communication Engineering offering labs and classrooms\"},\"EEE Block\":{lat:14.336851,lng:78.542395,type:\"Department\",hours:\"9AM–5PM\",description:\"Department of Electrical and Electronics Engineering supporting circuits, machines, and power systems\"},\"Girls Hostel 1\":{lat:14.334402,lng:78.538412,type:\"Hostel\",hours:\"24x7\",description:\"Accommodation for female students with safety and residential services.\"},\"Girls Hostel 2\":{lat:14.334361,lng:78.538610,type:\"Hostel\",hours:\"24x7\",description:\"Residential facility for girl students with necessary hostel amenities.\"},\"Guest House RKV\":{lat:14.331859,lng:78.536652,type:\"Guest facility\",hours:\"24x7\",description:\"Well-maintained guest house for hosting visiting faculty, guests, and dignitaries.\"},\"Hospital\":{lat:14.337157,lng:78.532596,type:\"Medical\",hours:\"24x7\",description:\"24x7 medical facility for basic healthcare and emergency services on campus\"},\"IQAC\":{lat:14.336884,lng:78.540791,type:\"Administration\",hours:\"9AM–5PM\",description:\"Institutional cell responsible for maintaining and enhancing academic quality\"},\"Lab Complex\":{lat:14.336214,lng:78.538152,type:\"Department\",hours:\"9AM–5PM\",description:\"Lab facility used by multiple departments for academic experiments and practical sessions\"},\"Laundry\":{lat:14.333134,lng:78.538775,type:\"Laundry\",hours:\"9AM–5PM\",description:\"Laundry service center for washing and drying hostel students’ clothes.\"},\"Library\":{lat:14.335547,lng:78.538723,type:\"Academic\",hours:\"7AM–11PM\",description:\"Central resource hub with a wide collection of books, journals, and study spaces.\"},\"Masjid\":{lat:14.339404,lng:78.535480,type:\"Religious\",hours:\"9AM–7PM\",description:\"Place of worship for Muslim students and staff within the campus.\"},\"Mechanical Block\":{lat:14.336277,lng:78.543308,type:\"Department\",hours:\"9AM–5PM\",description:\"Department of Mechanical Engineering equipped for academic and technical training.\"},\"Mechanical workshop\":{lat:14.336200,lng:78.538661,type:\"Department\",hours:\"9AM–5PM\",description:\"Workshop with tools and machinery for mechanical hands-on training and fabrication\"},\"Mess 1234\":{lat:14.333753,lng:78.538477,type:\"Food\",hours:\"7AM–9PM\",description:\"Dining hall serving meals to students with regular breakfast, lunch, and dinner\"},\"Mess 5678\":{lat:14.333716,lng:78.538701,type:\"Food\",hours:\"7AM–9PM\",description:\"Catering facility providing nutritious food to hostel residents and students.\"},\"MME Block\":{lat:14.337335,lng:78.541188,type:\"Department\",hours:\"9AM–5PM\",description:\"Department of Metallurgical and Materials Engineering for academic and research purposes\"},\"old campus academic blocks\":{lat:14.339002,lng:78.537776,type:\"Academic\",hours:\"9AM–5PM\",description:\"Academic buildings from the original campus supporting multiple disciplines\"},\"old campus boys hostel rho\":{lat:14.339809,lng:78.537592,type:\"Hostel\",hours:\"24x7\",description:\"Boys’ hostel located in the older section of the campus with residential facilities.\"},\"old campus boys hostel theeta\":{lat:14.339859,lng:78.537896,type:\"Hostel\",hours:\"24x7\",description:\"Another boys’ hostel in the old campus with accommodation services.\"},\"old campus girls hostel 1\":{lat:14.338275,lng:78.537744,type:\"Hostel\",hours:\"24x7\",description:\"Girls’ hostel located in the old campus area offering safe living spaces.\"},\"old campus girls hostel 2\":{lat:14.338288,lng:78.537914,type:\"Hostel\",hours:\"24x7\",description:\"Second girls’ hostel from the old block, supporting student housing.\"},\"Police Station\":{lat:14.337844,lng:78.536249,type:\"Security\",hours:\"24x7\",description:\"Campus law enforcement unit ensuring discipline, emergency handling, and general safety.\"},\"Post Office\":{lat:14.337099,lng:78.533741,type:\"Service\",hours:\"9AM–4PM\",description:\"Postal unit on campus for sending letters, parcels, and accessing courier services.\"},\"Power House\":{lat:14.335040,lng:78.536465,type:\"Utility\",hours:\"9AM–5PM\",description:\"Electricity management center responsible for power regulation and backup systems.\"},\"RKV Ground\":{lat:14.337409,lng:78.537874,type:\"Play\",hours:\"6AM-8PM\",description:\"Multipurpose playground for sports practices, matches, and college-level tournaments.\"},\"SBI\":{lat:14.337374,lng:78.534579,type:\"Bank\",hours:\"9AM–5PM\",description:\"Banking facility providing financial services including ATM, account handling, and transactions\"},\"Shopping Complex\":{lat:14.337353,lng:78.534061,type:\"Shopping\",hours:\"10AM–9PM\",description:\"Commercial area within campus for everyday shopping, snacks, and general items\"},\"Sports Complex\":{lat:14.337243,lng:78.533690,type:\"Recreational\",hours:\"5AM–10PM\",description:\"Indoor and outdoor sports facilities including courts, tracks, and fitness zones.\"},\"Student Activity Center\":{lat:14.338203,lng:78.540398,type:\"Recreational\",hours:\"9AM–5PM\",description:\"Campus venue for student initiatives, cultural programs, and club activities\"},\"Temple\":{lat:14.337074,lng:78.533307,type:\"Religious\",hours:\"6AM–8PM\",description:\"Spiritual place for religious observance and peaceful reflection.\"}};// Fetch live location with high accuracy\nuseEffect(()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(location=>{var _mapRef$current;const{latitude,longitude}=location.coords;console.log(\"Live location fetched:\",{latitude,longitude});// Debug log\nsetPosition([latitude,longitude]);fetchAddress(latitude,longitude);(_mapRef$current=mapRef.current)===null||_mapRef$current===void 0?void 0:_mapRef$current.setView([latitude,longitude],18);// Center map on live location\n},error=>{console.error(\"Error fetching live location:\",error);setAddress(\"Unable to retrieve location. Try enabling GPS.\");setPosition([rkValley.lat,rkValley.lng]);alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");},{enableHighAccuracy:true,// Prioritize GPS\ntimeout:10000,// 10-second timeout\nmaximumAge:0// No cached position\n});}else{console.error(\"Geolocation not supported\");setAddress(\"Geolocation not supported\");setPosition([rkValley.lat,rkValley.lng]);alert(\"Geolocation is not supported by your browser. Please select a location from the sidebar.\");}},[]);// Reverse geocoding function\nconst fetchAddress=async(lat,lng)=>{try{const response=await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`);const data=await response.json();console.log(\"Reverse geocoding result:\",data);// Debug log\nsetAddress(data.display_name||\"Address not found\");}catch(error){console.error(\"Error fetching address:\",error);setAddress(\"Address not available\");}};// Handle live location button click\nconst handleLiveLocation=()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(location=>{var _mapRef$current2;const{latitude,longitude}=location.coords;console.log(\"Live location updated:\",{latitude,longitude});// Debug log\nsetPosition([latitude,longitude]);fetchAddress(latitude,longitude);(_mapRef$current2=mapRef.current)===null||_mapRef$current2===void 0?void 0:_mapRef$current2.setView([latitude,longitude],18);L.marker([latitude,longitude]).addTo(mapRef.current).bindPopup(\"📍 You are here!\").openPopup();},error=>{console.error(\"Error fetching live location:\",error);alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");},{enableHighAccuracy:true,timeout:10000,maximumAge:0});}else{alert(\"Geolocation is not supported by your browser.\");}};const geocodeLocation=query=>{const normalized=query.trim().toLowerCase();for(const name in customLocations){if(name.toLowerCase()===normalized){return Promise.resolve(customLocations[name]);}}return new Promise((resolve,reject)=>{geocoder.current.geocode(query,results=>{if(results&&results.length>0){const{center}=results[0];resolve({lat:center.lat,lng:center.lng});}else{reject(\"Location not found\");}});});};const filterSuggestions=query=>{const lowerQuery=query.toLowerCase();const filtered=Object.keys(customLocations).filter(name=>name.toLowerCase().includes(lowerQuery)).map(name=>({name}));setSuggestions(filtered);};const handleSearchChange=e=>{const query=e.target.value;setSearchQuery(query);filterSuggestions(query);};const handleRoute=async()=>{try{const src=await geocodeLocation(sourceText);const dest=await geocodeLocation(destinationText);setSourceCoords(src);setDestinationCoords(dest);}catch(err){alert(\"Failed to find one or both locations\");console.error(err);}};const handleBlockClick=(name,coords)=>{var _mapRef$current3;setDestinationText(name);setDestinationCoords(coords);(_mapRef$current3=mapRef.current)===null||_mapRef$current3===void 0?void 0:_mapRef$current3.setView([coords.lat,coords.lng],18);if(mapRef.current){const{type,hours,description}=customLocations[name];const popupContent=`\n        <div>\n          <h3>${name}</h3>\n          <p><strong>Type:</strong> ${type}</p>\n          <p><strong>Hours:</strong> ${hours}</p>\n          <p><strong>Description:</strong> ${description}</p>\n        </div>\n      `;L.popup().setLatLng([coords.lat,coords.lng]).setContent(popupContent).openOn(mapRef.current);}};return/*#__PURE__*/_jsxs(\"div\",{style:{height:\"100vh\",width:\"100vw\",position:\"relative\"},children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"absolute\",top:70,left:sidebarOpen?10:-250,width:\"240px\",transition:\"left 0.3s ease-in-out\",zIndex:1000,background:\"#fff\",padding:\"12px\",borderRadius:\"10px\",boxShadow:\"0 2px 8px rgba(0,0,0,0.2)\",maxHeight:\"80vh\",overflowY:\"auto\"},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:\"10px\",fontSize:\"16px\"},children:\"\\uD83D\\uDCCD Campus Blocks\"}),/*#__PURE__*/_jsx(\"ul\",{style:{listStyle:\"none\",padding:0,margin:0},children:Object.entries(customLocations).map(_ref2=>{let[name,data]=_ref2;return/*#__PURE__*/_jsxs(\"li\",{onClick:()=>handleBlockClick(name,data),style:{marginBottom:\"10px\",padding:\"8px\",background:\"#f1f1f1\",borderRadius:\"6px\",cursor:\"pointer\",fontSize:\"14px\"},children:[/*#__PURE__*/_jsx(\"strong\",{children:name}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"\\uD83E\\uDDED \",data.type,\" | \\uD83D\\uDD52 \",data.hours]})]},name);})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSidebarOpen(!sidebarOpen),style:{position:\"absolute\",left:sidebarOpen?260:10,top:70,zIndex:1001,background:\"#007bff\",color:\"#fff\",border:\"none\",borderRadius:\"6px\",padding:\"6px 10px\",cursor:\"pointer\"},children:sidebarOpen?\"← Hide\":\"→ Show\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLiveLocation,style:{position:\"fixed\",right:10,bottom:10,zIndex:1001,background:\"#28a745\",color:\"#fff\",border:\"none\",borderRadius:\"6px\",padding:\"6px 10px\",cursor:\"pointer\",fontSize:\"14px\"},children:\"\\uD83D\\uDCCD Live Location\"}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"absolute\",top:10,left:\"50%\",transform:\"translateX(-50%)\",zIndex:1000,display:\"flex\",gap:\"8px\",background:\"#fff\",padding:\"10px\",borderRadius:\"8px\",marginTop:\"70px\",boxShadow:\"0 2px 5px rgba(0,0,0,0.2)\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Source (e.g., Library)\",value:sourceText,onChange:e=>{setSourceText(e.target.value);setSearchQuery(e.target.value);filterSuggestions(e.target.value);},onFocus:()=>setActiveInput('source'),style:{padding:\"6px 12px\",fontSize:\"14px\",borderRadius:\"6px\"}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Destination (e.g., CSE Block)\",value:destinationText,onChange:e=>{setDestinationText(e.target.value);setSearchQuery(e.target.value);filterSuggestions(e.target.value);},onFocus:()=>setActiveInput('destination'),style:{padding:\"6px 12px\",fontSize:\"14px\",borderRadius:\"6px\"}}),/*#__PURE__*/_jsxs(\"select\",{value:travelMode,onChange:e=>setTravelMode(e.target.value),style:{padding:\"6px 10px\",fontSize:\"14px\",borderRadius:\"6px\",border:\"1px solid #ccc\",background:\"#fff\",cursor:\"pointer\"},children:[/*#__PURE__*/_jsx(\"option\",{value:\"walk\",children:\"\\uD83D\\uDEB6 Walk\"}),/*#__PURE__*/_jsx(\"option\",{value:\"bicycle\",children:\"\\uD83D\\uDEB4 Bicycle\"}),/*#__PURE__*/_jsx(\"option\",{value:\"vehicle\",children:\"\\uD83D\\uDE97 Vehicle\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRoute,style:{background:\"#28a745\",color:\"#fff\",border:\"none\",padding:\"6px 10px\",fontSize:\"14px\",borderRadius:\"6px\",cursor:\"pointer\"},children:\"Route\"})]}),searchQuery&&suggestions.length>0&&/*#__PURE__*/_jsx(\"ul\",{style:{position:\"absolute\",top:60,left:\"50%\",transform:\"translateX(-50%)\",background:\"#fff\",width:\"300px\",maxHeight:\"150px\",overflowY:\"auto\",boxShadow:\"0 2px 5px rgba(0,0,0,0.2)\",zIndex:1000,listStyle:\"none\",padding:0,margin:0,marginTop:\"70px\",borderRadius:\"8px\"},children:suggestions.map((suggestion,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>{if(activeInput==='source'){setSourceText(suggestion.name);}else if(activeInput==='destination'){setDestinationText(suggestion.name);}setSuggestions([]);setSearchQuery('');},style:{padding:\"8px\",cursor:\"pointer\",backgroundColor:\"#f1f1f1\",borderBottom:\"1px solid #ddd\"},children:suggestion.name},index))}),/*#__PURE__*/_jsxs(MapContainer,{center:rkValley,zoom:17,style:{width:\"100%\",height:\"100%\"},ref:mapRef,whenCreated:mapInstance=>{mapRef.current=mapInstance;const compass=new L.Control.Compass({autoActive:true,showDigit:true});compass.addTo(mapRef.current);},children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}),position&&/*#__PURE__*/_jsx(Marker,{position:position,children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"You are here!\"})}),/*#__PURE__*/_jsx(\"p\",{children:address}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLiveLocation,style:{background:\"#007bff\",color:\"#fff\",border:\"none\",padding:\"5px 10px\",borderRadius:\"5px\",cursor:\"pointer\"},children:\"Update Location\"}),/*#__PURE__*/_jsx(\"p\",{style:{marginTop:\"10px\",fontSize:\"12px\"},children:\"Not at RGUKT RK Valley? Ensure GPS is enabled or select a location from the sidebar.\"})]})})}),/*#__PURE__*/_jsxs(LayersControl,{position:\"topright\",children:[/*#__PURE__*/_jsx(LayersControl.BaseLayer,{checked:true,name:\"OpenStreetMap\",children:/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"})}),/*#__PURE__*/_jsx(LayersControl.BaseLayer,{name:\"Satellite View\",children:/*#__PURE__*/_jsx(TileLayer,{attribution:\"Tiles \\xA9 Esri \\u2014 Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",url:\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"})})]}),sourceCoords&&destinationCoords&&/*#__PURE__*/_jsx(RoutingMachine,{source:sourceCoords,destination:destinationCoords,travelMode:travelMode})]})]});};export default MapPage;","map":{"version":3,"names":["React","useEffect","useRef","useState","MapContainer","TileLayer","useMap","LayersControl","Marker","Popup","L","Navbar","jsxs","_jsxs","Fragment","_Fragment","jsx","_jsx","rkValley","lat","lng","DefaultIcon","icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","prototype","options","RoutingMachine","_ref","source","destination","travelMode","map","mapRef","controlRef","distance","setDistance","duration","setDuration","current","compass","Control","Compass","autoActive","showDigit","addTo","Routing","control","waypoints","lineOptions","styles","color","weight","addWaypoints","draggableWaypoints","fitSelectedRoutes","show","createMarker","routeWhileDragging","setWaypoints","latLng","on","e","route","routes","dist","summary","totalDistance","speedKmph","timeHours","timeMinutes","Math","round","children","style","position","top","left","transform","background","padding","border","borderRadius","zIndex","fontSize","fontWeight","boxShadow","toFixed","MapPage","sourceText","setSourceText","destinationText","setDestinationText","sourceCoords","setSourceCoords","destinationCoords","setDestinationCoords","setTravelMode","sidebarOpen","setSidebarOpen","setPosition","address","setAddress","activeInput","setActiveInput","geocoder","Geocoder","nominatim","searchQuery","setSearchQuery","suggestions","setSuggestions","customLocations","type","hours","description","navigator","geolocation","getCurrentPosition","location","_mapRef$current","latitude","longitude","coords","console","log","fetchAddress","setView","error","alert","enableHighAccuracy","timeout","maximumAge","response","fetch","data","json","display_name","handleLiveLocation","_mapRef$current2","marker","bindPopup","openPopup","geocodeLocation","query","normalized","trim","toLowerCase","name","Promise","resolve","reject","geocode","results","length","center","filterSuggestions","lowerQuery","filtered","Object","keys","filter","includes","handleSearchChange","target","value","handleRoute","src","dest","err","handleBlockClick","_mapRef$current3","popupContent","popup","setLatLng","setContent","openOn","height","width","transition","maxHeight","overflowY","marginBottom","listStyle","margin","entries","_ref2","onClick","cursor","right","bottom","display","gap","marginTop","placeholder","onChange","onFocus","suggestion","index","backgroundColor","borderBottom","zoom","ref","whenCreated","mapInstance","url","BaseLayer","checked","attribution"],"sources":["/home/rguktrkvalley/Desktop/CampusNavigationFinal/CampusNavigation/campus-nav-frontend/src/pages/Map.js"],"sourcesContent":["// import React from \"react\"\n// import { Link } from 'react-router-dom';\n// import  { useEffect, useRef, useState } from \"react\";\n// import { MapContainer, TileLayer, useMap, LayersControl } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// //import Fuse from \"fuse.js\";\n\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n// //import { Link } from 'react-router-dom';\n\n\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n\n//   useEffect(() => {\n\n\n//     if (!map) return;\n//     if (!mapRef.current) return;\n\n//     // Initialize and add the compass control\n//     const compass = new L.Control.Compass({\n//       autoActive: true,\n//       showDigit: true,\n//     });\n//     map.addControl(compass);\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`} &nbsp; | &nbsp;\n//           ⏱ Time: {duration} min\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n\n\n//   const customLocations = {\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"9AM–6PM\", description: \"A place for study and research\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Place for shopping and dining\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"Emergency medical services\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \"Place of worship\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Sports facilities\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–7PM\", description: \"Computer labs and resources\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Place to send and receive\" },\n\n//     // \"Library\": { lat: 14.335461, lng: 78.538369 ,type:\"study\",description:\"Consists of many resources to refer and a place where we can study peacefully\"},\n//     // \"CSE Block\": { lat: 14.336241, lng: 78.541992,type:\"Department\",description:\"Department of Computer Science and Engineering\"},\n//     // \"ECE Block\": { lat: 14.334558, lng: 78.541885 ,type:\"Department\",description:\"Department of Electronics and Communication Engineering\"},\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188,type:\"Department\",hours:\"\",description:\"Department of Metallurgical and Materials Engineering\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395,type:\"Department\",description:\"Department of Electrical and Electronics Engineering\" },\n\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308 ,type:\"Department\",description:\"Department of Mechanical Engineering\"},\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505 ,type:\"Department\",description:\"Department of Chemical Engineering\"},\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514,type:\"\",description:\"Department of Civil Engineering\" },\n\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223,type:\"\",description:\"\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779 ,type:\"Department\",description:\"\"},\n\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412,type:\"Hostel\",description:\"Accomodation for female students\" },\n\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720,type:\"Hostel\",description:\"Accomodation for male students\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234,type:\"Hostel\",description:\"Accomodation for male students\" },\n\n\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152,type:\"Department\",description:\"place \" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661,type:\"\",description:\"\" },\n\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791,type:\"\",description:\"\" },\n//    \"Student Activity Center\": { lat: 14.338203, lng: 78.540398,type:\"\",description:\"\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465,type:\"\",description:\"\"},\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477 ,type:\"Food\",description:\"\"},\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701 ,type:\"Food\",description:\"\"},\n\n//     \"SBI\": { lat: 14.337374, lng: 78.534579,type:\"Bank\",description:\"\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249,type:\"\",description:\"\"},\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874,type:\"Play\",description:\"\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652 ,type:\"\",description:\"\"},\n\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744,type:\"Hostel\",description:\"\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896,type:\"Hostel\",description:\"\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776,type:\"Academic\",description:\"\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480,type:\"Religious\",description:\"\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775,type:\"Laundry\",description:\"\" },\n\n//   };\n\n\n\n\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//         <h3>${name}</h3>\n//         <p><strong>Type:</strong> ${type}</p>\n//         <p><strong>Hours:</strong> ${hours}</p>\n//         <p><strong>Description:</strong> ${description}</p>\n//       `;\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n\n//   return (\n\n//     <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n\n//       {/* Input Bar */}\n//       <div style={{\n//   position: \"absolute\",\n//   top: 10,\n//   left: \"50%\",\n//   transform: \"translateX(-50%)\",\n//   zIndex: 1000,\n//   display: \"flex\",\n//   gap: \"8px\",\n//   background: \"#fff\",\n//   padding: \"10px\",\n//   borderRadius: \"8px\",\n//   boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n// }}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n\n//   {/* Travel Mode Dropdown */}\n//   <select\n//     value={travelMode}\n//     onChange={(e) => setTravelMode(e.target.value)}\n//     style={{\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       border: \"1px solid #ccc\",\n//       background: \"#fff\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <option value=\"walk\">🚶 Walk</option>\n//     <option value=\"bicycle\">🚴 Bicycle</option>\n//     <option value=\"vehicle\">🚗 Vehicle</option>\n//   </select>\n\n//   <button\n//     onClick={handleRoute}\n//     style={{\n//       background: \"#28a745\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     Route\n//   </button>\n//   <div className=\"photos-link\">\n//         <Link to=\"/photos\">Photos</Link>\n//       </div>\n// </div>\n\n\n\n//       {/* Map */}\n//       <MapContainer\n\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n\n//           compass.addTo(mapRef.current);\n//         }}\n\n\n//       >\n\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//         />\n//       <LayersControl position=\"topright\">\n//   <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//     <TileLayer\n//       url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//     />\n//   </LayersControl.BaseLayer>\n\n//   <LayersControl.BaseLayer name=\"Satellite View\">\n//     <TileLayer\n//       attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//       url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//     />\n//   </LayersControl.BaseLayer>\n// </LayersControl>\n\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//        {/* Logout */}\n//        <button\n//         onClick={handleLogout}\n//         style={{\n//           position: \"absolute\",\n//           right: 10,\n//           bottom: 25,\n//           padding: \"8px 12px\",\n//           background: \"red\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//           zIndex: 1000,\n//         }}\n//       >\n//         Logout\n//       </button>\n//     </div>\n\n//   );\n// };\n\n// export default MapPage;\n\n\n\n\n// import React from \"react\"\n// import { Link } from 'react-router-dom';\n// import  { useEffect, useRef, useState } from \"react\";\n// import { MapContainer, TileLayer, useMap, LayersControl } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// //import Fuse from \"fuse.js\";\n\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n// //import { Link } from 'react-router-dom';\n\n\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n\n//   useEffect(() => {\n\n\n//     if (!map) return;\n//     if (!mapRef.current) return;\n//   const compass = new L.Control.Compass({\n//     autoActive: true,\n//     showDigit: true,\n//   }).addTo(map);\n\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`}\n\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n\n\n//   const customLocations = {\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"9AM–6PM\", description: \"A place for study and research\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Place for shopping and dining\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"Emergency medical services\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \"Place of worship\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Sports facilities\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–7PM\", description: \"Computer labs and resources\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Place to send and receive\" },\n\n//     // \"Library\": { lat: 14.335461, lng: 78.538369 ,type:\"study\",description:\"Consists of many resources to refer and a place where we can study peacefully\"},\n//     // \"CSE Block\": { lat: 14.336241, lng: 78.541992,type:\"Department\",description:\"Department of Computer Science and Engineering\"},\n//     // \"ECE Block\": { lat: 14.334558, lng: 78.541885 ,type:\"Department\",description:\"Department of Electronics and Communication Engineering\"},\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188,type:\"Department\",hours:\"\",description:\"Department of Metallurgical and Materials Engineering\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395,type:\"Department\",description:\"Department of Electrical and Electronics Engineering\" },\n\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308 ,type:\"Department\",description:\"Department of Mechanical Engineering\"},\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505 ,type:\"Department\",description:\"Department of Chemical Engineering\"},\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514,type:\"\",description:\"Department of Civil Engineering\" },\n\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223,type:\"\",description:\"\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779 ,type:\"Department\",description:\"\"},\n\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412,type:\"Hostel\",description:\"Accomodation for female students\" },\n\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720,type:\"Hostel\",description:\"Accomodation for male students\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234,type:\"Hostel\",description:\"Accomodation for male students\" },\n\n\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152,type:\"Department\",description:\"place \" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661,type:\"\",description:\"\" },\n\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791,type:\"\",description:\"\" },\n//    \"Student Activity Center\": { lat: 14.338203, lng: 78.540398,type:\"\",description:\"\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465,type:\"\",description:\"\"},\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477 ,type:\"Food\",description:\"\"},\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701 ,type:\"Food\",description:\"\"},\n\n//     \"SBI\": { lat: 14.337374, lng: 78.534579,type:\"Bank\",description:\"\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249,type:\"\",description:\"\"},\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874,type:\"Play\",description:\"\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652 ,type:\"\",description:\"\"},\n\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744,type:\"Hostel\",description:\"\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592,type:\"Hostel\",description:\"\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896,type:\"Hostel\",description:\"\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776,type:\"Academic\",description:\"\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480,type:\"Religious\",description:\"\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775,type:\"Laundry\",description:\"\" },\n\n//   };\n\n\n\n\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//       <div>\n//         <h3>${name}</h3>\n//         <p><strong>Type:</strong> ${type}</p>\n//         <p><strong>Hours:</strong> ${hours}</p>\n//         <p><strong>Description:</strong> ${description}</p>\n//       </div>\n//     `;\n\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n\n//   return (\n\n//     <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n\n//       {/* Input Bar */}\n//       <div style={{\n//   position: \"absolute\",\n//   top: 10,\n//   left: \"50%\",\n//   transform: \"translateX(-50%)\",\n//   zIndex: 1000,\n//   display: \"flex\",\n//   gap: \"8px\",\n//   background: \"#fff\",\n//   padding: \"10px\",\n//   borderRadius: \"8px\",\n//   boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n// }}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n\n//   {/* Travel Mode Dropdown */}\n//   <select\n//     value={travelMode}\n//     onChange={(e) => setTravelMode(e.target.value)}\n//     style={{\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       border: \"1px solid #ccc\",\n//       background: \"#fff\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <option value=\"walk\">🚶 Walk</option>\n//     <option value=\"bicycle\">🚴 Bicycle</option>\n//     <option value=\"vehicle\">🚗 Vehicle</option>\n//   </select>\n\n//   <button\n//     onClick={handleRoute}\n//     style={{\n//       background: \"#28a745\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       padding: \"6px 10px\",\n//       fontSize: \"14px\",\n//       borderRadius: \"6px\",\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     Route\n//   </button>\n//   <div className=\"photos-link\">\n//         <Link to=\"/photos\">Photos</Link>\n//       </div>\n// </div>\n\n\n\n//       {/* Map */}\n//       <MapContainer\n\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n\n//           compass.addTo(mapRef.current);\n//         }}\n\n\n//       >\n\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//         />\n//       <LayersControl position=\"topright\">\n//   <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//     <TileLayer\n//       url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//     />\n//   </LayersControl.BaseLayer>\n\n//   <LayersControl.BaseLayer name=\"Satellite View\">\n//     <TileLayer\n//       attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//       url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//     />\n//   </LayersControl.BaseLayer>\n// </LayersControl>\n\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//        {/* Logout */}\n//        <button\n//         onClick={handleLogout}\n//         style={{\n//           position: \"absolute\",\n//           right: 10,\n//           bottom: 25,\n//           padding: \"8px 12px\",\n//           background: \"red\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//           zIndex: 1000,\n//         }}\n//       >\n//         Logout\n//       </button>\n//     </div>\n\n//   );\n// };\n\n// export default MapPage;\n\n\n\n\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// //import { Link } from 'react-router-dom';\n// import { MapContainer, TileLayer, useMap, LayersControl, Marker, Popup } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-compass/dist/leaflet-compass.min.css\";\n// import \"leaflet-compass\";\n// import Navbar from './Navbar'; // adjust the path if Navbar.js is in a different folder\n// import {GeoSearchControl, OpenStreetMapProvider} from 'leaflet-geosearch';\n\n// const rkValley = { lat: 14.33499, lng: 78.537372 };\n\n// const handleLogout = () => {\n//   localStorage.removeItem(\"token\"); // Or whatever key you're using\n//   window.location.href = \"/login\"; // Adjust if using React Router\n// };\n\n// const RoutingMachine = ({ source, destination, travelMode }) => {\n//   const map = useMap();\n//   const mapRef = useRef(null);\n\n//   const controlRef = useRef(null);\n//   const [distance, setDistance] = useState(null);\n//   const [duration, setDuration] = useState(null);\n\n//   useEffect(() => {\n//     if (!map) return;\n//     if (mapRef.current) {\n//       const compass = new L.Control.Compass({\n//         autoActive: true,\n//         showDigit: true,\n//       });\n//       compass.addTo(mapRef.current);\n//     }\n//     if (!controlRef.current) {\n//       controlRef.current = L.Routing.control({\n//         waypoints: [],\n//         lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n//         addWaypoints: false,\n//         draggableWaypoints: false,\n//         fitSelectedRoutes: true,\n//         show: false,\n//         createMarker: () => null,\n//         routeWhileDragging: false,\n//       }).addTo(map);\n//     }\n\n//     if (source && destination) {\n//       controlRef.current.setWaypoints([\n//         L.latLng(source.lat, source.lng),\n//         L.latLng(destination.lat, destination.lng),\n//       ]);\n\n//       controlRef.current.on(\"routesfound\", function (e) {\n//         const route = e.routes[0];\n//         const dist = route.summary.totalDistance;\n\n//         let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n//         const timeHours = dist / 1000 / speedKmph;\n//         const timeMinutes = Math.round(timeHours * 60);\n\n//         setDistance(dist);\n//         setDuration(timeMinutes);\n//       });\n//     }\n\n//     return () => {\n//       if (controlRef.current) {\n//         controlRef.current.setWaypoints([]);\n//         setDistance(null);\n//         setDuration(null);\n//       }\n//     };\n//   }, [source, destination, travelMode, map]);\n\n//   return (\n//     <>\n//       {distance && duration !== null && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: 70,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#ffffffee\",\n//             padding: \"10px 16px\",\n//             border: \"2px solid #007bff\",\n//             borderRadius: \"10px\",\n//             zIndex: 1000,\n//             fontSize: \"14px\",\n//             fontWeight: \"500\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//           }}\n//         >\n//           🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`} &nbsp; | &nbsp;\n//           ⏱ Time: {duration} min\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// const MapPage = () => {\n//   const [sourceText, setSourceText] = useState(\"\");\n//   const [destinationText, setDestinationText] = useState(\"\");\n//   const [sourceCoords, setSourceCoords] = useState(null);\n//   const [destinationCoords, setDestinationCoords] = useState(null);\n//   const [travelMode, setTravelMode] = useState(\"walk\");\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [position, setPosition] = useState(null);\n//   const [address, setAddress] = useState('Fetching Address...')\n\n\n//   const [activeInput, setActiveInput] = useState(null); // NEW: Track which input is focused\n\n\n//   const geocoder = useRef(L.Control.Geocoder.nominatim());\n//   const mapRef = useRef(null);\n\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n\n\n//   const customLocations = {\n\n//     \"Academic Block 1\": { lat: 14.334841, lng: 78.537223, type: \"Academic\", hours: \"9AM–10PM\", description: \"Centralized building with classrooms, seminar halls, and faculty offices for academic activities\" },\n//     \"Academic Block 2\": { lat: 14.335089, lng: 78.539779, type: \"Academic\", hours: \"9AM–10PM\", description: \"Administrative and teaching space for various departmental operations and academic sessions\" },\n//     \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720, type: \"Hostel\", hours: \"24x7\", description: \"On-campus residential block for male students with secure lodging and basic amenities\" },\n//     \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234, type: \"Hostel\", hours: \"24x7\", description: \"Well-facilitated hostel for male students offering comfort, security, and communal living\" },\n//     \"Chemical Block\": { lat: 14.335304, lng: 78.542505, type: \"Department\", hours: \"9AM–5PM\", description: \"Dedicated facility for chemical engineering studies, including research and lab-based learning.\" },\n//     \"Civil Block\": { lat: 14.334801, lng: 78.543514, type: \"Department\", hours: \"9AM–5PM\", description: \"Engineering block supporting civil engineering courses, design labs, and project spaces\" },\n//     \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–5PM\", description: \"Central computing facility with computer labs and high-speed internet resources.\" },\n//     \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering providing academic and technical infrastructure\" },\n//     \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering offering labs and classrooms\" },\n//     \"EEE Block\": { lat: 14.336851, lng: 78.542395, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electrical and Electronics Engineering supporting circuits, machines, and power systems\" },\n//     \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students with safety and residential services.\" },\n//     \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Residential facility for girl students with necessary hostel amenities.\" },\n//     \"Guest House RKV\": { lat: 14.331859, lng: 78.536652, type: \"Guest facility\", hours: \"24x7\", description: \"Well-maintained guest house for hosting visiting faculty, guests, and dignitaries.\" },\n//     \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"24x7 medical facility for basic healthcare and emergency services on campus\" },\n//     \"IQAC\": { lat: 14.336884, lng: 78.540791, type: \"Administration\", hours: \"9AM–5PM\", description: \"Institutional cell responsible for maintaining and enhancing academic quality\" },\n//     \"Lab Complex\": { lat: 14.336214, lng: 78.538152, type: \"Department\", hours: \"9AM–5PM\", description: \"Lab facility used by multiple departments for academic experiments and practical sessions\" },\n//     \"Laundry\": { lat: 14.333134, lng: 78.538775, type: \"Laundry\", hours: \"9AM–5PM\", description: \"Laundry service center for washing and drying hostel students’ clothes.\" },\n//     \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"7AM–11PM\", description: \"Central resource hub with a wide collection of books, journals, and study spaces.\" },\n//     \"Masjid\": { lat: 14.339404, lng: 78.535480, type: \"Religious\", hours: \"9AM–7PM\", description: \"Place of worship for Muslim students and staff within the campus.\" },\n//     \"Mechanical Block\": { lat: 14.336277, lng: 78.543308, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Mechanical Engineering equipped for academic and technical training.\" },\n//     \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661, type: \"Department\", hours: \"9AM–5PM\", description: \"Workshop with tools and machinery for mechanical hands-on training and fabrication\" },\n//     \"Mess 1234\": { lat: 14.333753, lng: 78.538477, type: \"Food\", hours: \"7AM–9PM\", description: \"Dining hall serving meals to students with regular breakfast, lunch, and dinner\" },\n//     \"Mess 5678\": { lat: 14.333716, lng: 78.538701, type: \"Food\", hours: \"7AM–9PM\", description: \"Catering facility providing nutritious food to hostel residents and students.\" },\n//     \"MME Block\": { lat: 14.337335, lng: 78.541188, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Metallurgical and Materials Engineering for academic and research purposes\" },\n//     \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776, type: \"Academic\", hours: \"9AM–5PM\", description: \"Academic buildings from the original campus supporting multiple disciplines\" },\n//     \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592, type: \"Hostel\", hours: \"24x7\", description: \"Boys’ hostel located in the older section of the campus with residential facilities.\" },\n//     \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896, type: \"Hostel\", hours: \"24x7\", description: \"Another boys’ hostel in the old campus with accommodation services.\" },\n//     \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744, type: \"Hostel\", hours: \"24x7\", description: \"Girls’ hostel located in the old campus area offering safe living spaces.\" },\n//     \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914, type: \"Hostel\", hours: \"24x7\", description: \"Second girls’ hostel from the old block, supporting student housing.\" },\n//     \"Police Station\": { lat: 14.337844, lng: 78.536249, type: \"Security\", hours: \"24x7\", description: \"Campus law enforcement unit ensuring discipline, emergency handling, and general safety.\" },\n//     \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Postal unit on campus for sending letters, parcels, and accessing courier services.\" },\n//     \"Power House\": { lat: 14.335040, lng: 78.536465, type: \"Utility\", hours: \"9AM–5PM\", description: \"Electricity management center responsible for power regulation and backup systems.\" },\n//     \"RKV Ground\": { lat: 14.337409, lng: 78.537874, type: \"Play\", hours: \"6AM-8PM\", description: \"Multipurpose playground for sports practices, matches, and college-level tournaments.\" },\n//     \"SBI\": { lat: 14.337374, lng: 78.534579, type: \"Bank\", hours: \"9AM–5PM\", description: \"Banking facility providing financial services including ATM, account handling, and transactions\" },\n//     \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Commercial area within campus for everyday shopping, snacks, and general items\" },\n//     \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Indoor and outdoor sports facilities including courts, tracks, and fitness zones.\" },\n//     \"Student Activity Center\": { lat: 14.338203, lng: 78.540398, type: \"Recreational\", hours: \"9AM–5PM\", description: \" Campus venue for student initiatives, cultural programs, and club activities\" },\n//     \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \" Spiritual place for religious observance and peaceful reflection.\" },\n\n\n//   };\n  \n//   // Function to handle live location\n//   const handleLiveLocation = () => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           const { latitude, longitude } = position.coords;\n//           const userLocation = [latitude, longitude]\n//           setPosition([latitude, longitude]);\n\n//           // Set the map view to the user's location with maximum zoom\n//           mapRef.current?.setView(userLocation, mapRef.current.getMaxZoom());\n\n//           // Optionally, add a marker at the user's location\n//           L.marker(userLocation)\n//             .addTo(mapRef.current)\n//             .bindPopup(\"📍 You are here!\")\n//             .openPopup();\n//         },\n//         (error) => {\n//           alert(\"Unable to retrieve your location. Please enable location services.\");\n//           console.error(error);\n//         }\n//       );\n//     } else {\n//       alert(\"Geolocation is not supported by your browser.\");\n//     }\n//   };\n\n\n//   const geocodeLocation = (query) => {\n//     const normalized = query.trim().toLowerCase();\n//     for (const name in customLocations) {\n//       if (name.toLowerCase() === normalized) {\n//         return Promise.resolve(customLocations[name]);\n//       }\n//     }\n\n//     return new Promise((resolve, reject) => {\n//       geocoder.current.geocode(query, (results) => {\n//         if (results && results.length > 0) {\n//           const { center } = results[0];\n//           resolve({ lat: center.lat, lng: center.lng });\n//         } else {\n//           reject(\"Location not found\");\n//         }\n//       });\n//     });\n//   };\n\n\n//   // Function to filter locations based on search query\n//   const filterSuggestions = (query) => {\n//     const lowerQuery = query.toLowerCase();\n//     const filtered = Object.keys(customLocations) // Only get the names of locations\n//       .filter(name => name.toLowerCase().includes(lowerQuery)) // Filter by name match\n//       .map(name => ({ name })); // Map to just name for suggestions\n\n//     setSuggestions(filtered);\n//   };\n\n//   const handleSearchChange = (e) => {\n//     const query = e.target.value;\n//     setSearchQuery(query); // Update search query\n//     filterSuggestions(query); // Update suggestions based on query\n//   };\n\n//   const handleRoute = async () => {\n//     try {\n//       const src = await geocodeLocation(sourceText);\n//       const dest = await geocodeLocation(destinationText);\n//       setSourceCoords(src);\n//       setDestinationCoords(dest);\n//     } catch (err) {\n//       alert(\"Failed to find one or both locations\");\n//       console.error(err);\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     window.location.href = \"/login\";\n//   };\n\n//   const handleBlockClick = (name, coords) => {\n//     setDestinationText(name);\n//     setDestinationCoords(coords);\n//     mapRef.current?.setView([coords.lat, coords.lng], 18);\n\n//     // Ensure map is initialized before attempting to open a popup\n//     if (mapRef.current) {\n//       // Show popup with block details\n//       const { type, hours, description } = customLocations[name];\n//       const popupContent = `\n//       <div>\n//          <h3>${name}</h3>\n//          <p><strong>Type:</strong> ${type}</p>\n//          <p><strong>Hours:</strong> ${hours}</p>\n//          <p><strong>Description:</strong> ${description}</p>\n//        </div>\n//      `;\n\n//       L.popup()\n//         .setLatLng([coords.lat, coords.lng])\n//         .setContent(popupContent)\n//         .openOn(mapRef.current);\n//     }\n//   };\n\n//   return (\n\n//     <div style={{ height: \"100vh\", width: \"100vw\", position: \"relative\" }}>\n//       {/* Sidebar */}\n//       <Navbar />\n//       <div style={{\n//         position: \"absolute\",\n//         top: 70,\n//         left: sidebarOpen ? 10 : -250,\n//         width: \"240px\",\n//         transition: \"left 0.3s ease-in-out\",\n//         zIndex: 1000,\n//         background: \"#fff\",\n//         padding: \"12px\",\n//         borderRadius: \"10px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\"\n//       }}>\n//         <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n//           {Object.entries(customLocations).map(([name, data]) => (\n//             <li key={name}\n//               onClick={() => handleBlockClick(name, data)}\n//               style={{\n//                 marginBottom: \"10px\",\n//                 padding: \"8px\",\n//                 background: \"#f1f1f1\",\n//                 borderRadius: \"6px\",\n//                 cursor: \"pointer\",\n//                 fontSize: \"14px\"\n//               }}>\n//               <strong>{name}</strong><br />\n//               <small>🧭 {data.type} | 🕒 {data.hours}</small>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       {/* Navbar */}\n//       {/* <div style={{\n//   position: \"fixed\",\n//   top: 0,\n//   left: 0,\n//   width: \"100%\",\n//   backgroundColor: \"#2c3e50\",\n//   color: \"#ecf0f1\",\n//   padding: \"12px 24px\",\n//   fontSize: \"20px\",\n//   fontWeight: \"bold\",\n//   display: \"flex\",\n//   justifyContent: \"space-between\",\n//   alignItems: \"center\",\n//   zIndex: 2000,\n//   boxShadow: \"0 2px 6px rgba(0, 0, 0, 0.2)\"\n// }}>\n//    <div className=\"navbar-left\">\n//         <img src=\"logo.jpg\" alt=\"Campus Logo\" className=\"navbar-logo\" />\n//         <span className=\"navbar-title\"></span>\n//       </div>\n//   <span style={{ whiteSpace: \"nowrap\" }}>Campus Navigation</span>\n//   <div style={{ height: '35px',width:'40px', marginRight:0,\n//         color: \"#fff\",\n//         border: \"none\",\n//         borderRadius: \"6px\",\n//         padding: \"8px 16px\",\n//         cursor: \"pointer\",\n//         fontSize: \"14px\",\n//         fontWeight: \"bold\"}}>\n//   <Link to=\"/photos\" >Photos</Link>\n// </div>\n//   <button\n//     onClick={handleLogout}\n//     style={{\n//       backgroundColor: \"#e74c3c\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       borderRadius: \"6px\",\n//       padding: \"8px 16px\",\n//       cursor: \"pointer\",\n//       fontSize: \"14px\",\n//       fontWeight: \"bold\"\n//     }}\n//   >\n//     Logout\n//   </button>\n// </div> */}\n\n//       {/* Toggle Sidebar */}\n//       <button\n//         onClick={() => setSidebarOpen(!sidebarOpen)}\n//         style={{\n//           position: \"absolute\",\n//           left: sidebarOpen ? 260 : 10,\n//           top: 70,\n//           zIndex: 1001,\n//           background: \"#007bff\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n//       </button>\n\n//       <button\n//         onClick={handleLiveLocation}\n//         style={{\n//           position: \"fixed\",\n//           right: 10,\n//           bottom: 40,\n//           zIndex: 1001,\n//           background: \"#28a745\",\n//           color: \"#fff\",\n//           border: \"none\",\n//           borderRadius: \"6px\",\n//           padding: \"6px 10px\",\n//           cursor: \"pointer\"\n//         }}\n//       >\n//         📍 Live Location\n//       </button>\n\n//       {/* Input Bar */}\n//       <div style={{\n//         position: \"absolute\",\n//         top: 10,\n//         left: \"50%\",\n//         transform: \"translateX(-50%)\",\n//         zIndex: 1000,\n//         display: \"flex\",\n//         gap: \"8px\",\n//         background: \"#fff\",\n//         padding: \"10px\",\n//         borderRadius: \"8px\",\n//         marginTop: \"70px\",\n//         boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n//       }}>\n//         {/* <input\n//     type=\"text\"\n//     placeholder=\"Source (e.g., Library)\"\n//     value={sourceText}\n//     onChange={(e) => setSourceText(e.target.value)}\n//     onFocus={() => filterSuggestions(sourceText)} // Ensure filtering happens on focus\n   \n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   />\n//   <input\n//     type=\"text\"\n//     placeholder=\"Destination (e.g., CSE Block)\"\n//     value={destinationText}\n//     onChange={(e) => setDestinationText(e.target.value)}\n//     onFocus={() => filterSuggestions(destinationText)}\n//     style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//   /> */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Source (e.g., Library)\"\n//           value={sourceText}\n//           onChange={(e) => {\n//             setSourceText(e.target.value);\n//             setSearchQuery(e.target.value); // Update searchQuery to show suggestions\n//             filterSuggestions(e.target.value);\n//           }}\n//           onFocus={() => setActiveInput('source')} // SET ACTIVE INPUT\n//           style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//         />\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Destination (e.g., CSE Block)\"\n//           value={destinationText}\n//           onChange={(e) => {\n//             setDestinationText(e.target.value);\n//             setSearchQuery(e.target.value);\n//             filterSuggestions(e.target.value);\n//           }}\n//           onFocus={() => setActiveInput('destination')} // SET ACTIVE INPUT\n//           style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n//         />\n//         {/* Travel Mode Dropdown */}\n//         <select\n//           value={travelMode}\n//           onChange={(e) => setTravelMode(e.target.value)}\n//           style={{\n//             padding: \"6px 10px\",\n//             fontSize: \"14px\",\n//             borderRadius: \"6px\",\n//             border: \"1px solid #ccc\",\n//             background: \"#fff\",\n//             cursor: \"pointer\"\n//           }}\n//         >\n//           <option value=\"walk\">🚶 Walk</option>\n//           <option value=\"bicycle\">🚴 Bicycle</option>\n//           <option value=\"vehicle\">🚗 Vehicle</option>\n//         </select>\n\n//         <button\n//           onClick={handleRoute}\n//           style={{\n//             background: \"#28a745\",\n//             color: \"#fff\",\n//             border: \"none\",\n//             padding: \"6px 10px\",\n//             fontSize: \"14px\",\n//             borderRadius: \"6px\",\n//             cursor: \"pointer\"\n//           }}\n//         >\n//           Route\n//         </button>\n//         {/* <div className=\"photos-link\">\n//          <Link to=\"/photos\">Photos</Link>\n//        </div> */}\n\n\n\n//       </div>\n\n//       {/* Search Suggestions */}\n//       {searchQuery && suggestions.length > 0 && (\n//         <ul\n//           style={{\n//             position: \"absolute\",\n//             top: 60,\n//             left: \"50%\",\n//             transform: \"translateX(-50%)\",\n//             background: \"#fff\",\n//             width: \"300px\",\n//             maxHeight: \"150px\",\n//             overflowY: \"auto\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n//             zIndex: 1000,\n//             listStyle: \"none\",\n//             padding: 0,\n//             margin: 0,\n//             marginTop: \"70px\",\n//             borderRadius: \"8px\",\n//           }}\n//         >\n//           {suggestions.map((suggestion, index) => {\n//             return (\n//               <li\n//                 key={index}\n//                 onClick={() => {\n//                   if (activeInput === 'source') {\n//                     setSourceText(suggestion.name);\n//                   } else if (activeInput === 'destination') {\n//                     setDestinationText(suggestion.name);\n//                   }\n//                   setSuggestions([]);\n//                   setSearchQuery('');\n//                 }}\n//                 style={{\n//                   padding: \"8px\",\n//                   cursor: \"pointer\",\n//                   backgroundColor: \"#f1f1f1\",\n//                   borderBottom: \"1px solid #ddd\"\n//                 }}\n//               >\n//                 {suggestion.name}\n//               </li>\n\n//             );\n//           })}\n//         </ul>\n//       )}\n\n//       {/* Map */}\n//       <MapContainer\n\n//         center={rkValley}\n//         zoom={17}\n//         style={{ width: \"100%\", height: \"100%\" }}\n//         ref={mapRef}\n//         whenCreated={(mapInstance) => {\n//           mapRef.current = mapInstance;\n\n//           const compass = new L.Control.Compass({\n//             autoActive: true,\n//             showDigit: true,\n//           });\n\n//           compass.addTo(mapRef.current);\n//         }}\n\n\n//       >\n//         <TileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//           // url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n//           // attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n//         />\n        \n//         {/* Marker for Live Location */}\n//         {position && (\n//           <Marker position={position}>\n//             <Popup>\n//               <div>\n//                 <p><strong>You are here!</strong></p>\n//                 <p>{address}</p>\n//                 <button\n//                   onClick={handleLiveLocation}\n//                   style={{\n//                     background: \"#007bff\",\n//                     color: \"#fff\",\n//                     border: \"none\",\n//                     padding: \"5px 10px\",\n//                     borderRadius: \"5px\",\n//                     cursor: \"pointer\"\n//                   }}\n//                 >\n//                   Update Location\n//                 </button>\n//               </div>\n//             </Popup>\n//           </Marker>\n//         )}\n\n//         <LayersControl position=\"topright\">\n//           <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n//             <TileLayer\n//               url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//             />\n//           </LayersControl.BaseLayer>\n\n//           <LayersControl.BaseLayer name=\"Satellite View\">\n//             <TileLayer\n//               attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n//               url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n//             />\n//           </LayersControl.BaseLayer>\n//         </LayersControl>\n\n//         {sourceCoords && destinationCoords && (\n//           <RoutingMachine\n//             source={sourceCoords}\n//             destination={destinationCoords}\n//             travelMode={travelMode}\n//           />\n//         )}\n//       </MapContainer>\n//     </div>\n//   );\n// };\n\n// export default MapPage;\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { MapContainer, TileLayer, useMap, LayersControl, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine\";\nimport \"leaflet-control-geocoder\";\nimport \"leaflet-compass/dist/leaflet-compass.min.css\";\nimport \"leaflet-compass\";\nimport Navbar from './Navbar'; // Adjust the path if needed\n\nconst rkValley = { lat: 14.33499, lng: 78.537372 };\n\n// Default Leaflet marker icon for consistent rendering\nlet DefaultIcon = L.icon({\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n  iconSize: [25, 41], // Ensure marker size is appropriate\n  iconAnchor: [12, 41], // Anchor point for precise positioning\n  popupAnchor: [1, -34], // Popup position relative to marker\n  shadowSize: [41, 41]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst RoutingMachine = ({ source, destination, travelMode }) => {\n  const map = useMap();\n  const mapRef = useRef(null);\n\n  const controlRef = useRef(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n\n  useEffect(() => {\n    if (!map) return;\n    if (mapRef.current) {\n      const compass = new L.Control.Compass({\n        autoActive: true,\n        showDigit: true,\n      });\n      compass.addTo(mapRef.current);\n    }\n    if (!controlRef.current) {\n      controlRef.current = L.Routing.control({\n        waypoints: [],\n        lineOptions: { styles: [{ color: \"blue\", weight: 4 }] },\n        addWaypoints: false,\n        draggableWaypoints: false,\n        fitSelectedRoutes: true,\n        show: false,\n        createMarker: () => null,\n        routeWhileDragging: false,\n      }).addTo(map);\n    }\n\n    if (source && destination) {\n      controlRef.current.setWaypoints([\n        L.latLng(source.lat, source.lng),\n        L.latLng(destination.lat, destination.lng),\n      ]);\n\n      controlRef.current.on(\"routesfound\", function (e) {\n        const route = e.routes[0];\n        const dist = route.summary.totalDistance;\n\n        let speedKmph = travelMode === \"bicycle\" ? 15 : travelMode === \"vehicle\" ? 40 : 5;\n        const timeHours = dist / 1000 / speedKmph;\n        const timeMinutes = Math.round(timeHours * 60);\n\n        setDistance(dist);\n        setDuration(timeMinutes);\n      });\n    }\n\n    return () => {\n      if (controlRef.current) {\n        controlRef.current.setWaypoints([]);\n        setDistance(null);\n        setDuration(null);\n      }\n    };\n  }, [source, destination, travelMode, map]);\n\n  return (\n    <>\n      {distance && duration !== null && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 70,\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            background: \"#ffffffee\",\n            padding: \"10px 16px\",\n            border: \"2px solid #007bff\",\n            borderRadius: \"10px\",\n            zIndex: 1000,\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n          }}\n        >\n          🚩 Distance: {distance < 1000 ? `${Math.round(distance)} m` : `${(distance / 1000).toFixed(2)} km`}   |  \n          ⏱ Time: {duration} min\n        </div>\n      )}\n    </>\n  );\n};\n\nconst MapPage = () => {\n  const [sourceText, setSourceText] = useState(\"\");\n  const [destinationText, setDestinationText] = useState(\"\");\n  const [sourceCoords, setSourceCoords] = useState(null);\n  const [destinationCoords, setDestinationCoords] = useState(null);\n  const [travelMode, setTravelMode] = useState(\"walk\");\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [position, setPosition] = useState(null);\n  const [address, setAddress] = useState(\"Fetching address...\");\n  const [activeInput, setActiveInput] = useState(null);\n  const geocoder = useRef(L.Control.Geocoder.nominatim());\n  const mapRef = useRef(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n\n  const customLocations = {\n    \"Academic Block 1\": { lat: 14.334841, lng: 78.537223, type: \"Academic\", hours: \"9AM–10PM\", description: \"Centralized building with classrooms, seminar halls, and faculty offices for academic activities\" },\n    \"Academic Block 2\": { lat: 14.335089, lng: 78.539779, type: \"Academic\", hours: \"9AM–10PM\", description: \"Administrative and teaching space for various departmental operations and academic sessions\" },\n    \"Boys Hostel 1\": { lat: 14.334589, lng: 78.536720, type: \"Hostel\", hours: \"24x7\", description: \"On-campus residential block for male students with secure lodging and basic amenities\" },\n    \"Boys Hostel 2\": { lat: 14.334773, lng: 78.540234, type: \"Hostel\", hours: \"24x7\", description: \"Well-facilitated hostel for male students offering comfort, security, and communal living\" },\n    \"Chemical Block\": { lat: 14.335304, lng: 78.542505, type: \"Department\", hours: \"9AM–5PM\", description: \"Dedicated facility for chemical engineering studies, including research and lab-based learning.\" },\n    \"Civil Block\": { lat: 14.334801, lng: 78.543514, type: \"Department\", hours: \"9AM–5PM\", description: \"Engineering block supporting civil engineering courses, design labs, and project spaces\" },\n    \"Computer Center\": { lat: 14.336182, lng: 78.539610, type: \"Tech\", hours: \"9AM–5PM\", description: \"Central computing facility with computer labs and high-speed internet resources.\" },\n    \"CSE Block\": { lat: 14.335914, lng: 78.541347, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Computer Science and Engineering providing academic and technical infrastructure\" },\n    \"ECE Block\": { lat: 14.334283, lng: 78.541474, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electronics and Communication Engineering offering labs and classrooms\" },\n    \"EEE Block\": { lat: 14.336851, lng: 78.542395, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Electrical and Electronics Engineering supporting circuits, machines, and power systems\" },\n    \"Girls Hostel 1\": { lat: 14.334402, lng: 78.538412, type: \"Hostel\", hours: \"24x7\", description: \"Accommodation for female students with safety and residential services.\" },\n    \"Girls Hostel 2\": { lat: 14.334361, lng: 78.538610, type: \"Hostel\", hours: \"24x7\", description: \"Residential facility for girl students with necessary hostel amenities.\" },\n    \"Guest House RKV\": { lat: 14.331859, lng: 78.536652, type: \"Guest facility\", hours: \"24x7\", description: \"Well-maintained guest house for hosting visiting faculty, guests, and dignitaries.\" },\n    \"Hospital\": { lat: 14.337157, lng: 78.532596, type: \"Medical\", hours: \"24x7\", description: \"24x7 medical facility for basic healthcare and emergency services on campus\" },\n    \"IQAC\": { lat: 14.336884, lng: 78.540791, type: \"Administration\", hours: \"9AM–5PM\", description: \"Institutional cell responsible for maintaining and enhancing academic quality\" },\n    \"Lab Complex\": { lat: 14.336214, lng: 78.538152, type: \"Department\", hours: \"9AM–5PM\", description: \"Lab facility used by multiple departments for academic experiments and practical sessions\" },\n    \"Laundry\": { lat: 14.333134, lng: 78.538775, type: \"Laundry\", hours: \"9AM–5PM\", description: \"Laundry service center for washing and drying hostel students’ clothes.\" },\n    \"Library\": { lat: 14.335547, lng: 78.538723, type: \"Academic\", hours: \"7AM–11PM\", description: \"Central resource hub with a wide collection of books, journals, and study spaces.\" },\n    \"Masjid\": { lat: 14.339404, lng: 78.535480, type: \"Religious\", hours: \"9AM–7PM\", description: \"Place of worship for Muslim students and staff within the campus.\" },\n    \"Mechanical Block\": { lat: 14.336277, lng: 78.543308, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Mechanical Engineering equipped for academic and technical training.\" },\n    \"Mechanical workshop\": { lat: 14.336200, lng: 78.538661, type: \"Department\", hours: \"9AM–5PM\", description: \"Workshop with tools and machinery for mechanical hands-on training and fabrication\" },\n    \"Mess 1234\": { lat: 14.333753, lng: 78.538477, type: \"Food\", hours: \"7AM–9PM\", description: \"Dining hall serving meals to students with regular breakfast, lunch, and dinner\" },\n    \"Mess 5678\": { lat: 14.333716, lng: 78.538701, type: \"Food\", hours: \"7AM–9PM\", description: \"Catering facility providing nutritious food to hostel residents and students.\" },\n    \"MME Block\": { lat: 14.337335, lng: 78.541188, type: \"Department\", hours: \"9AM–5PM\", description: \"Department of Metallurgical and Materials Engineering for academic and research purposes\" },\n    \"old campus academic blocks\": { lat: 14.339002, lng: 78.537776, type: \"Academic\", hours: \"9AM–5PM\", description: \"Academic buildings from the original campus supporting multiple disciplines\" },\n    \"old campus boys hostel rho\": { lat: 14.339809, lng: 78.537592, type: \"Hostel\", hours: \"24x7\", description: \"Boys’ hostel located in the older section of the campus with residential facilities.\" },\n    \"old campus boys hostel theeta\": { lat: 14.339859, lng: 78.537896, type: \"Hostel\", hours: \"24x7\", description: \"Another boys’ hostel in the old campus with accommodation services.\" },\n    \"old campus girls hostel 1\": { lat: 14.338275, lng: 78.537744, type: \"Hostel\", hours: \"24x7\", description: \"Girls’ hostel located in the old campus area offering safe living spaces.\" },\n    \"old campus girls hostel 2\": { lat: 14.338288, lng: 78.537914, type: \"Hostel\", hours: \"24x7\", description: \"Second girls’ hostel from the old block, supporting student housing.\" },\n    \"Police Station\": { lat: 14.337844, lng: 78.536249, type: \"Security\", hours: \"24x7\", description: \"Campus law enforcement unit ensuring discipline, emergency handling, and general safety.\" },\n    \"Post Office\": { lat: 14.337099, lng: 78.533741, type: \"Service\", hours: \"9AM–4PM\", description: \"Postal unit on campus for sending letters, parcels, and accessing courier services.\" },\n    \"Power House\": { lat: 14.335040, lng: 78.536465, type: \"Utility\", hours: \"9AM–5PM\", description: \"Electricity management center responsible for power regulation and backup systems.\" },\n    \"RKV Ground\": { lat: 14.337409, lng: 78.537874, type: \"Play\", hours: \"6AM-8PM\", description: \"Multipurpose playground for sports practices, matches, and college-level tournaments.\" },\n    \"SBI\": { lat: 14.337374, lng: 78.534579, type: \"Bank\", hours: \"9AM–5PM\", description: \"Banking facility providing financial services including ATM, account handling, and transactions\" },\n    \"Shopping Complex\": { lat: 14.337353, lng: 78.534061, type: \"Shopping\", hours: \"10AM–9PM\", description: \"Commercial area within campus for everyday shopping, snacks, and general items\" },\n    \"Sports Complex\": { lat: 14.337243, lng: 78.533690, type: \"Recreational\", hours: \"5AM–10PM\", description: \"Indoor and outdoor sports facilities including courts, tracks, and fitness zones.\" },\n    \"Student Activity Center\": { lat: 14.338203, lng: 78.540398, type: \"Recreational\", hours: \"9AM–5PM\", description: \"Campus venue for student initiatives, cultural programs, and club activities\" },\n    \"Temple\": { lat: 14.337074, lng: 78.533307, type: \"Religious\", hours: \"6AM–8PM\", description: \"Spiritual place for religious observance and peaceful reflection.\" },\n  };\n\n  // Fetch live location with high accuracy\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (location) => {\n          const { latitude, longitude } = location.coords;\n          console.log(\"Live location fetched:\", { latitude, longitude }); // Debug log\n          setPosition([latitude, longitude]);\n          fetchAddress(latitude, longitude);\n          mapRef.current?.setView([latitude, longitude], 18); // Center map on live location\n        },\n        (error) => {\n          console.error(\"Error fetching live location:\", error);\n          setAddress(\"Unable to retrieve location. Try enabling GPS.\");\n          setPosition([rkValley.lat, rkValley.lng]);\n          alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");\n        },\n        {\n          enableHighAccuracy: true, // Prioritize GPS\n          timeout: 10000, // 10-second timeout\n          maximumAge: 0 // No cached position\n        }\n      );\n    } else {\n      console.error(\"Geolocation not supported\");\n      setAddress(\"Geolocation not supported\");\n      setPosition([rkValley.lat, rkValley.lng]);\n      alert(\"Geolocation is not supported by your browser. Please select a location from the sidebar.\");\n    }\n  }, []);\n\n  // Reverse geocoding function\n  const fetchAddress = async (lat, lng) => {\n    try {\n      const response = await fetch(\n        `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`\n      );\n      const data = await response.json();\n      console.log(\"Reverse geocoding result:\", data); // Debug log\n      setAddress(data.display_name || \"Address not found\");\n    } catch (error) {\n      console.error(\"Error fetching address:\", error);\n      setAddress(\"Address not available\");\n    }\n  };\n\n  // Handle live location button click\n  const handleLiveLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (location) => {\n          const { latitude, longitude } = location.coords;\n          console.log(\"Live location updated:\", { latitude, longitude }); // Debug log\n          setPosition([latitude, longitude]);\n          fetchAddress(latitude, longitude);\n          mapRef.current?.setView([latitude, longitude], 18);\n          L.marker([latitude, longitude])\n            .addTo(mapRef.current)\n            .bindPopup(\"📍 You are here!\")\n            .openPopup();\n        },\n        (error) => {\n          console.error(\"Error fetching live location:\", error);\n          alert(\"Unable to retrieve your location. Please enable GPS or select a location from the sidebar.\");\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0\n        }\n      );\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n\n  const geocodeLocation = (query) => {\n    const normalized = query.trim().toLowerCase();\n    for (const name in customLocations) {\n      if (name.toLowerCase() === normalized) {\n        return Promise.resolve(customLocations[name]);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      geocoder.current.geocode(query, (results) => {\n        if (results && results.length > 0) {\n          const { center } = results[0];\n          resolve({ lat: center.lat, lng: center.lng });\n        } else {\n          reject(\"Location not found\");\n        }\n      });\n    });\n  };\n\n  const filterSuggestions = (query) => {\n    const lowerQuery = query.toLowerCase();\n    const filtered = Object.keys(customLocations)\n      .filter(name => name.toLowerCase().includes(lowerQuery))\n      .map(name => ({ name }));\n    setSuggestions(filtered);\n  };\n\n  const handleSearchChange = (e) => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    filterSuggestions(query);\n  };\n\n  const handleRoute = async () => {\n    try {\n      const src = await geocodeLocation(sourceText);\n      const dest = await geocodeLocation(destinationText);\n      setSourceCoords(src);\n      setDestinationCoords(dest);\n    } catch (err) {\n      alert(\"Failed to find one or both locations\");\n      console.error(err);\n    }\n  };\n\n  const handleBlockClick = (name, coords) => {\n    setDestinationText(name);\n    setDestinationCoords(coords);\n    mapRef.current?.setView([coords.lat, coords.lng], 18);\n\n    if (mapRef.current) {\n      const { type, hours, description } = customLocations[name];\n      const popupContent = `\n        <div>\n          <h3>${name}</h3>\n          <p><strong>Type:</strong> ${type}</p>\n          <p><strong>Hours:</strong> ${hours}</p>\n          <p><strong>Description:</strong> ${description}</p>\n        </div>\n      `;\n      L.popup()\n        .setLatLng([coords.lat, coords.lng])\n        .setContent(popupContent)\n        .openOn(mapRef.current);\n    }\n  };\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100vw\", position: \"relative\" }}>\n      <Navbar />\n      {/* Sidebar */}\n      <div style={{\n        position: \"absolute\",\n        top: 70,\n        left: sidebarOpen ? 10 : -250,\n        width: \"240px\",\n        transition: \"left 0.3s ease-in-out\",\n        zIndex: 1000,\n        background: \"#fff\",\n        padding: \"12px\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n        maxHeight: \"80vh\",\n        overflowY: \"auto\"\n      }}>\n        <h3 style={{ marginBottom: \"10px\", fontSize: \"16px\" }}>📍 Campus Blocks</h3>\n        <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n          {Object.entries(customLocations).map(([name, data]) => (\n            <li key={name}\n              onClick={() => handleBlockClick(name, data)}\n              style={{\n                marginBottom: \"10px\",\n                padding: \"8px\",\n                background: \"#f1f1f1\",\n                borderRadius: \"6px\",\n                cursor: \"pointer\",\n                fontSize: \"14px\"\n              }}>\n              <strong>{name}</strong><br />\n              <small>🧭 {data.type} | 🕒 {data.hours}</small>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Toggle Sidebar */}\n      <button\n        onClick={() => setSidebarOpen(!sidebarOpen)}\n        style={{\n          position: \"absolute\",\n          left: sidebarOpen ? 260 : 10,\n          top: 70,\n          zIndex: 1001,\n          background: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"6px\",\n          padding: \"6px 10px\",\n          cursor: \"pointer\"\n        }}\n      >\n        {sidebarOpen ? \"← Hide\" : \"→ Show\"}\n      </button>\n\n      {/* Live Location Button (Fixed Top-Right) */}\n      <button\n        onClick={handleLiveLocation}\n        style={{\n          position: \"fixed\",\n          right: 10,\n          bottom: 10,\n          zIndex: 1001,\n          background: \"#28a745\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"6px\",\n          padding: \"6px 10px\",\n          cursor: \"pointer\",\n          fontSize: \"14px\"\n        }}\n      >\n        📍 Live Location\n      </button>\n\n      {/* Input Bar */}\n      <div style={{\n        position: \"absolute\",\n        top: 10,\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        zIndex: 1000,\n        display: \"flex\",\n        gap: \"8px\",\n        background: \"#fff\",\n        padding: \"10px\",\n        borderRadius: \"8px\",\n        marginTop: \"70px\",\n        boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\"\n      }}>\n        <input\n          type=\"text\"\n          placeholder=\"Source (e.g., Library)\"\n          value={sourceText}\n          onChange={(e) => {\n            setSourceText(e.target.value);\n            setSearchQuery(e.target.value);\n            filterSuggestions(e.target.value);\n          }}\n          onFocus={() => setActiveInput('source')}\n          style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Destination (e.g., CSE Block)\"\n          value={destinationText}\n          onChange={(e) => {\n            setDestinationText(e.target.value);\n            setSearchQuery(e.target.value);\n            filterSuggestions(e.target.value);\n          }}\n          onFocus={() => setActiveInput('destination')}\n          style={{ padding: \"6px 12px\", fontSize: \"14px\", borderRadius: \"6px\" }}\n        />\n        <select\n          value={travelMode}\n          onChange={(e) => setTravelMode(e.target.value)}\n          style={{\n            padding: \"6px 10px\",\n            fontSize: \"14px\",\n            borderRadius: \"6px\",\n            border: \"1px solid #ccc\",\n            background: \"#fff\",\n            cursor: \"pointer\"\n          }}\n        >\n          <option value=\"walk\">🚶 Walk</option>\n          <option value=\"bicycle\">🚴 Bicycle</option>\n          <option value=\"vehicle\">🚗 Vehicle</option>\n        </select>\n        <button\n          onClick={handleRoute}\n          style={{\n            background: \"#28a745\",\n            color: \"#fff\",\n            border: \"none\",\n            padding: \"6px 10px\",\n            fontSize: \"14px\",\n            borderRadius: \"6px\",\n            cursor: \"pointer\"\n          }}\n        >\n          Route\n        </button>\n      </div>\n\n      {/* Search Suggestions */}\n      {searchQuery && suggestions.length > 0 && (\n        <ul\n          style={{\n            position: \"absolute\",\n            top: 60,\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            background: \"#fff\",\n            width: \"300px\",\n            maxHeight: \"150px\",\n            overflowY: \"auto\",\n            boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n            zIndex: 1000,\n            listStyle: \"none\",\n            padding: 0,\n            margin: 0,\n            marginTop: \"70px\",\n            borderRadius: \"8px\",\n          }}\n        >\n          {suggestions.map((suggestion, index) => (\n            <li\n              key={index}\n              onClick={() => {\n                if (activeInput === 'source') {\n                  setSourceText(suggestion.name);\n                } else if (activeInput === 'destination') {\n                  setDestinationText(suggestion.name);\n                }\n                setSuggestions([]);\n                setSearchQuery('');\n              }}\n              style={{\n                padding: \"8px\",\n                cursor: \"pointer\",\n                backgroundColor: \"#f1f1f1\",\n                borderBottom: \"1px solid #ddd\"\n              }}\n            >\n              {suggestion.name}\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {/* Map */}\n      <MapContainer\n        center={rkValley}\n        zoom={17}\n        style={{ width: \"100%\", height: \"100%\" }}\n        ref={mapRef}\n        whenCreated={(mapInstance) => {\n          mapRef.current = mapInstance;\n          const compass = new L.Control.Compass({\n            autoActive: true,\n            showDigit: true,\n          });\n          compass.addTo(mapRef.current);\n        }}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {position && (\n          <Marker position={position}>\n            <Popup>\n              <div>\n                <p><strong>You are here!</strong></p>\n                <p>{address}</p>\n                <button\n                  onClick={handleLiveLocation}\n                  style={{\n                    background: \"#007bff\",\n                    color: \"#fff\",\n                    border: \"none\",\n                    padding: \"5px 10px\",\n                    borderRadius: \"5px\",\n                    cursor: \"pointer\"\n                  }}\n                >\n                  Update Location\n                </button>\n                <p style={{ marginTop: \"10px\", fontSize: \"12px\" }}>\n                  Not at RGUKT RK Valley? Ensure GPS is enabled or select a location from the sidebar.\n                </p>\n              </div>\n            </Popup>\n          </Marker>\n        )}\n        <LayersControl position=\"topright\">\n          <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n          </LayersControl.BaseLayer>\n          <LayersControl.BaseLayer name=\"Satellite View\">\n            <TileLayer\n              attribution='Tiles © Esri — Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n              url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            />\n          </LayersControl.BaseLayer>\n        </LayersControl>\n        {sourceCoords && destinationCoords && (\n          <RoutingMachine\n            source={sourceCoords}\n            destination={destinationCoords}\n            travelMode={travelMode}\n          />\n        )}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapPage;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}